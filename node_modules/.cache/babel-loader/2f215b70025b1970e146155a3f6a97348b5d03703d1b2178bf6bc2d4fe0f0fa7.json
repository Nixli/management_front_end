{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      list: [],\n      // 分页相关\n      pageno: 1,\n      pagesize: 5,\n      total: 0,\n      // 搜索条件\n      params: {\n        assetName: '',\n        brandModel: ''\n      },\n      // 控制弹框的显示与隐藏\n      dialogFormVisible: false,\n      // 新增表单的数据\n      userFormData: {\n        assetNumber: '',\n        assetName: '',\n        brandModel: '',\n        description: '',\n        originalValue: '',\n        netValue: '',\n        depreciationAmount: ''\n      },\n      // add： 新增   edit: '更新'\n      actionType: '',\n      id: '',\n      bookID: localStorage.getItem('bookID')\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"/depreciationDetail\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          bookID: this.bookID,\n          ...this.params\n        }\n      });\n      this.list = res.data.data.list;\n      this.total = res.data.data.total;\n    },\n    // 点击搜索\n    search() {\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      this.actionType = 'add';\n      // 重置userFormData\n      this.userFormData = {\n        assetNumber: '',\n        assetName: '',\n        brandModel: '',\n        description: '',\n        originalValue: '',\n        netValue: '',\n        depreciationAmount: ''\n      };\n    },\n    //修改弹窗\n    edit(row) {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 数据回显\n      this.userFormData.assetNumber = row.assetNumber;\n      this.userFormData.assetName = row.assetName;\n      this.userFormData.brandModel = row.brandModel;\n      this.userFormData.description = row.description;\n      this.userFormData.originalValue = row.originalValue;\n      this.userFormData.netValue = row.netValue;\n      this.userFormData.depreciationAmount = row.depreciationAmount;\n      // 记录id\n      this.id = row.id;\n      // 记录动作\n      this.actionType = 'edit';\n    },\n    //新增或修改固定资产\n    async submit(id) {\n      // 拷贝userFormData到data\n      const data = {\n        ...this.userFormData\n      };\n      // 修改的时候需要把id带过去\n      if (this.actionType === 'edit') {\n        data.id = this.id;\n      }\n      const res = await axios({\n        url: '/depreciationDetail',\n        method: 'post',\n        data: data\n      });\n      this.dialogFormVisible = false;\n      this.getList();\n    },\n    //删除折旧信息\n    async removeDepreciationDetail(id) {\n      const res = await axios({\n        url: '/removedepreciationDetail',\n        method: 'post',\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\n        data: {\n          assetID: id\n        }\n      });\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","list","pageno","pagesize","total","params","assetName","brandModel","dialogFormVisible","userFormData","assetNumber","description","originalValue","netValue","depreciationAmount","actionType","id","bookID","localStorage","getItem","created","getList","methods","res","method","url","search","pagechange","addOpen","edit","row","submit","removeDepreciationDetail","assetID"],"sources":["src/views/fixedasset/Depreciation.vue"],"sourcesContent":["<template>\r\n    <div style=\"height: auto; width: auto;\">\r\n\r\n        <!-- 搜索新增区域 -->\r\n        <el-card>\r\n            <div style=\"display: flex; flex-direction: row;\">\r\n                <!-- 搜索区域 -->\r\n                <div style=\"flex: 8;\">\r\n                    <el-form :inline=\"true\">\r\n                        <el-form-item label=\"折旧资产名称\">\r\n                            <el-input v-model=\"params.assetName\" placeholder=\"请输入折旧资产名称\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"折旧资产类型\">\r\n                            <el-input v-model=\"params.brandModel\" placeholder=\"请输入折旧资产类型\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </div>\r\n                <!-- 新增区域 -->\r\n                <!-- <div style=\"flex: 2; justify-content: end;\">\r\n                    <el-button type=\"primary\" @click=\"addOpen\">新增折旧</el-button>\r\n                    <el-button type=\"primary\" plain>批量导入</el-button>\r\n                </div> -->\r\n            </div>\r\n        </el-card>\r\n\r\n        <!-- 折旧明细表 -->\r\n        <el-card style=\"margin-top: 20px;\">\r\n\r\n            <el-card>\r\n                <span style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">折旧明细表</span>\r\n            </el-card>\r\n            \r\n            <el-table :data=\"list\" border style=\"width: 100%\">\r\n                <el-table-column prop=\"assetID\" label=\"序号\" width=\"50\"> </el-table-column>\r\n                <el-table-column prop=\"assetNumber\" label=\"资产编号\"> </el-table-column>\r\n                <el-table-column prop=\"assetName\" label=\"资产名称\"> </el-table-column>\r\n                <el-table-column prop=\"brandModel\" label=\"资产类型\"> </el-table-column>\r\n                <el-table-column prop=\"description\" label=\"品牌型号\"> </el-table-column>\r\n                <el-table-column prop=\"ctime\" label=\"开始使用时间\"> </el-table-column>\r\n                <el-table-column prop=\"originalValue\" label=\"资产原值\"> </el-table-column>\r\n                <el-table-column prop=\"netValue\" label=\"资产净值\"> </el-table-column>\r\n                <el-table-column prop=\"depreciationAmount\" label=\"资产折旧金额\"> </el-table-column>\r\n                <el-table-column prop=\"isRetired\" label=\"是否折旧\">\r\n                    <template #default=\"{row}\">\r\n                        <el-button v-if=\"!isRetired\">通过</el-button>\r\n                        <el-button v-else>拒绝</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column fixed=\"right\" label=\"操作\">\r\n                    <template #default=\"{ row }\">\r\n                        <el-button type=\"text\" size=\"small\" @click=\"removeDepreciationDetail(row.assetID)\">删除</el-button>\r\n                        <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">编辑</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <!-- 分页组件 -->\r\n            <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 弹窗区域 -->\r\n        <el-dialog :title=\"actionType == 'add' ? '新增折旧明细' : '编辑折旧明细'\" :visible.sync=\"dialogFormVisible\">\r\n            <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n\r\n                <el-form-item label=\"资产编号\">\r\n                    <el-input v-model=\"userFormData.assetNumber\" placeholder=\"资产编号\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"资产名称\">\r\n                    <el-input v-model=\"userFormData.assetName\" placeholder=\"资产名称\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"资产类型\">\r\n                    <el-input v-model=\"userFormData.brandModel\" placeholder=\"资产类型\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"品牌型号\">\r\n                    <el-input v-model=\"userFormData.description\" placeholder=\"品牌型号\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"资产原值\">\r\n                    <el-input v-model=\"userFormData.originalValue\" placeholder=\"资产原值\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"资产净值\">\r\n                    <el-input v-model=\"userFormData.netValue\" placeholder=\"资产净值\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"资产折旧金额\">\r\n                    <el-input v-model=\"userFormData.depreciationAmount\" placeholder=\"资产折旧金额\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item>\r\n                    <el-button @click=\"submit\">提交</el-button>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            list: [],\r\n            // 分页相关\r\n            pageno: 1,\r\n            pagesize: 5,\r\n            total: 0,\r\n            // 搜索条件\r\n            params: {\r\n                assetName: '',\r\n                brandModel: ''\r\n            },\r\n            // 控制弹框的显示与隐藏\r\n            dialogFormVisible: false,\r\n            // 新增表单的数据\r\n            userFormData: {\r\n                assetNumber: '',\r\n                assetName: '',\r\n                brandModel: '',\r\n                description: '',\r\n                originalValue: '',\r\n                netValue: '',\r\n                depreciationAmount: ''\r\n            },\r\n            // add： 新增   edit: '更新'\r\n            actionType: '',\r\n            id: '',\r\n            bookID:localStorage.getItem('bookID')\r\n        };\r\n    },\r\n    created() {\r\n        this.getList()\r\n    },\r\n\r\n    methods: {\r\n        async getList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"/depreciationDetail\",\r\n                params: {\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                    bookID:this.bookID,\r\n                    ...this.params\r\n                },\r\n            });\r\n            this.list = res.data.data.list;\r\n            this.total = res.data.data.total;\r\n        },\r\n        // 点击搜索\r\n        search() {\r\n            this.getList()\r\n        },\r\n        // 页码改变\r\n        pagechange(pageno) {\r\n            // 条件改变\r\n            this.pageno = pageno\r\n            // 重新请求数据\r\n            this.getList()\r\n        },\r\n        // 打开新增弹窗，\r\n        addOpen() {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true\r\n            // 记录状态\r\n            this.actionType = 'add'\r\n            // 重置userFormData\r\n            this.userFormData = {\r\n                assetNumber: '',\r\n                assetName: '',\r\n                brandModel: '',\r\n                description: '',\r\n                originalValue: '',\r\n                netValue: '',\r\n                depreciationAmount: ''\r\n            }\r\n        },\r\n        //修改弹窗\r\n        edit(row) {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true\r\n            // 数据回显\r\n            this.userFormData.assetNumber = row.assetNumber\r\n            this.userFormData.assetName = row.assetName\r\n            this.userFormData.brandModel = row.brandModel\r\n            this.userFormData.description = row.description\r\n            this.userFormData.originalValue = row.originalValue\r\n            this.userFormData.netValue = row.netValue\r\n            this.userFormData.depreciationAmount = row.depreciationAmount\r\n            // 记录id\r\n            this.id = row.id\r\n            // 记录动作\r\n            this.actionType = 'edit'\r\n        },\r\n        //新增或修改固定资产\r\n        async submit(id) {\r\n            // 拷贝userFormData到data\r\n            const data = { ...this.userFormData }\r\n            // 修改的时候需要把id带过去\r\n            if (this.actionType === 'edit') {\r\n                data.id = this.id\r\n            }\r\n            const res = await axios({\r\n                url: '/depreciationDetail',\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            this.dialogFormVisible = false\r\n            this.getList()\r\n        },\r\n        //删除折旧信息\r\n        async removeDepreciationDetail(id) {\r\n\r\n            const res = await axios({\r\n                url: '/removedepreciationDetail',\r\n                method: 'post',\r\n                // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\r\n                data: {\r\n                    assetID: id\r\n                }\r\n            })\r\n            this.getList()\r\n        },\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-top: 20px;\r\n    margin-bottom: 8px;\r\n    justify-content: center;\r\n}\r\n</style>"],"mappings":"AA2GA,OAAAA,KAAA;AAEA;EAEAC,KAAA;IACA;MACAC,IAAA;MACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACA;MACAC,MAAA;QACAC,SAAA;QACAC,UAAA;MACA;MACA;MACAC,iBAAA;MACA;MACAC,YAAA;QACAC,WAAA;QACAJ,SAAA;QACAC,UAAA;QACAI,WAAA;QACAC,aAAA;QACAC,QAAA;QACAC,kBAAA;MACA;MACA;MACAC,UAAA;MACAC,EAAA;MACAC,MAAA,EAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EAEAC,OAAA;IACA,MAAAD,QAAA;MACA,MAAAE,GAAA,SAAAxB,KAAA;QACAyB,MAAA;QACAC,GAAA;QACApB,MAAA;UACAH,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA,QAAA;UACAc,MAAA,OAAAA,MAAA;UACA,QAAAZ;QACA;MACA;MACA,KAAAJ,IAAA,GAAAsB,GAAA,CAAAvB,IAAA,CAAAA,IAAA,CAAAC,IAAA;MACA,KAAAG,KAAA,GAAAmB,GAAA,CAAAvB,IAAA,CAAAA,IAAA,CAAAI,KAAA;IACA;IACA;IACAsB,OAAA;MACA,KAAAL,OAAA;IACA;IACA;IACAM,WAAAzB,MAAA;MACA;MACA,KAAAA,MAAA,GAAAA,MAAA;MACA;MACA,KAAAmB,OAAA;IACA;IACA;IACAO,QAAA;MACA;MACA,KAAApB,iBAAA;MACA;MACA,KAAAO,UAAA;MACA;MACA,KAAAN,YAAA;QACAC,WAAA;QACAJ,SAAA;QACAC,UAAA;QACAI,WAAA;QACAC,aAAA;QACAC,QAAA;QACAC,kBAAA;MACA;IACA;IACA;IACAe,KAAAC,GAAA;MACA;MACA,KAAAtB,iBAAA;MACA;MACA,KAAAC,YAAA,CAAAC,WAAA,GAAAoB,GAAA,CAAApB,WAAA;MACA,KAAAD,YAAA,CAAAH,SAAA,GAAAwB,GAAA,CAAAxB,SAAA;MACA,KAAAG,YAAA,CAAAF,UAAA,GAAAuB,GAAA,CAAAvB,UAAA;MACA,KAAAE,YAAA,CAAAE,WAAA,GAAAmB,GAAA,CAAAnB,WAAA;MACA,KAAAF,YAAA,CAAAG,aAAA,GAAAkB,GAAA,CAAAlB,aAAA;MACA,KAAAH,YAAA,CAAAI,QAAA,GAAAiB,GAAA,CAAAjB,QAAA;MACA,KAAAJ,YAAA,CAAAK,kBAAA,GAAAgB,GAAA,CAAAhB,kBAAA;MACA;MACA,KAAAE,EAAA,GAAAc,GAAA,CAAAd,EAAA;MACA;MACA,KAAAD,UAAA;IACA;IACA;IACA,MAAAgB,OAAAf,EAAA;MACA;MACA,MAAAhB,IAAA;QAAA,QAAAS;MAAA;MACA;MACA,SAAAM,UAAA;QACAf,IAAA,CAAAgB,EAAA,QAAAA,EAAA;MACA;MACA,MAAAO,GAAA,SAAAxB,KAAA;QACA0B,GAAA;QACAD,MAAA;QACAxB,IAAA,EAAAA;MACA;MACA,KAAAQ,iBAAA;MACA,KAAAa,OAAA;IACA;IACA;IACA,MAAAW,yBAAAhB,EAAA;MAEA,MAAAO,GAAA,SAAAxB,KAAA;QACA0B,GAAA;QACAD,MAAA;QACA;QACAxB,IAAA;UACAiC,OAAA,EAAAjB;QACA;MACA;MACA,KAAAK,OAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}