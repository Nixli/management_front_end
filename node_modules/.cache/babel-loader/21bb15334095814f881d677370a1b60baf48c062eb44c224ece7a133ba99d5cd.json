{"ast":null,"code":"import axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      //图表\n      chart: null,\n      //小类菜名\n      nameList: [],\n      //销量\n      countList: [],\n      //大类菜名\n      dishIDList: '',\n      // 搜索条件\n      params: {\n        //大类ID\n        dishID: undefined,\n        //storeId:localStorage.getItem('storeID'),\n        beginTime: undefined,\n        endTime: undefined\n      },\n      storeId: 0\n    };\n  },\n  mounted() {//最早获取DOM元素的生命周期函数，挂载完毕\n    // this.$nextTick(() => {\n    //   this.initChart()\n    // })\n  },\n  created() {\n    //获取保存的门店ID\n    //this.storeId = localStorage.getItem('storeId'),\n    //获取大类集合\n    this.getDishIDList();\n  },\n  methods: {\n    setOption() {\n      // 初始化echarts实例\n      this.chart = echarts.init(document.getElementById(\"chart\"));\n      this.chart.setOption({\n        title: {\n          text: '菜品销量统计'\n        },\n        tooltip: {\n          trigger: 'item' // 当鼠标悬浮在坐标轴上时触发\n        },\n        xAxis: {\n          type: \"category\",\n          data: this.nameList\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [{\n          name: this.nameList,\n          data: this.countList,\n          type: \"bar\"\n        }]\n      });\n    },\n    // open(msg) {\n    //     this.$message({\n    //       message: msg,\n    //       type: 'success'\n    //     });\n    //   },\n\n    //查询该门店的所有菜品大类\n    async getDishIDList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dish/findDishByStoreID\",\n        params: {\n          //storeId:this.storeId,\n          storeId: 1\n        }\n      });\n      //console.log(this.params)\n      console.log(res.data.data);\n      this.dishIDList = res.data.data;\n    },\n    //查询小类名字\n    async getNameList() {\n      const formattedParams = {\n        ...this.params,\n        beginTime: this.params.beginTime ? dayjs(this.params.beginTime).format('YYYY-MM-DD HH:mm:ss') : null,\n        endTime: this.params.endTime ? dayjs(this.params.endTime).format('YYYY-MM-DD HH:mm:ss') : null\n      };\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/dishes/getDishesNameList\",\n        params: {\n          //storeId:this.storeId,\n          storeId: 1,\n          ...formattedParams\n        }\n      });\n      console.log(res);\n      this.nameList = res.data.data;\n      if (this.nameList == null) {\n        this.$notify.info({\n          title: '消息',\n          message: '该菜系暂未售出'\n        });\n      } else {\n        this.$notify({\n          title: '成功',\n          message: '查询成功',\n          type: 'success'\n        });\n      }\n      //在渲染 图形\n      this.$nextTick(() => {\n        this.setOption();\n      });\n    },\n    //查询小类销量\n    async getCountList() {\n      const formattedParams = {\n        ...this.params,\n        beginTime: this.params.beginTime ? dayjs(this.params.beginTime).format('YYYY-MM-DD HH:mm:ss') : null,\n        endTime: this.params.endTime ? dayjs(this.params.endTime).format('YYYY-MM-DD HH:mm:ss') : null\n      };\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/dishes/getDishesCountList\",\n        params: {\n          //storeId:this.storeId,\n          storeId: 1,\n          ...formattedParams\n        }\n      });\n      console.log(res);\n      this.countList = res.data.data;\n      //在渲染 图形\n      this.$nextTick(() => {\n        this.setOption();\n      });\n    },\n    // 点击搜索\n    search() {\n      this.getNameList();\n      this.getCountList();\n    }\n  }\n  // mounted() {\n  //   // 初始化echarts实例\n  //   this.chart = echarts.init(document.getElementById(\"chart\"));\n  //   // 设置echarts配置项\n  //   setTimeout(() => {\n  //      console.log(\"===\");\n  //     console.log(this.nameList);\n  //     console.log(this.countList);\n  //     console.log(this.dishIDList);\n  //   //   const option = {\n  //       this.chart.setOption({\n  //       xAxis: {\n  //         type: \"category\",\n  //         data: this.nameList,\n  //       },\n  //       yAxis: {\n  //         type: \"value\",\n  //       },\n  //       series: [\n  //         {\n  //           data: this.countList,\n  //           type: \"bar\",\n  //         },\n  //       ],\n  //     });\n  //   }, 2000);\n  //   // 使用配置项绘制图表\n  //   // option && this.chart.setOption(option);\n  // },\n};","map":{"version":3,"names":["axios","dayjs","echarts","data","chart","nameList","countList","dishIDList","params","dishID","undefined","beginTime","endTime","storeId","mounted","created","getDishIDList","methods","setOption","init","document","getElementById","title","text","tooltip","trigger","xAxis","type","yAxis","series","name","res","method","url","console","log","getNameList","formattedParams","format","$notify","info","message","$nextTick","getCountList","search"],"sources":["src/views/dishSales/dishSales.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: auto; width: auto\">\r\n    <el-card>\r\n      <div style=\"display: flex; flex-direction: row\">\r\n        <!-- 搜索区域 -->\r\n        <el-form :inline=\"true\">\r\n          <!-- 菜系下拉列表框 -->\r\n          <el-form-item label=\"该门店所有的菜系\">\r\n            <el-select v-model=\"params.dishID\" class=\"filter-item\" placeholder=\"请选择菜系\">\r\n              <el-option v-for=\"(dish, index) in dishIDList\" :label=\"dish.dishType\" :value=\"dish.dishID\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 时间 -->\r\n          <el-form-item label=\"根据月份查询\">\r\n            <el-date-picker v-model=\"params.beginTime\" type=\"date\" placeholder=\"开始日期\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-date-picker v-model=\"params.endTime\" type=\"date\" placeholder=\"截止日期\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n\r\n          <!-- 搜索按钮 -->\r\n          <el-form-item>\r\n            <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 图形区域 -->\r\n    <el-card>\r\n      <div id=\"chart\" style=\"width: 600px; height: 400px\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //图表\r\n      chart: null,\r\n      //小类菜名\r\n      nameList: [],\r\n      //销量\r\n      countList: [],\r\n      //大类菜名\r\n      dishIDList: '',\r\n      // 搜索条件\r\n      params: {\r\n        //大类ID\r\n        dishID:undefined,\r\n        //storeId:localStorage.getItem('storeID'),\r\n        beginTime: undefined,\r\n        endTime: undefined\r\n      },\r\n      storeId:0,\r\n    };\r\n  },\r\n  mounted() { //最早获取DOM元素的生命周期函数，挂载完毕\r\n    // this.$nextTick(() => {\r\n    //   this.initChart()\r\n    // })\r\n  },\r\n  created() {\r\n    //获取保存的门店ID\r\n    //this.storeId = localStorage.getItem('storeId'),\r\n    //获取大类集合\r\n    this.getDishIDList();\r\n  },\r\n  methods: {\r\n     setOption(){\r\n        // 初始化echarts实例\r\n        this.chart = echarts.init(document.getElementById(\"chart\"));\r\n        this.chart.setOption({\r\n          title: {\r\n              text: '菜品销量统计'\r\n          },\r\n          tooltip: {\r\n              trigger: 'item' // 当鼠标悬浮在坐标轴上时触发\r\n          },\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: this.nameList,\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              name:this.nameList,\r\n              data: this.countList,\r\n              type: \"bar\",\r\n            },\r\n          ],\r\n        });\r\n     },\r\n    // open(msg) {\r\n    //     this.$message({\r\n    //       message: msg,\r\n    //       type: 'success'\r\n    //     });\r\n    //   },\r\n\r\n    //查询该门店的所有菜品大类\r\n   async getDishIDList(){\r\n      const res = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/dish/findDishByStoreID\",\r\n        params: {\r\n          //storeId:this.storeId,\r\n          storeId: 1,\r\n        },\r\n      });\r\n      //console.log(this.params)\r\n      console.log(res.data.data);\r\n      this.dishIDList = res.data.data;\r\n    },\r\n\r\n    //查询小类名字\r\n    async getNameList(){\r\n      const formattedParams = {\r\n          ...this.params,\r\n          beginTime: this.params.beginTime ? dayjs(this.params.beginTime).format('YYYY-MM-DD HH:mm:ss') : null,\r\n          endTime: this.params.endTime ? dayjs(this.params.endTime).format('YYYY-MM-DD HH:mm:ss') : null,\r\n      };\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/dishes/getDishesNameList\",\r\n        params: {\r\n          //storeId:this.storeId,\r\n          storeId: 1,\r\n          ...formattedParams,\r\n        },\r\n      });\r\n      console.log(res);\r\n      this.nameList = res.data.data;\r\n      if(this.nameList==null){\r\n        this.$notify.info({\r\n          title: '消息',\r\n          message: '该菜系暂未售出'\r\n        });\r\n      }else{\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '查询成功',\r\n          type: 'success'\r\n        });\r\n      }\r\n      //在渲染 图形\r\n      this.$nextTick(() => {\r\n        this.setOption();\r\n      })\r\n    },\r\n\r\n    //查询小类销量\r\n    async getCountList(){\r\n      const formattedParams = {\r\n          ...this.params,\r\n          beginTime: this.params.beginTime ? dayjs(this.params.beginTime).format('YYYY-MM-DD HH:mm:ss') : null,\r\n          endTime: this.params.endTime ? dayjs(this.params.endTime).format('YYYY-MM-DD HH:mm:ss') : null,\r\n      };\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/dishes/getDishesCountList\",\r\n        params: {\r\n          //storeId:this.storeId,\r\n          storeId: 1,\r\n          ...formattedParams,\r\n        },\r\n      });\r\n      console.log(res);\r\n      this.countList = res.data.data;\r\n      //在渲染 图形\r\n      this.$nextTick(() => {\r\n         this.setOption();\r\n      })\r\n    },\r\n\r\n    // 点击搜索\r\n    search() {\r\n      this.getNameList();\r\n      this.getCountList();\r\n    },\r\n  },\r\n  // mounted() {\r\n  //   // 初始化echarts实例\r\n  //   this.chart = echarts.init(document.getElementById(\"chart\"));\r\n  //   // 设置echarts配置项\r\n  //   setTimeout(() => {\r\n  //      console.log(\"===\");\r\n  //     console.log(this.nameList);\r\n  //     console.log(this.countList);\r\n  //     console.log(this.dishIDList);\r\n  //   //   const option = {\r\n  //       this.chart.setOption({\r\n  //       xAxis: {\r\n  //         type: \"category\",\r\n  //         data: this.nameList,\r\n  //       },\r\n  //       yAxis: {\r\n  //         type: \"value\",\r\n  //       },\r\n  //       series: [\r\n  //         {\r\n  //           data: this.countList,\r\n  //           type: \"bar\",\r\n  //         },\r\n  //       ],\r\n  //     });\r\n  //   }, 2000);\r\n  //   // 使用配置项绘制图表\r\n  //   // option && this.chart.setOption(option);\r\n  // },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  margin-bottom: 8px;\r\n  justify-content: center;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}