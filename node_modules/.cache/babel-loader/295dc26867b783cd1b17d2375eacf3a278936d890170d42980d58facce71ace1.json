{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nexport default {\n  data() {\n    return {\n      paymentList: [],\n      payment: 0,\n      collectionList: [],\n      collection: 0,\n      currentTime: '',\n      myChart: {},\n      // \n      series: [],\n      payData: [],\n      collectionData: [],\n      profitData: []\n    };\n  },\n  mounted() {\n    // 基于准备好的dom，初始化echarts实例\n    this.myChart = echarts.init(document.getElementById('line'));\n    // 绘制图表\n  },\n  created() {\n    // this.getCollectionDataList()\n    // this.getPayDataList()\n    this.getPaymentList();\n    this.getCollectionList();\n    Promise.all([this.getCollectionDataList(), this.getPayDataList()]).then(res => {\n      console.log(this.collectionData, this.payData);\n      this.getProfitData();\n    });\n    setTimeout(() => {\n      this.series = [{\n        name: '每月收入',\n        type: 'line',\n        data: this.collectionData\n      }, {\n        name: '每月费用',\n        type: 'line',\n        data: this.payData\n      }, {\n        name: '每月利润',\n        type: 'line',\n        data: this.profitData\n      }];\n    }, 2000);\n  },\n  watch: {\n    series: {\n      handler() {\n        this.myChart.setOption({\n          title: {\n            text: '财务分析（近一年）'\n          },\n          legend: {\n            data: ['每月收入', '每月费用', '每月利润']\n          },\n          tooltip: {},\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            // x轴\n            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n          },\n          yAxis: {},\n          series: this.series\n        });\n      },\n      deep: true\n    }\n  },\n  methods: {\n    async getProfitData() {\n      for (let i = 0; i < 12; i++) {\n        console.log(this.collectionData[i]);\n        const collection = this.collectionData[i] || 0; // 如果值为 undefined 或 null，则置为 0\n        const pay = this.payData[i] || 0; // 如果值为 undefined 或 null，则置为 0\n        const profit = collection - pay;\n        this.profitData.push(profit);\n      }\n      // console.log(this.profitData);\n    },\n    async getCollectionDataList() {\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '收',\n          bookID: localStorage.getItem('bookID')\n        }\n      });\n\n      // 获取数据\n      const data = res.data.data.list;\n\n      // 计算每个月份的总金额\n      const payData = {};\n      data.forEach(item => {\n        const month = dayjs(item.cime).format('YYYY-MM');\n        if (!payData[month]) {\n          payData[month] = 0;\n        }\n        payData[month] += parseFloat(item.totalAmount);\n      });\n\n      // 将结果按月份排序并转换为数组\n      const sortedPayData = Object.entries(payData).sort(([month1], [month2]) => month1.localeCompare(month2)).map(([month, total]) => total);\n      this.collectionData = sortedPayData;\n      // console.log(this.collectionData)\n      // console.log(sortedPayData);\n    },\n    async getPayDataList() {\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '付',\n          bookID: localStorage.getItem('bookID')\n        }\n      });\n\n      // 获取数据\n      const data = res.data.data.list;\n\n      // 计算每个月份的总金额\n      const payData = {};\n      data.forEach(item => {\n        const month = dayjs(item.cime).format('YYYY-MM');\n        if (!payData[month]) {\n          payData[month] = 0;\n        }\n        payData[month] += parseFloat(item.totalAmount);\n      });\n\n      // 将结果按月份排序并转换为数组\n      const sortedPayData = Object.entries(payData).sort(([month1], [month2]) => month1.localeCompare(month2)).map(([month, total]) => total);\n      this.payData = sortedPayData;\n      // console.log(this.payData)\n      // console.log(sortedPayData);\n    },\n    // 计算应收账款\n    async getPaymentList() {\n      const currentYearMonth = dayjs().format('YYYY-MM');\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '付',\n          bookID: localStorage.getItem('bookID')\n        }\n      });\n      // 处理数据：将 cime 格式化为 'YYYY-MM' 的形式\n      this.paymentList = res.data.data.list.map(item => ({\n        ...item,\n        cime: dayjs(item.cime).format('YYYY-MM')\n      }));\n      // console.log(this.paymentList);\n      // 过滤出本月的数据\n      this.paymentList = this.paymentList.filter(item => {\n        // 比较年份月份是否与当前年份月份一致\n        return item.cime === currentYearMonth;\n      });\n      // console.log(currentYearMonth);\n      // console.log(this.paymentList);\n      // 累加每个对象的totalAmount属性\n      let totalPaymentAmount = 0;\n      this.paymentList.forEach(payment => {\n        totalPaymentAmount += parseFloat(payment.totalAmount);\n      });\n      this.payment = totalPaymentAmount;\n      // console.log(this.payment)\n    },\n    // 计算应付账款\n    async getCollectionList() {\n      const currentYearMonth = dayjs().format('YYYY-MM');\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '收',\n          bookID: localStorage.getItem('bookID')\n        }\n      });\n      this.collectionList = res.data.data.list.map(item => ({\n        ...item,\n        cime: dayjs(item.cime).format('YYYY-MM')\n      }));\n      // console.log(this.collectionList);\n      this.collectionList = this.collectionList.filter(item => {\n        return item.cime === currentYearMonth;\n      });\n      // console.log(this.collectionList);\n      // 累加每个对象的totalAmount属性\n      let totalPaymentAmount = 0;\n      this.collectionList.forEach(payment => {\n        totalPaymentAmount += parseFloat(payment.totalAmount);\n      });\n      this.collection = totalPaymentAmount;\n    }\n  }\n};","map":{"version":3,"names":["echarts","axios","dayjs","data","paymentList","payment","collectionList","collection","currentTime","myChart","series","payData","collectionData","profitData","mounted","init","document","getElementById","created","getPaymentList","getCollectionList","Promise","all","getCollectionDataList","getPayDataList","then","res","console","log","getProfitData","setTimeout","name","type","watch","handler","setOption","title","text","legend","tooltip","xAxis","boundaryGap","yAxis","deep","methods","i","pay","profit","push","url","method","params","pageno","pagesize","voucherWord","bookID","localStorage","getItem","list","forEach","item","month","cime","format","parseFloat","totalAmount","sortedPayData","Object","entries","sort","month1","month2","localeCompare","map","total","currentYearMonth","filter","totalPaymentAmount"],"sources":["src/views/home/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <img src=\"@/assets/收款进度.svg\" /> -->\r\n    <el-card style=\"margin-right: 30px;\">\r\n      <div>\r\n        <span style=\"font-size: 16px; font-family:'Times New Roman', Times, serif;font-weight: bold;\">财务指标</span>\r\n      </div>\r\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n        <el-col :span=\"8\">\r\n          <div class=\"grid-content bg-purple\" style=\"display: flex;text-align: center;justify-content: center;\">\r\n            <img src=\"@/assets/收款进度.svg\" width=\"25%\" height=\"25%\" style=\"margin-left: 20px; flex:3\">\r\n            <div style=\"display: flex; flex-direction: column; text-align: center;justify-content: center; flex: 7;\">\r\n              <span style=\"font-size: 36px;\">{{ collection }}</span>\r\n              <span style=\"font-size: 16px; margin-top: 10px;\">应收账款</span>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <div class=\"grid-content bg-purple\" style=\"display: flex;text-align: center;justify-content: center;\">\r\n            <img src=\"@/assets/付款进度.svg\" width=\"25%\" height=\"25%\" style=\"margin-left: 20px; flex:3\">\r\n            <div style=\"display: flex; flex-direction: column; text-align: center;justify-content: center; flex: 7;\">\r\n              <span style=\"font-size: 36px;\">{{ payment }}</span>\r\n              <span style=\"font-size: 16px; margin-top: 10px;\">应付账款</span>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"8\">\r\n          <div class=\"grid-content bg-purple\" style=\"display: flex;text-align: center;justify-content: center;\">\r\n            <img src=\"@/assets/利润分析.svg\" width=\"113px\" height=\"99px\" style=\"margin-left: 20px; flex:3\">\r\n            <div style=\"display: flex; flex-direction: column; text-align: center;justify-content: center; flex: 7;\">\r\n              <span style=\"font-size: 36px;\">{{ collection - payment }}</span>\r\n              <span style=\"font-size: 16px; margin-top: 10px;\">利润总额</span>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <div id=\"line\" style=\"width: 1200px; height: 400px; margin-top: 30px;\"></div>\r\n      {{ currentTime }}\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nexport default {\r\n  data() {\r\n    return {\r\n      paymentList: [],\r\n      payment: 0,\r\n      collectionList: [],\r\n      collection: 0,\r\n      currentTime: '',\r\n      myChart: {},\r\n      // \r\n      series: [],\r\n      payData: [],\r\n      collectionData: [],\r\n      profitData: [],\r\n    }\r\n  },\r\n  mounted() {\r\n    // 基于准备好的dom，初始化echarts实例\r\n    this.myChart = echarts.init(document.getElementById('line'));\r\n    // 绘制图表\r\n  },\r\n  created() {\r\n    // this.getCollectionDataList()\r\n    // this.getPayDataList()\r\n    this.getPaymentList()\r\n    this.getCollectionList()\r\n    Promise.all([this.getCollectionDataList(), this.getPayDataList()]).then(res => {\r\n      console.log(this.collectionData, this.payData)\r\n      this.getProfitData()\r\n\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.series = [\r\n        {\r\n          name: '每月收入',\r\n          type: 'line',\r\n          data: this.collectionData\r\n        },\r\n        {\r\n          name: '每月费用',\r\n          type: 'line',\r\n          data: this.payData\r\n        },\r\n        {\r\n          name: '每月利润',\r\n          type: 'line',\r\n          data: this.profitData\r\n        },\r\n      ]\r\n    }, 2000)\r\n  },\r\n  watch: {\r\n    series: {\r\n      handler() {\r\n        this.myChart.setOption({\r\n          title: {\r\n            text: '财务分析（近一年）'\r\n          },\r\n          legend: {\r\n            data: ['每月收入', '每月费用', '每月利润']\r\n          },\r\n          tooltip: {},\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            // x轴\r\n            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n          },\r\n          yAxis: {},\r\n          series: this.series\r\n        });\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    async getProfitData() {\r\n      for (let i = 0; i < 12; i++) {\r\n        console.log(this.collectionData[i])\r\n        const collection = this.collectionData[i] || 0; // 如果值为 undefined 或 null，则置为 0\r\n        const pay = this.payData[i] || 0; // 如果值为 undefined 或 null，则置为 0\r\n        const profit = collection - pay;\r\n        this.profitData.push(profit);\r\n      }\r\n      // console.log(this.profitData);\r\n    },\r\n\r\n\r\n\r\n    async getCollectionDataList() {\r\n      const res = await axios({\r\n        url: '/voucher',\r\n        method: 'get',\r\n        params: {\r\n          pageno: this.pageno,\r\n          pagesize: this.pagesize,\r\n          voucherWord: '收',\r\n          bookID: localStorage.getItem('bookID')\r\n        }\r\n      });\r\n\r\n      // 获取数据\r\n      const data = res.data.data.list;\r\n\r\n      // 计算每个月份的总金额\r\n      const payData = {};\r\n      data.forEach(item => {\r\n        const month = dayjs(item.cime).format('YYYY-MM');\r\n        if (!payData[month]) {\r\n          payData[month] = 0;\r\n        }\r\n        payData[month] += parseFloat(item.totalAmount);\r\n      });\r\n\r\n      // 将结果按月份排序并转换为数组\r\n      const sortedPayData = Object.entries(payData)\r\n        .sort(([month1], [month2]) => month1.localeCompare(month2))\r\n        .map(([month, total]) => total);\r\n      this.collectionData = sortedPayData;\r\n      // console.log(this.collectionData)\r\n      // console.log(sortedPayData);\r\n    },\r\n\r\n    async getPayDataList() {\r\n      const res = await axios({\r\n        url: '/voucher',\r\n        method: 'get',\r\n        params: {\r\n          pageno: this.pageno,\r\n          pagesize: this.pagesize,\r\n          voucherWord: '付',\r\n          bookID: localStorage.getItem('bookID')\r\n        }\r\n      });\r\n\r\n      // 获取数据\r\n      const data = res.data.data.list;\r\n\r\n      // 计算每个月份的总金额\r\n      const payData = {};\r\n      data.forEach(item => {\r\n        const month = dayjs(item.cime).format('YYYY-MM');\r\n        if (!payData[month]) {\r\n          payData[month] = 0;\r\n        }\r\n        payData[month] += parseFloat(item.totalAmount);\r\n      });\r\n\r\n      // 将结果按月份排序并转换为数组\r\n      const sortedPayData = Object.entries(payData)\r\n        .sort(([month1], [month2]) => month1.localeCompare(month2))\r\n        .map(([month, total]) => total);\r\n      this.payData = sortedPayData;\r\n      // console.log(this.payData)\r\n      // console.log(sortedPayData);\r\n    },\r\n\r\n    // 计算应收账款\r\n    async getPaymentList() {\r\n      const currentYearMonth = dayjs().format('YYYY-MM');\r\n      const res = await axios({\r\n        url: '/voucher',\r\n        method: 'get',\r\n        params: {\r\n          pageno: this.pageno,\r\n          pagesize: this.pagesize,\r\n          voucherWord: '付',\r\n          bookID: localStorage.getItem('bookID')\r\n        }\r\n      });\r\n      // 处理数据：将 cime 格式化为 'YYYY-MM' 的形式\r\n      this.paymentList = res.data.data.list.map(item => ({\r\n        ...item,\r\n        cime: dayjs(item.cime).format('YYYY-MM')\r\n      }));\r\n      // console.log(this.paymentList);\r\n      // 过滤出本月的数据\r\n      this.paymentList = this.paymentList.filter(item => {\r\n        // 比较年份月份是否与当前年份月份一致\r\n        return item.cime === currentYearMonth;\r\n      });\r\n      // console.log(currentYearMonth);\r\n      // console.log(this.paymentList);\r\n      // 累加每个对象的totalAmount属性\r\n      let totalPaymentAmount = 0;\r\n      this.paymentList.forEach(payment => {\r\n        totalPaymentAmount += parseFloat(payment.totalAmount);\r\n      });\r\n      this.payment = totalPaymentAmount;\r\n      // console.log(this.payment)\r\n    },\r\n\r\n    // 计算应付账款\r\n    async getCollectionList() {\r\n      const currentYearMonth = dayjs().format('YYYY-MM');\r\n      const res = await axios({\r\n        url: '/voucher',\r\n        method: 'get',\r\n        params: {\r\n          pageno: this.pageno,\r\n          pagesize: this.pagesize,\r\n          voucherWord: '收',\r\n          bookID: localStorage.getItem('bookID')\r\n        }\r\n      })\r\n      this.collectionList = res.data.data.list.map(item => ({\r\n        ...item,\r\n        cime: dayjs(item.cime).format('YYYY-MM')\r\n      }));\r\n      // console.log(this.collectionList);\r\n      this.collectionList = this.collectionList.filter(item => {\r\n        return item.cime === currentYearMonth;\r\n      })\r\n      // console.log(this.collectionList);\r\n      // 累加每个对象的totalAmount属性\r\n      let totalPaymentAmount = 0;\r\n      this.collectionList.forEach(payment => {\r\n        totalPaymentAmount += parseFloat(payment.totalAmount);\r\n      });\r\n      this.collection = totalPaymentAmount;\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-row {\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.el-col {\r\n  border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n  background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n  background: rgb(249, 249, 249);\r\n}\r\n\r\n.bg-purple-light {\r\n  background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n  border-radius: 4px;\r\n  min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n  padding: 10px 0;\r\n  background-color: #f9fafc;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}