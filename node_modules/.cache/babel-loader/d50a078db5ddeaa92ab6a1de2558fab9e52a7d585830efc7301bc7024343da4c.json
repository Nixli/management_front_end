{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      list: [],\n      // 分页相关\n      pageno: 1,\n      pagesize: 5,\n      total: 0,\n      // 搜索条件\n      params: {\n        employeeDes: '',\n        phone: '',\n        email: ''\n      },\n      // 控制弹框的显示与隐藏\n      dialogFormVisible: false,\n      // 新增表单的数据\n      userFormData: {\n        employeeDes: '',\n        sex: '',\n        roleID: '',\n        storeID: '',\n        password: '',\n        phone: '',\n        email: '',\n        bankcardID: '',\n        createTime: '',\n        endTime: '',\n        isResign: false,\n        accountBook: {\n          bookID: localStorage.getItem('bookID')\n        } // 使用关系属性名\n      },\n      // add： 新增   edit: '更新'\n      actionType: '',\n      id: '',\n      bookID: localStorage.getItem('bookID')\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/employee/findAllEmployee\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          ...this.params\n          // employeeDes: this.employeeDes,\n          // sex: this.sex,\n          // roleID: this.roleID,\n          // storeID: this.storeID,\n          // password: this.password,\n          // phone: this.phone,\n          // email: this.email,\n          // bankcardID: this.bankcardID,\n          // createTime: this.createTime,\n          // endTime: this.endTime\n        }\n      });\n      this.list = res.data.data;\n      this.total = res.data.count;\n    },\n    // 点击搜索\n    search() {\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      this.actionType = 'add';\n      // 重置userFormData\n      this.userFormData = {\n        employeeDes: '',\n        sex: '',\n        roleID: '',\n        storeID: '',\n        password: '',\n        phone: '',\n        email: '',\n        bankcardID: '',\n        createTime: '',\n        endTime: '',\n        isResign: false,\n        accountBook: {\n          bookID: localStorage.getItem('bookID')\n        } // 使用关系属性名\n      };\n    },\n    //修改弹窗\n    edit(row) {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 数据回显\n      this.userFormData.name = row.name;\n      this.userFormData.age = row.age;\n      this.userFormData.sex = row.sex;\n      this.userFormData.position = row.position;\n      this.userFormData.department = row.department;\n      // 记录id\n      this.id = row.employeeID;\n      this.userFormData.isResign = row.isResign;\n      // 记录动作\n      this.actionType = 'edit';\n    },\n    //新增或修改固定资产\n    async submit(id) {\n      // 拷贝userFormData到data\n      const data = {\n        ...this.userFormData\n      };\n      // 修改的时候需要把id带过去\n      if (this.actionType === 'edit') {\n        data.employeeID = this.id;\n      }\n      const res = await axios({\n        url: '/employee',\n        method: 'post',\n        data: data\n      });\n      this.dialogFormVisible = false;\n      this.getList();\n    },\n    //删除固定资产\n    async removeFixedasset(id) {\n      const res = await axios({\n        url: '/removeEmployee',\n        method: 'post',\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\n        data: {\n          employeeID: id\n        }\n      });\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","list","pageno","pagesize","total","params","employeeDes","phone","email","dialogFormVisible","userFormData","sex","roleID","storeID","password","bankcardID","createTime","endTime","isResign","accountBook","bookID","localStorage","getItem","actionType","id","created","getList","methods","res","method","url","count","search","pagechange","addOpen","edit","row","name","age","position","department","employeeID","submit","removeFixedasset"],"sources":["src/views/system/System.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: auto; width: auto;\">\r\n\r\n    <!-- 搜素和新增区域 -->\r\n    <el-card>\r\n      <div style=\"display: flex; flex-direction: row;\">\r\n        <!-- 搜索区域 -->\r\n        <el-form :inline=\"true\">\r\n          <el-form-item label=\"员工姓名\">\r\n            <el-input v-model=\"params.employeeDes\" placeholder=\"请输入员工姓名\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"员工手机号\">\r\n            <el-input v-model=\"params.phone\" placeholder=\"请输入员工手机号\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"员工邮箱\">\r\n            <el-input v-model=\"params.email\" placeholder=\"请输入员工邮箱\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n          </el-form-item>\r\n          <el-button type=\"primary\" @click=\"addOpen\">新增员工信息</el-button>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 员工信息表 -->\r\n    <el-card style=\"margin-top: 20px;\">\r\n\r\n      <el-card>\r\n        <span style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">员工信息表</span>\r\n      </el-card>\r\n\r\n      <el-table :data=\"list\" border style=\"width: 100%\">\r\n        <el-table-column prop=\"employeeDes\" label=\"员工姓名\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"sex\" label=\"员工性别\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"手机号\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"bankcardID\" label=\"银行卡号\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"password\" label=\"密码\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"roleID\" label=\"角色\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"storeID\" label=\"门店\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"员工入职日期\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"endTime\" label=\"员工离职日期\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"state\" label=\"状态\" align=\"center\">\r\n          <template #default=\"{ row }\">\r\n            {{ row.isResign ? '离职' : '在职' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"150\" align=\"center\">\r\n          <template #default=\"{ row }\">\r\n            <el-button :disabled=\"!row.isResign\" type=\"text\" size=\"small\"\r\n              @click=\"removeFixedasset(row.employeeID)\">删除</el-button>\r\n            <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n        :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 弹窗区域 -->\r\n    <el-dialog :title=\"actionType == 'add' ? '新增员工信息' : '修改员工信息'\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n\r\n        <el-form-item label=\"员工姓名\">\r\n          <el-input v-model=\"userFormData.employeeDes\" placeholder=\"员工姓名\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"性别\">\r\n          <el-input v-model=\"userFormData.sex\" placeholder=\"性别\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"角色\">\r\n          <el-input v-model=\"userFormData.roleID\" placeholder=\"角色\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"门店\">\r\n          <el-input v-model=\"userFormData.storeID\" placeholder=\"门店\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n          <el-input :type=\"showPwd ? 'text' : 'password'\" placeholder=\"请输入密码\" v-model=\"userFormData.password\">\r\n            <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\r\n            <!-- 尾部插入图标: -->\r\n            <i slot=\"suffix\" @click=\"clickEyes\" class=\"iconfont\"\r\n              :class=\"{ 'icon-yanjing': showPwd, 'icon-biyanjing': !showPwd }\"></i>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"手机号\">\r\n          <el-input v-model=\"userFormData.phone\" placeholder=\"手机号\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"userFormData.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"银行卡号\">\r\n          <el-input v-model=\"userFormData.bankcardID\" placeholder=\"银行卡号\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"创建时间\">\r\n          <el-date-picker v-model=\"userFormData.createTime\" type=\"datetime\" placeholder=\"选择日期时间\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"离职时间\">\r\n          <el-date-picker v-model=\"userFormData.endTime\" type=\"datetime\" placeholder=\"选择日期时间\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n\r\n        <el-switch v-model=\"userFormData.isResign\" active-text=\"离职\" inactive-text=\"在职\" style=\"margin-left: 50px;\">\r\n        </el-switch>\r\n\r\n        <el-form-item style=\"margin-top: 20px;\">\r\n          <el-button @click=\"submit\">提交</el-button>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      list: [],\r\n      // 分页相关\r\n      pageno: 1,\r\n      pagesize: 5,\r\n      total: 0,\r\n      // 搜索条件\r\n      params: {\r\n        employeeDes: '',\r\n        phone: '',\r\n        email: '',\r\n      },\r\n      // 控制弹框的显示与隐藏\r\n      dialogFormVisible: false,\r\n      // 新增表单的数据\r\n      userFormData: {\r\n        employeeDes: '',\r\n        sex: '',\r\n        roleID: '',\r\n        storeID: '',\r\n        password: '',\r\n        phone: '',\r\n        email: '',\r\n        bankcardID: '',\r\n        createTime: '',\r\n        endTime: '',\r\n        isResign: false,\r\n        accountBook: { bookID: localStorage.getItem('bookID') } // 使用关系属性名\r\n      },\r\n      // add： 新增   edit: '更新'\r\n      actionType: '',\r\n      id: '',\r\n      bookID: localStorage.getItem('bookID')\r\n    };\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      const res = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/employee/findAllEmployee\",\r\n        params: {\r\n          pageno: this.pageno,\r\n          pagesize: this.pagesize,\r\n          ...this.params\r\n          // employeeDes: this.employeeDes,\r\n          // sex: this.sex,\r\n          // roleID: this.roleID,\r\n          // storeID: this.storeID,\r\n          // password: this.password,\r\n          // phone: this.phone,\r\n          // email: this.email,\r\n          // bankcardID: this.bankcardID,\r\n          // createTime: this.createTime,\r\n          // endTime: this.endTime\r\n        },\r\n      });\r\n      this.list = res.data.data;\r\n      this.total = res.data.count;\r\n    },\r\n\r\n    // 点击搜索\r\n    search() {\r\n      this.getList()\r\n    },\r\n\r\n    // 页码改变\r\n    pagechange(pageno) {\r\n      // 条件改变\r\n      this.pageno = pageno\r\n      // 重新请求数据\r\n      this.getList()\r\n    },\r\n\r\n    // 打开新增弹窗，\r\n    addOpen() {\r\n      // 打开弹窗\r\n      this.dialogFormVisible = true\r\n      // 记录状态\r\n      this.actionType = 'add'\r\n      // 重置userFormData\r\n      this.userFormData = {\r\n        employeeDes: '',\r\n        sex: '',\r\n        roleID: '',\r\n        storeID: '',\r\n        password: '',\r\n        phone: '',\r\n        email: '',\r\n        bankcardID: '',\r\n        createTime: '',\r\n        endTime: '',\r\n        isResign: false,\r\n        accountBook: { bookID: localStorage.getItem('bookID') } // 使用关系属性名\r\n      }\r\n    },\r\n\r\n    //修改弹窗\r\n    edit(row) {\r\n      // 打开弹窗\r\n      this.dialogFormVisible = true\r\n      // 数据回显\r\n      this.userFormData.name = row.name\r\n      this.userFormData.age = row.age\r\n      this.userFormData.sex = row.sex\r\n      this.userFormData.position = row.position\r\n      this.userFormData.department = row.department\r\n      // 记录id\r\n      this.id = row.employeeID\r\n      this.userFormData.isResign = row.isResign\r\n      // 记录动作\r\n      this.actionType = 'edit'\r\n    },\r\n\r\n    //新增或修改固定资产\r\n    async submit(id) {\r\n      // 拷贝userFormData到data\r\n      const data = { ...this.userFormData }\r\n      // 修改的时候需要把id带过去\r\n      if (this.actionType === 'edit') {\r\n        data.employeeID = this.id\r\n      }\r\n      const res = await axios({\r\n        url: '/employee',\r\n        method: 'post',\r\n        data: data\r\n      })\r\n      this.dialogFormVisible = false\r\n      this.getList()\r\n    },\r\n    //删除固定资产\r\n    async removeFixedasset(id) {\r\n\r\n      const res = await axios({\r\n        url: '/removeEmployee',\r\n        method: 'post',\r\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\r\n        data: {\r\n          employeeID: id\r\n        }\r\n      })\r\n      this.getList()\r\n    },\r\n\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  margin-bottom: 8px;\r\n  justify-content: center;\r\n}\r\n</style>"],"mappings":"AAgIA,OAAAA,KAAA;AAEA;EAEAC,KAAA;IACA;MACAC,IAAA;MACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACA;MACAC,MAAA;QACAC,WAAA;QACAC,KAAA;QACAC,KAAA;MACA;MACA;MACAC,iBAAA;MACA;MACAC,YAAA;QACAJ,WAAA;QACAK,GAAA;QACAC,MAAA;QACAC,OAAA;QACAC,QAAA;QACAP,KAAA;QACAC,KAAA;QACAO,UAAA;QACAC,UAAA;QACAC,OAAA;QACAC,QAAA;QACAC,WAAA;UAAAC,MAAA,EAAAC,YAAA,CAAAC,OAAA;QAAA;MACA;MACA;MACAC,UAAA;MACAC,EAAA;MACAJ,MAAA,EAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,OAAA;EACA;EAEAC,OAAA;IACA,MAAAD,QAAA;MACA,MAAAE,GAAA,SAAA7B,KAAA;QACA8B,MAAA;QACAC,GAAA;QACAzB,MAAA;UACAH,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA,QAAA;UACA,QAAAE;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;MACA;MACA,KAAAJ,IAAA,GAAA2B,GAAA,CAAA5B,IAAA,CAAAA,IAAA;MACA,KAAAI,KAAA,GAAAwB,GAAA,CAAA5B,IAAA,CAAA+B,KAAA;IACA;IAEA;IACAC,OAAA;MACA,KAAAN,OAAA;IACA;IAEA;IACAO,WAAA/B,MAAA;MACA;MACA,KAAAA,MAAA,GAAAA,MAAA;MACA;MACA,KAAAwB,OAAA;IACA;IAEA;IACAQ,QAAA;MACA;MACA,KAAAzB,iBAAA;MACA;MACA,KAAAc,UAAA;MACA;MACA,KAAAb,YAAA;QACAJ,WAAA;QACAK,GAAA;QACAC,MAAA;QACAC,OAAA;QACAC,QAAA;QACAP,KAAA;QACAC,KAAA;QACAO,UAAA;QACAC,UAAA;QACAC,OAAA;QACAC,QAAA;QACAC,WAAA;UAAAC,MAAA,EAAAC,YAAA,CAAAC,OAAA;QAAA;MACA;IACA;IAEA;IACAa,KAAAC,GAAA;MACA;MACA,KAAA3B,iBAAA;MACA;MACA,KAAAC,YAAA,CAAA2B,IAAA,GAAAD,GAAA,CAAAC,IAAA;MACA,KAAA3B,YAAA,CAAA4B,GAAA,GAAAF,GAAA,CAAAE,GAAA;MACA,KAAA5B,YAAA,CAAAC,GAAA,GAAAyB,GAAA,CAAAzB,GAAA;MACA,KAAAD,YAAA,CAAA6B,QAAA,GAAAH,GAAA,CAAAG,QAAA;MACA,KAAA7B,YAAA,CAAA8B,UAAA,GAAAJ,GAAA,CAAAI,UAAA;MACA;MACA,KAAAhB,EAAA,GAAAY,GAAA,CAAAK,UAAA;MACA,KAAA/B,YAAA,CAAAQ,QAAA,GAAAkB,GAAA,CAAAlB,QAAA;MACA;MACA,KAAAK,UAAA;IACA;IAEA;IACA,MAAAmB,OAAAlB,EAAA;MACA;MACA,MAAAxB,IAAA;QAAA,QAAAU;MAAA;MACA;MACA,SAAAa,UAAA;QACAvB,IAAA,CAAAyC,UAAA,QAAAjB,EAAA;MACA;MACA,MAAAI,GAAA,SAAA7B,KAAA;QACA+B,GAAA;QACAD,MAAA;QACA7B,IAAA,EAAAA;MACA;MACA,KAAAS,iBAAA;MACA,KAAAiB,OAAA;IACA;IACA;IACA,MAAAiB,iBAAAnB,EAAA;MAEA,MAAAI,GAAA,SAAA7B,KAAA;QACA+B,GAAA;QACAD,MAAA;QACA;QACA7B,IAAA;UACAyC,UAAA,EAAAjB;QACA;MACA;MACA,KAAAE,OAAA;IACA;EAEA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}