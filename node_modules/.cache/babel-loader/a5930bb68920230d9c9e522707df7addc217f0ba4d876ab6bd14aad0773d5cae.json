{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formToJSON } from 'axios';\nimport { Message } from 'element-ui';\nexport default {\n  data() {\n    return {\n      tableData: [{\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      }, {\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      }],\n      debitAmountTotal: ['', '', '', '', '', '', '', '', '', '', ''],\n      creditAmountTotal: ['', '', '', '', '', '', '', '', '', '', '']\n    };\n  },\n  methods: {\n    add() {\n      this.tableData.push({\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      });\n    },\n    reduce(index) {\n      if (this.tableData.length <= 2) {\n        Message.warning('不能再删除了！');\n        return;\n      }\n      this.tableData.splice(index, 1);\n    },\n    arrToMoney(arr) {\n      console.log(arr);\n      const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\n\n      // 计算金额\n      let totalAmount = 0;\n      arr.forEach((amount, index) => {\n        // 将金额字符串转换为数字，忽略非数字的项\n        const numericAmount = parseInt(amount || 0);\n\n        // 如果是有效的数字，则累加到总金额\n        if (!isNaN(numericAmount)) {\n          totalAmount += numericAmount * weights[index];\n        }\n      });\n      return totalAmount;\n    }\n  },\n  watch: {\n    tableData: {\n      handler() {\n        console.log('fdfdf');\n        console.log(this.tableData.map(item => this.arrToMoney(item.debitAmount)));\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["formToJSON","Message","data","tableData","summary","accountingSubject","debitAmount","creditAmount","debitAmountTotal","creditAmountTotal","methods","add","push","reduce","index","length","warning","splice","arrToMoney","arr","console","log","weights","totalAmount","forEach","amount","numericAmount","parseInt","isNaN","watch","handler","map","item","deep"],"sources":["src/views/test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <table class=\"my-table\">\r\n            <tr>\r\n                <td :rowspan=\"2\">操作</td>\r\n                <td :rowspan=\"2\">摘要</td>\r\n                <td :rowspan=\"2\">会计科目</td>\r\n                <td :colspan=\"11\">借方金额</td>\r\n                <td :colspan=\"11\">贷方金额</td>\r\n            </tr>\r\n            <tr>\r\n                <td>亿</td>\r\n                <td>千</td>\r\n                <td>百</td>\r\n                <td>十</td>\r\n                <td>万</td>\r\n                <td>千</td>\r\n                <td>百</td>\r\n                <td>十</td>\r\n                <td>元</td>\r\n                <td>角</td>\r\n                <td>分</td>\r\n                <td>亿</td>\r\n                <td>千</td>\r\n                <td>百</td>\r\n                <td>十</td>\r\n                <td>万</td>\r\n                <td>千</td>\r\n                <td>百</td>\r\n                <td>十</td>\r\n                <td>元</td>\r\n                <td>角</td>\r\n                <td>分</td>\r\n            </tr>\r\n\r\n            <tr v-for=\"(item, index) in tableData\">\r\n                <td>\r\n                    <span @click=\"add()\">+</span>\r\n                    <span @click=\"reduce(index)\">-</span>\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" v-model=\"item.summary\">\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" v-model=\"item.accountingSubject\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[0]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[1]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[2]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[3]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[4]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[5]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[6]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[7]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[8]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[9]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[10]\">\r\n                </td>\r\n\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[0]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[1]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[2]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[3]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[4]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[5]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[6]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[7]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[8]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[9]\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[10]\">\r\n                </td>\r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <td :colspan=\"3\">合计</td>\r\n                <td v-for=\"item in debitAmountTotal\">{{ item }}</td>\r\n                <td v-for=\"item in creditAmountTotal\">{{ item }}</td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { formToJSON } from 'axios';\r\nimport { Message } from 'element-ui';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableData: [\r\n                {\r\n                    // 摘要\r\n                    summary: '',\r\n                    // 会计科目\r\n                    accountingSubject: '',\r\n                    // 借方\r\n                    debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                    // 贷方\r\n                    creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                },\r\n                {\r\n                    // 摘要\r\n                    summary: '',\r\n                    // 会计科目\r\n                    accountingSubject: '',\r\n                    // 借方\r\n                    debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                    // 贷方\r\n                    creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                }\r\n            ],\r\n            debitAmountTotal: ['', '', '', '', '', '', '', '', '', '', ''],\r\n            creditAmountTotal: ['', '', '', '', '', '', '', '', '', '', '']\r\n        }\r\n    },\r\n    methods: {\r\n        add() {\r\n            this.tableData.push({\r\n                // 摘要\r\n                summary: '',\r\n                // 会计科目\r\n                accountingSubject: '',\r\n                // 借方\r\n                debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                // 贷方\r\n                creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n            })\r\n        },\r\n        reduce(index) {\r\n            if (this.tableData.length <= 2) {\r\n                Message.warning('不能再删除了！')\r\n                return\r\n            }\r\n            this.tableData.splice(index, 1)\r\n        },\r\n        arrToMoney(arr) {\r\n            console.log(arr)\r\n            const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\r\n\r\n            // 计算金额\r\n            let totalAmount = 0;\r\n\r\n            arr.forEach((amount, index) => {\r\n                // 将金额字符串转换为数字，忽略非数字的项\r\n                const numericAmount = parseInt(amount || 0);\r\n\r\n                // 如果是有效的数字，则累加到总金额\r\n                if (!isNaN(numericAmount)) {\r\n                    totalAmount += numericAmount * weights[index];\r\n                }\r\n            });\r\n            return totalAmount\r\n        }\r\n    },\r\n    watch: {\r\n        tableData: {\r\n            handler() {\r\n                console.log('fdfdf')\r\n                console.log(this.tableData.map(item => this.arrToMoney(item.debitAmount)))\r\n            },\r\n            deep: true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.my-table {\r\n    border: 1px solid #000;\r\n\r\n    td {\r\n        border: 1px solid #000;\r\n        padding: 5px;\r\n        text-align: center;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 120px;\r\n\r\n        &.short {\r\n            width: 30px;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":";AA8HA,SAAAA,UAAA;AACA,SAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QACA;QACAC,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA,GACA;QACA;QACAH,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA,EACA;MACAC,gBAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA;MACA,KAAAR,SAAA,CAAAS,IAAA;QACA;QACAR,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA;IACA;IACAM,OAAAC,KAAA;MACA,SAAAX,SAAA,CAAAY,MAAA;QACAd,OAAA,CAAAe,OAAA;QACA;MACA;MACA,KAAAb,SAAA,CAAAc,MAAA,CAAAH,KAAA;IACA;IACAI,WAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,MAAAG,OAAA;;MAEA;MACA,IAAAC,WAAA;MAEAJ,GAAA,CAAAK,OAAA,EAAAC,MAAA,EAAAX,KAAA;QACA;QACA,MAAAY,aAAA,GAAAC,QAAA,CAAAF,MAAA;;QAEA;QACA,KAAAG,KAAA,CAAAF,aAAA;UACAH,WAAA,IAAAG,aAAA,GAAAJ,OAAA,CAAAR,KAAA;QACA;MACA;MACA,OAAAS,WAAA;IACA;EACA;EACAM,KAAA;IACA1B,SAAA;MACA2B,QAAA;QACAV,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,MAAAlB,SAAA,CAAA4B,GAAA,CAAAC,IAAA,SAAAd,UAAA,CAAAc,IAAA,CAAA1B,WAAA;MACA;MACA2B,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}