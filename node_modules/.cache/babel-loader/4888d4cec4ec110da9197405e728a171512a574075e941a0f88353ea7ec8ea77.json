{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    //密码校验\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.userFormData.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.userFormData.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      list: [],\n      // 控制弹框的显示与隐藏\n      dialogFormVisible: false,\n      // 表单的数据\n      userFormData: {\n        employeeID: localStorage.getItem('employeeID'),\n        employeeDes: '',\n        sex: '',\n        password: '',\n        checkPass: '',\n        phone: '',\n        email: '',\n        bankcardID: '',\n        accountBook: {\n          bookID: localStorage.getItem('bookID')\n        } // 使用关系属性名\n      },\n      //密码校验规则\n      rules: {\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/employee/findByEmployeeID\",\n        params: {\n          employeeID: this.employeeID\n        }\n      });\n      this.list = res.data.data;\n      this.total = res.data.count;\n      console.log(this.employeeID);\n    },\n    async submit() {\n      const data = {\n        ...this.userFormData\n      };\n      const res = await axios({\n        url: 'http://localhost:8080/employee/updateEmployee',\n        method: 'post',\n        data: data\n      });\n      console.log(res.data.code);\n      if (res.data.code === 200) {\n        this.$message({\n          message: '修改成功',\n          type: 'success'\n        });\n      } else {\n        this.$message.error('修改失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validatePass","rule","value","callback","Error","userFormData","checkPass","$refs","ruleForm","validateField","validatePass2","password","list","dialogFormVisible","employeeID","localStorage","getItem","employeeDes","sex","phone","email","bankcardID","accountBook","bookID","rules","validator","trigger","created","getList","methods","res","method","url","params","total","count","console","log","submit","code","$message","message","type","error"],"sources":["src/views/personal/Personal.vue"],"sourcesContent":["<template>\r\n    <div\r\n        style=\"margin-top: 30px; height: auto; width: auto; display: flex; justify-content: center; align-items: center;\">\r\n        <el-form :model=\"userFormData\" class=\"demo-ruleForm\" label-width=\"80px\" status-icon :rules=\"rules\">\r\n            <el-form-item label=\"员工姓名\">\r\n                <el-input v-model=\"userFormData.employeeDes\" placeholder=\"员工姓名\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"性别\">\r\n                <template>\r\n                    <el-radio v-model=\"userFormData.sex\" label=\"1\" value=\"男\">男</el-radio>\r\n                    <el-radio v-model=\"userFormData.sex\" label=\"2\" value=\"女\">女</el-radio>\r\n                </template>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"密码\" prop=\"pass\">\r\n                <el-input v-model=\"userFormData.password\" type=\"password\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n                <el-input v-model=\"userFormData.checkPass\" type=\"password\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"phone\" label=\"手机号\" :rules=\"[\r\n            { required: true, message: '请输入手机号', trigger: 'blur' },\r\n            { pattern: /^1[3456789]\\d{9}$/, message: '请输入正确的手机号', trigger: ['blur', 'change'] }\r\n        ]\">\r\n                <el-input v-model=\"userFormData.phone\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"email\" label=\"邮箱\" :rules=\"[\r\n            { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n            { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n        ]\">\r\n                <el-input v-model=\"userFormData.email\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"银行卡号\">\r\n                <el-input v-model=\"userFormData.bankcardID\" placeholder=\"银行卡号\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item style=\"margin-top: 20px;\">\r\n                <el-button @click=\"submit\">修改个人信息</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    data() {\r\n        //密码校验\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (this.userFormData.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.userFormData.password) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            list: [],\r\n            // 控制弹框的显示与隐藏\r\n            dialogFormVisible: false,\r\n            // 表单的数据\r\n            userFormData: {\r\n                employeeID:localStorage.getItem('employeeID'),\r\n                employeeDes: '',\r\n                sex: '',\r\n                password: '',\r\n                checkPass: '',\r\n                phone: '',\r\n                email: '',\r\n                bankcardID: '',\r\n                accountBook: { bookID: localStorage.getItem('bookID') } // 使用关系属性名\r\n            },\r\n            //密码校验规则\r\n            rules: {\r\n                password: [\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                checkPass: [\r\n                    { validator: validatePass2, trigger: 'blur' }\r\n                ]\r\n            },\r\n\r\n        };\r\n    },\r\n    created() {\r\n        this.getList()\r\n    },\r\n\r\n    methods: {\r\n        async getList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8080/employee/findByEmployeeID\",\r\n                params: {\r\n                    employeeID: this.employeeID\r\n                },\r\n            });\r\n            this.list = res.data.data;\r\n            this.total = res.data.count;\r\n            console.log(this.employeeID)\r\n        },\r\n\r\n        async submit() {\r\n            const data = { ...this.userFormData }\r\n            const res = await axios({\r\n                url: 'http://localhost:8080/employee/updateEmployee',\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            console.log(res.data.code)\r\n            if (res.data.code === 200) {\r\n                this.$message({\r\n                    message: '修改成功',\r\n                    type: 'success'\r\n                });\r\n            } else {\r\n                this.$message.error('修改失败');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"AAkDA,OAAAA,KAAA;AAEA;EAEAC,KAAA;IACA;IACA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,YAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,aAAA;QACA;QACAN,QAAA;MACA;IACA;IACA,IAAAO,aAAA,GAAAA,CAAAT,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,YAAA,CAAAM,QAAA;QACAR,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAS,IAAA;MACA;MACAC,iBAAA;MACA;MACAR,YAAA;QACAS,UAAA,EAAAC,YAAA,CAAAC,OAAA;QACAC,WAAA;QACAC,GAAA;QACAP,QAAA;QACAL,SAAA;QACAa,KAAA;QACAC,KAAA;QACAC,UAAA;QACAC,WAAA;UAAAC,MAAA,EAAAR,YAAA,CAAAC,OAAA;QAAA;MACA;MACA;MACAQ,KAAA;QACAb,QAAA,GACA;UAAAc,SAAA,EAAAzB,YAAA;UAAA0B,OAAA;QAAA,EACA;QACApB,SAAA,GACA;UAAAmB,SAAA,EAAAf,aAAA;UAAAgB,OAAA;QAAA;MAEA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EAEAC,OAAA;IACA,MAAAD,QAAA;MACA,MAAAE,GAAA,SAAAhC,KAAA;QACAiC,MAAA;QACAC,GAAA;QACAC,MAAA;UACAnB,UAAA,OAAAA;QACA;MACA;MACA,KAAAF,IAAA,GAAAkB,GAAA,CAAA/B,IAAA,CAAAA,IAAA;MACA,KAAAmC,KAAA,GAAAJ,GAAA,CAAA/B,IAAA,CAAAoC,KAAA;MACAC,OAAA,CAAAC,GAAA,MAAAvB,UAAA;IACA;IAEA,MAAAwB,OAAA;MACA,MAAAvC,IAAA;QAAA,QAAAM;MAAA;MACA,MAAAyB,GAAA,SAAAhC,KAAA;QACAkC,GAAA;QACAD,MAAA;QACAhC,IAAA,EAAAA;MACA;MACAqC,OAAA,CAAAC,GAAA,CAAAP,GAAA,CAAA/B,IAAA,CAAAwC,IAAA;MACA,IAAAT,GAAA,CAAA/B,IAAA,CAAAwC,IAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;MACA;QACA,KAAAF,QAAA,CAAAG,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}