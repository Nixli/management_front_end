{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { menuRoutes } from '@/router/index';\nimport { Icon } from 'element-ui';\nexport default {\n  data() {\n    return {\n      // isopen为true代表展开   isopen为false代表关闭\n      // collapse为true代表收起  false代表展开\n      res: true,\n      isopen: true,\n      // 当前定位项\n      curIndex: '',\n      menuRoutes,\n      role: localStorage.getItem('role'),\n      bookID: localStorage.getItem('bookID'),\n      bookName: localStorage.getItem('bookName')\n    };\n  },\n  methods: {\n    handelWindowResize() {\n      // 得到尺寸\n      let width = document.body.offsetWidth;\n      if (width < 800) this.isopen = false;else this.isopen = true;\n    },\n    switchAccount() {\n      // 使用 $router.push 进行路由导航\n      this.$router.push('/FinanceAccountBooks');\n    }\n  },\n  created() {\n    // 执行一次\n    // this.curIndex = this.$route.path\n  },\n  // 在某一个生命周期中\n  mounted() {\n    // 页面加载完，不管窗口有没有发生变化，都要计算一次\n    this.handelWindowResize();\n    // 1. 监听窗口尺寸变化\n    window.addEventListener('resize', this.handelWindowResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handelWindowResize);\n  },\n  computed: {\n    activeMenuRoutes() {\n      let role = localStorage.getItem('role');\n      if (role) {\n        return this.menuRoutes.filter(item => {\n          return (item.meta.role || []).includes(role);\n        });\n      } else {\n        return this.menuRoutes;\n      }\n    },\n    // 1. 因为页面中用到了comCurIndex，所以一进页面计算属性会计算一次，然后把计算之后的值给comCurIndex\n    // 2. 每次页面的切换，$route都发生变化，计算属性都会重新执行\n    comCurIndex() {\n      return this.$route.path;\n    }\n  },\n  watch: {\n    // 一进页面执行一次$route的监听事件\n    // $route: function(newVal, oldVal) {\n    //   console.log('地址发生变化了')\n    //   console.log(newVal.path)\n    //   this.curIndex = newVal.path\n    // }\n    $route: {\n      handler: function (route) {\n        this.curIndex = route.path;\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  components: {\n    Icon\n  }\n};","map":{"version":3,"names":["menuRoutes","Icon","data","res","isopen","curIndex","role","localStorage","getItem","bookID","bookName","methods","handelWindowResize","width","document","body","offsetWidth","switchAccount","$router","push","created","mounted","window","addEventListener","beforeDestroy","removeEventListener","computed","activeMenuRoutes","filter","item","meta","includes","comCurIndex","$route","path","watch","handler","route","deep","immediate","components"],"sources":["src/layout/components/AppAside.vue"],"sourcesContent":["<template>\r\n  <aside :style=\"{ width: '200px' }\">\r\n    <!-- <el-switch v-model=\"res\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\r\n    </el-switch> -->\r\n\r\n    <!-- <el-row class=\"block-col-2\">\r\n\r\n      <el-dropdown trigger=\"click\" @command=\"switchAccount\" v-if=\"role == '财务'\">\r\n        <span class=\"el-dropdown-link\">\r\n          {{ bookName }}<i class=\"el-icon-arrow-down\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\" style=\"margin-top: -10px;\">\r\n          <el-dropdown-item command=\"a\">切换账套</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n\r\n      <el-dropdown trigger=\"click\" @command=\"switchAccount\" v-else-if=\"role == '老板'\">\r\n        <span class=\"el-dropdown-link\">\r\n          {{ bookName }}<i class=\"el-icon-arrow-down\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\" style=\"margin-top: -10px;\">\r\n          <el-dropdown-item command=\"a\">切换账套</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n\r\n      <span v-else>{{ bookName }}</span>\r\n    </el-row> -->\r\n\r\n\r\n    <el-menu :default-active=\"comCurIndex\" router background-color=\"#304156\" :collapse=\"!isopen\">\r\n      <!-- 插槽 -->\r\n      <template v-for=\"route in activeMenuRoutes\">\r\n\r\n\r\n        <!-- 当route只有一个孩子的时候 -->\r\n        <el-menu-item v-if=\"route.children.length === 1\" :key=\"route.path\" :index=\"route.path\">\r\n          <i :class=\"route.meta.icon || 'el-icon-menu'\"></i>\r\n          <span slot=\"title\">{{ route.meta.title }}</span>\r\n        </el-menu-item>\r\n\r\n        <!-- 当route的孩子大于1 -->\r\n        <el-submenu v-else :key=\"route.path\" :index=\"route.path\">\r\n          <template slot=\"title\">\r\n            <i :class=\"route.meta.icon || 'el-icon-location'\"></i>\r\n            <span>{{ route.meta.title }}</span>\r\n          </template>\r\n          <el-menu-item v-for=\"child in route.children\" :key=\"child.path\" :index=\"child.path\">{{ child.meta.title\r\n          }}</el-menu-item>\r\n        </el-submenu>\r\n      </template>\r\n    </el-menu>\r\n\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nimport { menuRoutes } from '@/router/index'\r\nimport { Icon } from 'element-ui'\r\nexport default {\r\n  data() {\r\n    return {\r\n      // isopen为true代表展开   isopen为false代表关闭\r\n      // collapse为true代表收起  false代表展开\r\n      res: true,\r\n      isopen: true,\r\n      // 当前定位项\r\n      curIndex: '',\r\n      menuRoutes,\r\n      role: localStorage.getItem('role'),\r\n      bookID:localStorage.getItem('bookID'),\r\n      bookName:localStorage.getItem('bookName')\r\n    };\r\n  },\r\n  methods: {\r\n    handelWindowResize() {\r\n      // 得到尺寸\r\n      let width = document.body.offsetWidth;\r\n      if (width < 800)\r\n        this.isopen = false;\r\n      else\r\n        this.isopen = true;\r\n    },\r\n    switchAccount() {\r\n      // 使用 $router.push 进行路由导航\r\n      this.$router.push('/FinanceAccountBooks');\r\n    }\r\n  },\r\n  created() {\r\n    // 执行一次\r\n    // this.curIndex = this.$route.path\r\n  },\r\n  // 在某一个生命周期中\r\n  mounted() {\r\n    // 页面加载完，不管窗口有没有发生变化，都要计算一次\r\n    this.handelWindowResize();\r\n    // 1. 监听窗口尺寸变化\r\n    window.addEventListener('resize', this.handelWindowResize);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handelWindowResize);\r\n  },\r\n  computed: {\r\n    activeMenuRoutes() {\r\n      let role = localStorage.getItem('role');\r\n      if (role) {\r\n        return this.menuRoutes.filter(item => {\r\n          return (item.meta.role || []).includes(role);\r\n        });\r\n      }\r\n      else {\r\n        return this.menuRoutes;\r\n      }\r\n    },\r\n    // 1. 因为页面中用到了comCurIndex，所以一进页面计算属性会计算一次，然后把计算之后的值给comCurIndex\r\n    // 2. 每次页面的切换，$route都发生变化，计算属性都会重新执行\r\n    comCurIndex() {\r\n      return this.$route.path;\r\n    }\r\n  },\r\n  watch: {\r\n    // 一进页面执行一次$route的监听事件\r\n    // $route: function(newVal, oldVal) {\r\n    //   console.log('地址发生变化了')\r\n    //   console.log(newVal.path)\r\n    //   this.curIndex = newVal.path\r\n    // }\r\n    $route: {\r\n      handler: function (route) {\r\n        this.curIndex = route.path;\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  components: { Icon }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\naside {\r\n  color: #fff;\r\n  width: 200px;\r\n  background-color: #304156;\r\n  transition: all .5s;\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n  flex-shrink: 0;\r\n\r\n  .el-menu {\r\n    border-right: none;\r\n  }\r\n\r\n  .el-switch {\r\n    margin-left: 20px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .el-menu-item {\r\n    color: #fff;\r\n  }\r\n\r\n  .switch-wrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  // 如果element的一些样式覆盖不了，你就在其前面加上 /deep/\r\n  ::v-deep .el-submenu__title {\r\n    color: #fff;\r\n  }\r\n\r\n  ::v-deep .el-menu-item.is-active {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-dropdown-link {\r\n    cursor: pointer;\r\n    color: #FFF;\r\n    font-size: 18px;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .el-icon-arrow-down {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .demonstration {\r\n    display: block;\r\n    color: #8492a6;\r\n    font-size: 14px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .block-col-2 {\r\n    width: auto;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style>"],"mappings":";AAwDA,SAAAA,UAAA;AACA,SAAAC,IAAA;AACA;EACAC,KAAA;IACA;MACA;MACA;MACAC,GAAA;MACAC,MAAA;MACA;MACAC,QAAA;MACAL,UAAA;MACAM,IAAA,EAAAC,YAAA,CAAAC,OAAA;MACAC,MAAA,EAAAF,YAAA,CAAAC,OAAA;MACAE,QAAA,EAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,OAAA;IACAC,mBAAA;MACA;MACA,IAAAC,KAAA,GAAAC,QAAA,CAAAC,IAAA,CAAAC,WAAA;MACA,IAAAH,KAAA,QACA,KAAAT,MAAA,cAEA,KAAAA,MAAA;IACA;IACAa,cAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,QAAA;IACA;IACA;EAAA,CACA;EACA;EACAC,QAAA;IACA;IACA,KAAAT,kBAAA;IACA;IACAU,MAAA,CAAAC,gBAAA,gBAAAX,kBAAA;EACA;EACAY,cAAA;IACAF,MAAA,CAAAG,mBAAA,gBAAAb,kBAAA;EACA;EACAc,QAAA;IACAC,iBAAA;MACA,IAAArB,IAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,IAAAF,IAAA;QACA,YAAAN,UAAA,CAAA4B,MAAA,CAAAC,IAAA;UACA,QAAAA,IAAA,CAAAC,IAAA,CAAAxB,IAAA,QAAAyB,QAAA,CAAAzB,IAAA;QACA;MACA,OACA;QACA,YAAAN,UAAA;MACA;IACA;IACA;IACA;IACAgC,YAAA;MACA,YAAAC,MAAA,CAAAC,IAAA;IACA;EACA;EACAC,KAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACAF,MAAA;MACAG,OAAA,WAAAA,CAAAC,KAAA;QACA,KAAAhC,QAAA,GAAAgC,KAAA,CAAAH,IAAA;MACA;MACAI,IAAA;MACAC,SAAA;IACA;EACA;EACAC,UAAA;IAAAvC;EAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}