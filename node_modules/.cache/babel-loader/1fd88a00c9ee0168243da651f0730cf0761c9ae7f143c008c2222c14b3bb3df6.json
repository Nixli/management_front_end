{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message } from 'element-ui';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport { htmlToPdf } from '@/utils/pdf.js';\nexport default {\n  data() {\n    return {\n      maker: '',\n      date: '',\n      no: '',\n      bill: '',\n      VoucherList: [],\n      summarylist: [],\n      accountingAccountList: [],\n      voucherWordlist: [],\n      tableData: [],\n      debitAmountTotal: ['', '', '', '', '', '', '', '', '', '', ''],\n      creditAmountTotal: ['', '', '', '', '', '', '', '', '', '', '']\n    };\n  },\n  methods: {\n    pdf() {\n      console.log('fdfdf');\n      htmlToPdf(this.$refs.box, 'fdjf', true);\n    },\n    formatNum(arr) {\n      // const arr = [0, 0, 0, 0, 1, 2, 3, 0];\n\n      // 找到第一个非零数字的索引\n      const firstNonZeroIndex = arr.findIndex(num => num != 0);\n\n      // 将第一个非零数字之前的所有元素替换为空字符串\n      const resultArr = arr.map((num, index) => index < firstNonZeroIndex ? '' : num);\n      return resultArr;\n    },\n    add() {\n      this.tableData.push({\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      });\n    },\n    reduce(index) {\n      if (this.tableData.length <= 2) {\n        Message.warning('不能再删除了！');\n        return;\n      }\n      this.tableData.splice(index, 1);\n    },\n    arrToMoney(arr) {\n      const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\n\n      // 计算金额\n      let totalAmount = 0;\n      arr.forEach((amount, index) => {\n        // 将金额字符串转换为数字，忽略非数字的项\n        const numericAmount = parseInt(amount || 0);\n\n        // 如果是有效的数字，则累加到总金额\n        if (!isNaN(numericAmount)) {\n          totalAmount += numericAmount * weights[index];\n        }\n      });\n      return totalAmount;\n    },\n    moneyToArr(totalAmount) {\n      // 数字位权值\n      const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\n\n      // 转换为对应的金额数组\n      const debitAmount = weights.map(weight => {\n        const amount = Math.floor(totalAmount / weight);\n        totalAmount -= amount * weight;\n        return amount;\n      });\n\n      // 反转数组并将数字转换为字符串，不足的地方用空字符串填充\n      const reversedDebitAmount = debitAmount.reverse().map(amount => amount !== undefined ? String(amount) : '');\n      const filledDebitAmount = reversedDebitAmount.slice().reverse();\n      return filledDebitAmount;\n    },\n    handleInput() {\n      // 使用正则表达式匹配只包含数字0~9的字符串\n      this.inputValue = this.inputValue.replace(/[^0-9]/g, \"\").charAt(0);\n    },\n    async getSummaryList() {\n      const res = await axios({\n        url: \"/summary\",\n        method: \"get\",\n        params: {\n          ...this.params,\n          pageno: this.pageno,\n          pagesize: this.pagesize\n        }\n      });\n      this.summarylist = res.data.data.list;\n    },\n    async getaccountingAccountList() {\n      const res = await axios({\n        url: \"/accountingAccount\",\n        method: \"get\",\n        params: {\n          ...this.params,\n          pageno: this.pageno,\n          pagesize: this.pagesize\n        }\n      });\n      this.accountingAccountList = res.data.data.list;\n    },\n    async getVoucherWordList() {\n      const res = await axios({\n        url: \"/VoucherWord\",\n        method: \"get\"\n      });\n      this.voucherWordlist = res.data.data;\n    },\n    async getVoucher() {\n      const data = {\n        accountBook: localStorage.getItem('bookID'),\n        // 使用关系属性名\n        voucherID: 7\n      };\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: data\n      });\n      console.log(res.data.data, '---------------');\n      this.VoucherList = res.data.data.map(item => {\n        const tableData = item.voucherContents.filter(item => item.summary).map(content => {\n          // 将 debitAmount 转换为字符串数组\n          const debitAmountArr = this.formatNum(this.moneyToArr(Number(content.debitAmount)));\n          const creditAmountArr = this.formatNum(this.moneyToArr(Number(content.creditAmount)));\n          return {\n            summary: content.summary,\n            accountingSubject: content.accountingSubject,\n            debitAmount: debitAmountArr,\n            // 使用 moneyToArr 转换为字符串数组\n            creditAmount: creditAmountArr\n          };\n        });\n        this.tableData = tableData;\n        return {\n          ...item,\n          cime: dayjs(item.cime).format('YYYY-MM-DD'),\n          tableData: tableData\n        };\n      });\n    }\n  },\n  watch: {\n    tableData: {\n      handler() {\n        const total = this.tableData.map(item => this.arrToMoney(item.debitAmount)).reduce((prev, cur) => prev = prev + cur, 0);\n        this.debitAmountTotal = this.formatNum(this.moneyToArr(total));\n        const ctotal = this.tableData.map(item => this.arrToMoney(item.creditAmount)).reduce((prev, cur) => prev = prev + cur, 0);\n        this.creditAmountTotal = this.formatNum(this.moneyToArr(ctotal));\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.getSummaryList();\n    this.getaccountingAccountList();\n    this.getVoucherWordList();\n    this.getVoucher();\n  }\n};","map":{"version":3,"names":["Message","axios","dayjs","htmlToPdf","data","maker","date","no","bill","VoucherList","summarylist","accountingAccountList","voucherWordlist","tableData","debitAmountTotal","creditAmountTotal","methods","pdf","console","log","$refs","box","formatNum","arr","firstNonZeroIndex","findIndex","num","resultArr","map","index","add","push","summary","accountingSubject","debitAmount","creditAmount","reduce","length","warning","splice","arrToMoney","weights","totalAmount","forEach","amount","numericAmount","parseInt","isNaN","moneyToArr","weight","Math","floor","reversedDebitAmount","reverse","undefined","String","filledDebitAmount","slice","handleInput","inputValue","replace","charAt","getSummaryList","res","url","method","params","pageno","pagesize","list","getaccountingAccountList","getVoucherWordList","getVoucher","accountBook","localStorage","getItem","voucherID","item","voucherContents","filter","content","debitAmountArr","Number","creditAmountArr","cime","format","watch","handler","total","prev","cur","ctotal","deep","created"],"sources":["src/views/voucher/CheckVoucher.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-button @click=\"pdf\">导出</el-button>\r\n        <div style=\"width: 100%; height: 100%;\" ref=\"box\">\r\n            <el-card v-if=\"VoucherList.length > 0\">\r\n                <div style=\"font-size: 36px; text-align: center; margin-top: 15px; font-family: STKaiti; font-weight: bold;\">\r\n                    {{ VoucherList[0].voucherWord }}账凭证</div>\r\n    \r\n                <div class=\"charge-header\" style=\"margin-top: 15px;\">\r\n                    <div>\r\n                        <span>凭证字</span>\r\n                        <el-select :disabled=true style=\"width: 100px; margin-left: 10px;\" v-model=\"VoucherList[0].voucherWord\">\r\n                        </el-select>\r\n                    </div>\r\n                    <div>\r\n                        凭证号\r\n                        <el-input type=\"number\" style=\"width: 80px; margin-left: 10px;\" min=\"1\"\r\n                            v-model=\"VoucherList[0].voucherNumber\"></el-input>\r\n                    </div>\r\n                    <div>\r\n                        日期\r\n                        <el-date-picker type=\"date\" style=\"width: 145px; margin-left: 10px;\"\r\n                            v-model=\"VoucherList[0].cime\"></el-date-picker>\r\n                    </div>\r\n    \r\n                </div>\r\n    \r\n                <div style=\"margin-top: 20px;\">\r\n                    <table class=\"my-table\">\r\n                        <tr>\r\n                            <td :rowspan=\"2\">操作</td>\r\n                            <td :rowspan=\"2\">摘要</td>\r\n                            <td :rowspan=\"2\">会计科目</td>\r\n                            <td :colspan=\"11\">借方金额</td>\r\n                            <td :colspan=\"11\">贷方金额</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>亿</td>\r\n                            <td>千</td>\r\n                            <td>百</td>\r\n                            <td>十</td>\r\n                            <td>万</td>\r\n                            <td>千</td>\r\n                            <td>百</td>\r\n                            <td>十</td>\r\n                            <td>元</td>\r\n                            <td>角</td>\r\n                            <td>分</td>\r\n                            <td>亿</td>\r\n                            <td>千</td>\r\n                            <td>百</td>\r\n                            <td>十</td>\r\n                            <td>万</td>\r\n                            <td>千</td>\r\n                            <td>百</td>\r\n                            <td>十</td>\r\n                            <td>元</td>\r\n                            <td>角</td>\r\n                            <td>分</td>\r\n                        </tr>\r\n    \r\n                        <tr v-for=\"(item, index) in tableData\" class=\"content\">\r\n                            <td style=\"width: 50px;\">\r\n                                <i class=\"el-icon-plus\" @click=\"add()\" style=\"margin-right: 5px;\"></i>\r\n                                <i class=\"el-icon-close\" @click=\"reduce(index)\"></i>\r\n                            </td>\r\n                            <td>\r\n                                <el-select class=\"custom-select\" v-model=\"item.summary\" placeholder=\"\">\r\n                                    <el-option v-for=\"summary in summarylist\" :label=\"summary.summaryContent\"\r\n                                        :value=\"summary.summaryContent\" :key=\"summary.summaryContent\" />\r\n                                </el-select>\r\n                            </td>\r\n                            <td>\r\n                                <el-select class=\"custom-select\" v-model=\"item.accountingSubject\" placeholder=\"\">\r\n                                    <el-option v-for=\"accountingAccount in accountingAccountList\"\r\n                                        :label=\"accountingAccount.AccountingAccount\"\r\n                                        :value=\"accountingAccount.AccountingAccount\"\r\n                                        :key=\"accountingAccount.AccountingAccount\" />\r\n                                </el-select>\r\n                            </td>\r\n                            <td>\r\n                                <input disabled class=\"short\" type=\"text\" v-model=\"item.debitAmount[0]\" @input=\"handleInput\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[1]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[2]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[3]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[4]\">\r\n                            </td>\r\n                            <td>\r\n                                <input disabled class=\"short\" type=\"text\" v-model=\"item.debitAmount[5]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[6]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[7]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[8]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[9]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[10]\">\r\n                            </td>\r\n    \r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[0]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[1]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[2]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[3]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[4]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[5]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[6]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[7]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[8]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[9]\">\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[10]\">\r\n                            </td>\r\n                        </tr>\r\n    \r\n    \r\n                        <tr class=\"content1\">\r\n                            <td :colspan=\"3\" class=\"width height\">合计:</td>\r\n                            <td v-for=\"item in debitAmountTotal\" class=\"width height\" style=\"text-align: center;\">{{ item }}\r\n                            </td>\r\n                            <td v-for=\"item in creditAmountTotal\" class=\"width height\" style=\"text-align: center;\">{{ item }}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n    \r\n                <div class=\"charge-header\" style=\"margin-top: 15px;\">\r\n                    <div>\r\n                        制单人: {{ VoucherList[0].maker }}\r\n                    </div>\r\n                </div>\r\n            </el-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Message } from 'element-ui';\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport { htmlToPdf } from '@/utils/pdf.js';\r\nexport default {\r\n    data() {\r\n        return {\r\n            maker: '',\r\n            date: '',\r\n            no: '',\r\n            bill: '',\r\n            VoucherList: [],\r\n            summarylist: [],\r\n            accountingAccountList: [],\r\n            voucherWordlist: [],\r\n\r\n            tableData: [],\r\n            debitAmountTotal: ['', '', '', '', '', '', '', '', '', '', ''],\r\n            creditAmountTotal: ['', '', '', '', '', '', '', '', '', '', '']\r\n        }\r\n    },\r\n    methods: {\r\n        pdf() {\r\n            console.log('fdfdf')\r\n            htmlToPdf(this.$refs.box, 'fdjf', true)\r\n        },\r\n        formatNum(arr) {\r\n            // const arr = [0, 0, 0, 0, 1, 2, 3, 0];\r\n\r\n            // 找到第一个非零数字的索引\r\n            const firstNonZeroIndex = arr.findIndex(num => num != 0);\r\n\r\n            // 将第一个非零数字之前的所有元素替换为空字符串\r\n            const resultArr = arr.map((num, index) => (index < firstNonZeroIndex ? '' : num));\r\n\r\n            return resultArr\r\n        },\r\n        add() {\r\n            this.tableData.push({\r\n                // 摘要\r\n                summary: '',\r\n                // 会计科目\r\n                accountingSubject: '',\r\n                // 借方\r\n                debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                // 贷方\r\n                creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n            })\r\n        },\r\n        reduce(index) {\r\n            if (this.tableData.length <= 2) {\r\n                Message.warning('不能再删除了！')\r\n                return\r\n            }\r\n            this.tableData.splice(index, 1)\r\n        },\r\n        arrToMoney(arr) {\r\n            const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\r\n\r\n            // 计算金额\r\n            let totalAmount = 0;\r\n\r\n            arr.forEach((amount, index) => {\r\n                // 将金额字符串转换为数字，忽略非数字的项\r\n                const numericAmount = parseInt(amount || 0);\r\n\r\n                // 如果是有效的数字，则累加到总金额\r\n                if (!isNaN(numericAmount)) {\r\n                    totalAmount += numericAmount * weights[index];\r\n                }\r\n            });\r\n            return totalAmount\r\n        },\r\n        moneyToArr(totalAmount) {\r\n            // 数字位权值\r\n            const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\r\n\r\n            // 转换为对应的金额数组\r\n            const debitAmount = weights.map(weight => {\r\n                const amount = Math.floor(totalAmount / weight);\r\n                totalAmount -= amount * weight;\r\n                return amount;\r\n            });\r\n\r\n            // 反转数组并将数字转换为字符串，不足的地方用空字符串填充\r\n            const reversedDebitAmount = debitAmount.reverse().map(amount => (amount !== undefined ? String(amount) : ''));\r\n            const filledDebitAmount = reversedDebitAmount.slice().reverse();\r\n            return filledDebitAmount\r\n        },\r\n        handleInput() {\r\n            // 使用正则表达式匹配只包含数字0~9的字符串\r\n            this.inputValue = this.inputValue.replace(/[^0-9]/g, \"\").charAt(0);\r\n        },\r\n        async getSummaryList() {\r\n            const res = await axios({\r\n                url: \"/summary\",\r\n                method: \"get\",\r\n                params: {\r\n                    ...this.params,\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                }\r\n            });\r\n            this.summarylist = res.data.data.list;\r\n        },\r\n        async getaccountingAccountList() {\r\n            const res = await axios({\r\n                url: \"/accountingAccount\",\r\n                method: \"get\",\r\n                params: {\r\n                    ...this.params,\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                }\r\n            });\r\n            this.accountingAccountList = res.data.data.list;\r\n        },\r\n        async getVoucherWordList() {\r\n            const res = await axios({\r\n                url: \"/VoucherWord\",\r\n                method: \"get\",\r\n            });\r\n            this.voucherWordlist = res.data.data\r\n        },\r\n        async getVoucher() {\r\n            const data = {\r\n                accountBook: localStorage.getItem('bookID'),// 使用关系属性名\r\n                voucherID: 7\r\n            };\r\n            const res = await axios({\r\n                url: '/voucher',\r\n                method: 'get',\r\n                params: data,\r\n            });\r\n            console.log(res.data.data, '---------------')\r\n            this.VoucherList = res.data.data.map(item => {\r\n\r\n                const tableData = item.voucherContents.filter(item => item.summary).map(content => {\r\n                    \r\n                    // 将 debitAmount 转换为字符串数组\r\n                    const debitAmountArr = this.formatNum(this.moneyToArr(Number(content.debitAmount)));\r\n                    const creditAmountArr = this.formatNum(this.moneyToArr(Number(content.creditAmount)))\r\n                    return {\r\n                        summary: content.summary,\r\n                        accountingSubject: content.accountingSubject,\r\n                        debitAmount: debitAmountArr, // 使用 moneyToArr 转换为字符串数组\r\n                        creditAmount: creditAmountArr,\r\n                    };\r\n                });\r\n                this.tableData = tableData;\r\n                return {\r\n                    ...item,\r\n                    cime: dayjs(item.cime).format('YYYY-MM-DD'),\r\n                    tableData: tableData,\r\n                };\r\n            });\r\n\r\n        }\r\n    },\r\n    watch: {\r\n        tableData: {\r\n            handler() {\r\n                const total = this.tableData.map(item => this.arrToMoney(item.debitAmount)).reduce((prev, cur) => prev = prev + cur, 0)\r\n                this.debitAmountTotal = this.formatNum(this.moneyToArr(total))\r\n                const ctotal = this.tableData.map(item => this.arrToMoney(item.creditAmount)).reduce((prev, cur) => prev = prev + cur, 0)\r\n                this.creditAmountTotal = this.formatNum(this.moneyToArr(ctotal))\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    created() {\r\n        this.getSummaryList();\r\n        this.getaccountingAccountList();\r\n        this.getVoucherWordList();\r\n        this.getVoucher()\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.charge-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.charge-header>div {\r\n    display: inline-block;\r\n    margin-right: 15px;\r\n}\r\n.el-input.is-disabled .el-input__inner {\r\n        background-color: #fff;\r\n    }\r\n.my-table {\r\n   \r\n    input:disabled  {\r\n        background-color: #fff;\r\n    }\r\n\r\n    // border: 1px solid #fff;\r\n    .el-input--suffix .el-input__inner {\r\n        border: none;\r\n    }\r\n\r\n    td {\r\n        border: 1px solid rgb(220, 223, 230);\r\n        padding: 5px;\r\n        text-align: center;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .custom-select ::v-deep .el-select__input {\r\n        border: none !important;\r\n        text-align: center;\r\n    }\r\n\r\n    .content {\r\n        td:nth-child(4) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(8) {\r\n            border-right-color: rgba(74, 144, 226, .5); // 第八列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(12) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(15) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(19) {\r\n            border-right-color: rgba(74, 144, 226, .5); // 第八列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(23) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n\r\n    }\r\n\r\n    .content1 {\r\n        td:nth-child(2) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(6) {\r\n            border-right-color: rgba(74, 144, 226, .5); // 第八列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(10) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(13) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(17) {\r\n            border-right-color: rgba(74, 144, 226, .5); // 第八列的右边框颜色\r\n        }\r\n\r\n        td:nth-child(21) {\r\n            border-right-color: rgba(226, 106, 74, .5); // 第四列的右边框颜色\r\n        }\r\n\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 200px;\r\n        text-align: center;\r\n\r\n        &.short {\r\n            width: 20px;\r\n            height: 47px;\r\n        }\r\n    }\r\n\r\n    .width {\r\n        width: 15px;\r\n        text-align: center;\r\n\r\n    }\r\n\r\n    .height {\r\n        height: 35px;\r\n    }\r\n\r\n}\r\n</style>"],"mappings":";AA2KA,SAAAA,OAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,SAAAC,SAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,IAAA;MACAC,EAAA;MACAC,IAAA;MACAC,WAAA;MACAC,WAAA;MACAC,qBAAA;MACAC,eAAA;MAEAC,SAAA;MACAC,gBAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA;MACAC,OAAA,CAAAC,GAAA;MACAhB,SAAA,MAAAiB,KAAA,CAAAC,GAAA;IACA;IACAC,UAAAC,GAAA;MACA;;MAEA;MACA,MAAAC,iBAAA,GAAAD,GAAA,CAAAE,SAAA,CAAAC,GAAA,IAAAA,GAAA;;MAEA;MACA,MAAAC,SAAA,GAAAJ,GAAA,CAAAK,GAAA,EAAAF,GAAA,EAAAG,KAAA,KAAAA,KAAA,GAAAL,iBAAA,QAAAE,GAAA;MAEA,OAAAC,SAAA;IACA;IACAG,IAAA;MACA,KAAAjB,SAAA,CAAAkB,IAAA;QACA;QACAC,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA;IACA;IACAC,OAAAP,KAAA;MACA,SAAAhB,SAAA,CAAAwB,MAAA;QACArC,OAAA,CAAAsC,OAAA;QACA;MACA;MACA,KAAAzB,SAAA,CAAA0B,MAAA,CAAAV,KAAA;IACA;IACAW,WAAAjB,GAAA;MACA,MAAAkB,OAAA;;MAEA;MACA,IAAAC,WAAA;MAEAnB,GAAA,CAAAoB,OAAA,EAAAC,MAAA,EAAAf,KAAA;QACA;QACA,MAAAgB,aAAA,GAAAC,QAAA,CAAAF,MAAA;;QAEA;QACA,KAAAG,KAAA,CAAAF,aAAA;UACAH,WAAA,IAAAG,aAAA,GAAAJ,OAAA,CAAAZ,KAAA;QACA;MACA;MACA,OAAAa,WAAA;IACA;IACAM,WAAAN,WAAA;MACA;MACA,MAAAD,OAAA;;MAEA;MACA,MAAAP,WAAA,GAAAO,OAAA,CAAAb,GAAA,CAAAqB,MAAA;QACA,MAAAL,MAAA,GAAAM,IAAA,CAAAC,KAAA,CAAAT,WAAA,GAAAO,MAAA;QACAP,WAAA,IAAAE,MAAA,GAAAK,MAAA;QACA,OAAAL,MAAA;MACA;;MAEA;MACA,MAAAQ,mBAAA,GAAAlB,WAAA,CAAAmB,OAAA,GAAAzB,GAAA,CAAAgB,MAAA,IAAAA,MAAA,KAAAU,SAAA,GAAAC,MAAA,CAAAX,MAAA;MACA,MAAAY,iBAAA,GAAAJ,mBAAA,CAAAK,KAAA,GAAAJ,OAAA;MACA,OAAAG,iBAAA;IACA;IACAE,YAAA;MACA;MACA,KAAAC,UAAA,QAAAA,UAAA,CAAAC,OAAA,gBAAAC,MAAA;IACA;IACA,MAAAC,eAAA;MACA,MAAAC,GAAA,SAAA9D,KAAA;QACA+D,GAAA;QACAC,MAAA;QACAC,MAAA;UACA,QAAAA,MAAA;UACAC,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA;QACA;MACA;MACA,KAAA1D,WAAA,GAAAqD,GAAA,CAAA3D,IAAA,CAAAA,IAAA,CAAAiE,IAAA;IACA;IACA,MAAAC,yBAAA;MACA,MAAAP,GAAA,SAAA9D,KAAA;QACA+D,GAAA;QACAC,MAAA;QACAC,MAAA;UACA,QAAAA,MAAA;UACAC,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA;QACA;MACA;MACA,KAAAzD,qBAAA,GAAAoD,GAAA,CAAA3D,IAAA,CAAAA,IAAA,CAAAiE,IAAA;IACA;IACA,MAAAE,mBAAA;MACA,MAAAR,GAAA,SAAA9D,KAAA;QACA+D,GAAA;QACAC,MAAA;MACA;MACA,KAAArD,eAAA,GAAAmD,GAAA,CAAA3D,IAAA,CAAAA,IAAA;IACA;IACA,MAAAoE,WAAA;MACA,MAAApE,IAAA;QACAqE,WAAA,EAAAC,YAAA,CAAAC,OAAA;QAAA;QACAC,SAAA;MACA;MACA,MAAAb,GAAA,SAAA9D,KAAA;QACA+D,GAAA;QACAC,MAAA;QACAC,MAAA,EAAA9D;MACA;MACAc,OAAA,CAAAC,GAAA,CAAA4C,GAAA,CAAA3D,IAAA,CAAAA,IAAA;MACA,KAAAK,WAAA,GAAAsD,GAAA,CAAA3D,IAAA,CAAAA,IAAA,CAAAwB,GAAA,CAAAiD,IAAA;QAEA,MAAAhE,SAAA,GAAAgE,IAAA,CAAAC,eAAA,CAAAC,MAAA,CAAAF,IAAA,IAAAA,IAAA,CAAA7C,OAAA,EAAAJ,GAAA,CAAAoD,OAAA;UAEA;UACA,MAAAC,cAAA,QAAA3D,SAAA,MAAA0B,UAAA,CAAAkC,MAAA,CAAAF,OAAA,CAAA9C,WAAA;UACA,MAAAiD,eAAA,QAAA7D,SAAA,MAAA0B,UAAA,CAAAkC,MAAA,CAAAF,OAAA,CAAA7C,YAAA;UACA;YACAH,OAAA,EAAAgD,OAAA,CAAAhD,OAAA;YACAC,iBAAA,EAAA+C,OAAA,CAAA/C,iBAAA;YACAC,WAAA,EAAA+C,cAAA;YAAA;YACA9C,YAAA,EAAAgD;UACA;QACA;QACA,KAAAtE,SAAA,GAAAA,SAAA;QACA;UACA,GAAAgE,IAAA;UACAO,IAAA,EAAAlF,KAAA,CAAA2E,IAAA,CAAAO,IAAA,EAAAC,MAAA;UACAxE,SAAA,EAAAA;QACA;MACA;IAEA;EACA;EACAyE,KAAA;IACAzE,SAAA;MACA0E,QAAA;QACA,MAAAC,KAAA,QAAA3E,SAAA,CAAAe,GAAA,CAAAiD,IAAA,SAAArC,UAAA,CAAAqC,IAAA,CAAA3C,WAAA,GAAAE,MAAA,EAAAqD,IAAA,EAAAC,GAAA,KAAAD,IAAA,GAAAA,IAAA,GAAAC,GAAA;QACA,KAAA5E,gBAAA,QAAAQ,SAAA,MAAA0B,UAAA,CAAAwC,KAAA;QACA,MAAAG,MAAA,QAAA9E,SAAA,CAAAe,GAAA,CAAAiD,IAAA,SAAArC,UAAA,CAAAqC,IAAA,CAAA1C,YAAA,GAAAC,MAAA,EAAAqD,IAAA,EAAAC,GAAA,KAAAD,IAAA,GAAAA,IAAA,GAAAC,GAAA;QACA,KAAA3E,iBAAA,QAAAO,SAAA,MAAA0B,UAAA,CAAA2C,MAAA;MACA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA/B,cAAA;IACA,KAAAQ,wBAAA;IACA,KAAAC,kBAAA;IACA,KAAAC,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}