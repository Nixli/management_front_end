{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      dishList: [],\n      reserveForm: {\n        // ... 其他表单项数据\n        tableNumber: '' // 初始时选择一个桌子号码或为空字符串\n      },\n      tableNumbers: ['1', '2', '3', '4', '5'],\n      // 假设我们有5张桌子，这里列出它们的号码\n      categories: [{\n        name: '川菜',\n        dishes: [{\n          id: 3,\n          name: '麻辣兔头',\n          description: '川菜经典',\n          price: 45\n        }, {\n          id: 4,\n          name: '椒麻鸡',\n          description: '麻辣可口',\n          price: 30\n        }\n        // ... 其他川菜\n        ]\n      }, {\n        name: '粤菜',\n        dishes: [{\n          id: 2,\n          name: '清蒸鲈鱼',\n          description: '鲜嫩可口',\n          price: 25\n        }, {\n          id: 1,\n          name: '白切鸡',\n          description: '皮脆肉嫩',\n          price: 30\n        }\n        // ... 其他粤菜\n        ]\n      }\n      // ... 添加更多分类\n      ],\n      cart: [],\n      searchQuery: '',\n      filteredDishes: [],\n      tp: ''\n    };\n  },\n  computed: {\n    filteredCategories() {\n      // 搜索逻辑与之前保持一致\n      return this.categories.map(category => ({\n        ...category,\n        dishes: category.dishes.filter(dish => dish.name.toLowerCase().includes(this.searchQuery.toLowerCase()))\n      }));\n    },\n    totalPrice() {\n      // 计算总价逻辑与之前保持一致\n      this.tp = this.cart.reduce((sum, item) => sum + item.price, 0);\n      return this.tp;\n    }\n  },\n  created() {\n    console.log(localStorage.getItem(\"employeeID\"));\n    this.searchDishs();\n  },\n  methods: {\n    open2() {\n      this.$message({\n        message: '点餐成功',\n        type: 'success'\n      });\n    },\n    open1() {\n      this.$message({\n        message: '该桌已有客人'\n      });\n    },\n    //下单\n    async orderdish(cart, table) {\n      console.log(cart);\n      console.log(table);\n      console.log(this.tp);\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/order/download?table=\" + table + \"&tp=\" + this.tp + \"&employeeID=\" + localStorage.getItem(\"employeeID\"),\n        data: cart\n      });\n      console.log(res.data);\n      if (res.data.code == 200) {\n        this.tp = '', this.cart = [], this.reserveForm.tableNumber = '', this.open2();\n      } else {\n        this.open1();\n      }\n    },\n    //添加购物车\n    addToCart(dish) {\n      this.cart.push(dish);\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    // filterDishes 方法如果需要的话，可以添加防抖或节流逻辑\n\n    reserveTable() {\n      // 检查桌子号码是否已输入\n      if (this.reserveForm.tableNumber) {\n        // 在这里实现安排桌子号码的逻辑\n        // 你可以发送一个请求到后端API来安排桌子\n        // 或者，如果只是前端演示，你可以简单地打印出信息\n        console.log(`桌子号码 ${this.reserveForm.tableNumber} 已安排`);\n        // 清空桌子号码输入框\n        this.reserveForm.tableNumber = '';\n      } else {\n        alert('请输入桌子号码！');\n      }\n    },\n    //查询所有菜品\n    async searchDishs() {\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/dishes/findAllDishes\"\n      });\n      console.log(res.data.data);\n      const ds = res.data.data;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","dishList","reserveForm","tableNumber","tableNumbers","categories","name","dishes","id","description","price","cart","searchQuery","filteredDishes","tp","computed","filteredCategories","map","category","filter","dish","toLowerCase","includes","totalPrice","reduce","sum","item","created","console","log","localStorage","getItem","searchDishs","methods","open2","$message","message","type","open1","orderdish","table","res","method","url","code","addToCart","push","removeFromCart","index","splice","reserveTable","alert","ds"],"sources":["src/views/order/Order.vue"],"sourcesContent":["=<template>\r\n  <el-card>\r\n    <div >\r\n      <div class=\"left\" style=\"margin-top: 20px; height: 500px; width: 50%;\">\r\n        <el-container>\r\n          <el-header>\r\n            <h1>菜单</h1>\r\n            <el-input placeholder=\"搜索菜品\" v-model=\"searchQuery\" @input=\"filterDishes\" clearable></el-input>\r\n          </el-header>\r\n          <el-main>\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"24\" v-for=\"(category, categoryIndex) in filteredCategories\" :key=\"categoryIndex\">\r\n                <el-card class=\"menu-card\">\r\n                  <div slot=\"header\" class=\"clearfix\">\r\n                    <span>{{ category.name }}</span>\r\n                  </div>\r\n                  <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\" v-for=\"(dish, dishIndex) in category.dishes\" :key=\"dishIndex\">\r\n                      <el-card class=\"dish-card\">\r\n                        <div slot=\"header\">{{ dish.name }}</div>\r\n                        <div>描述：{{ dish.description }}</div>\r\n                        <div class=\"price\">价格: {{ dish.price }}</div>\r\n                        <el-button type=\"primary\" @click=\"addToCart(dish)\">添加到购物车</el-button>\r\n                      </el-card>\r\n                    </el-col>\r\n                  </el-row>\r\n                </el-card>\r\n              </el-col>\r\n            </el-row>\r\n          </el-main>\r\n        </el-container>\r\n      </div>\r\n\r\n      <div class=\"right\" style=\"margin-top: 20px; height: 500px; width: 40%;\">\r\n        <el-card>\r\n          <el-header>\r\n            <h1>购物车</h1>\r\n          </el-header>\r\n        </el-card>\r\n        <el-container v-if=\"cart.length\" class=\"cart-container\">\r\n          <el-card>\r\n            <el-main>\r\n              <el-table :data=\"cart\" style=\"width: 100%\">\r\n                <el-table-column prop=\"name\" label=\"菜品名称\"></el-table-column>\r\n                <el-table-column prop=\"price\" label=\"价格\" width=\"180\"></el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button @click=\"removeFromCart(scope.$index)\" type=\"text\" size=\"small\">移除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-main>\r\n            <el-footer>\r\n              <div>总价: {{ totalPrice }}\r\n                <el-select style=\"margin-left: 50px;\" v-model=\"reserveForm.tableNumber\" placeholder=\"请选择桌子号码\">\r\n                  <el-option v-for=\"table in tableNumbers\" :key=\"table\" :label=\"table\" :value=\"table\"></el-option>\r\n                </el-select>\r\n                <el-button style=\"margin-left: 360px;\" type=\"primary\"\r\n                  @click=\"orderdish(cart, reserveForm.tableNumber)\">点餐</el-button>\r\n              </div>\r\n            </el-footer>\r\n          </el-card>\r\n        </el-container>\r\n      </div>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dishList: [],\r\n      reserveForm: {\r\n        // ... 其他表单项数据\r\n        tableNumber: '', // 初始时选择一个桌子号码或为空字符串\r\n      },\r\n      tableNumbers: ['1', '2', '3', '4', '5'], // 假设我们有5张桌子，这里列出它们的号码\r\n      categories: [\r\n        {\r\n          name: '川菜',\r\n          dishes: [\r\n            { id: 3, name: '麻辣兔头', description: '川菜经典', price: 45 },\r\n            { id: 4, name: '椒麻鸡', description: '麻辣可口', price: 30 },\r\n            // ... 其他川菜\r\n          ],\r\n        },\r\n        {\r\n          name: '粤菜',\r\n          dishes: [\r\n            { id: 2, name: '清蒸鲈鱼', description: '鲜嫩可口', price: 25 },\r\n            { id: 1, name: '白切鸡', description: '皮脆肉嫩', price: 30 },\r\n            // ... 其他粤菜\r\n          ],\r\n        },\r\n        // ... 添加更多分类\r\n      ],\r\n      cart: [],\r\n      searchQuery: '',\r\n      filteredDishes: [],\r\n      tp: '',\r\n    };\r\n  },\r\n  computed: {\r\n    filteredCategories() {\r\n      // 搜索逻辑与之前保持一致\r\n      return this.categories.map(category => ({\r\n        ...category,\r\n        dishes: category.dishes.filter(dish =>\r\n          dish.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n        ),\r\n      }));\r\n    },\r\n    totalPrice() {\r\n      // 计算总价逻辑与之前保持一致\r\n      this.tp = this.cart.reduce((sum, item) => sum + item.price, 0)\r\n      return this.tp;\r\n    },\r\n  },\r\n  created() {\r\n    console.log(localStorage.getItem(\"employeeID\"))\r\n    this.searchDishs();\r\n  },\r\n  methods: {\r\n    open2() {\r\n      this.$message({\r\n        message: '点餐成功',\r\n        type: 'success'\r\n      });\r\n    },\r\n    open1() {\r\n      this.$message({\r\n        message: '该桌已有客人'\r\n      });\r\n    },\r\n    //下单\r\n    async orderdish(cart, table) {\r\n      console.log(cart)\r\n      console.log(table)\r\n      console.log(this.tp)\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/order/download?table=\" + table + \"&tp=\" + this.tp + \"&employeeID=\" + localStorage.getItem(\"employeeID\"),\r\n        data: cart\r\n      });\r\n      console.log(res.data);\r\n      if (res.data.code == 200) {\r\n        this.tp = '',\r\n          this.cart = [],\r\n          this.reserveForm.tableNumber = '',\r\n          this.open2();\r\n      } else {\r\n        this.open1();\r\n      }\r\n    },\r\n    //添加购物车\r\n    addToCart(dish) {\r\n      this.cart.push(dish);\r\n    },\r\n    removeFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    // filterDishes 方法如果需要的话，可以添加防抖或节流逻辑\r\n\r\n    reserveTable() {\r\n      // 检查桌子号码是否已输入\r\n      if (this.reserveForm.tableNumber) {\r\n        // 在这里实现安排桌子号码的逻辑\r\n        // 你可以发送一个请求到后端API来安排桌子\r\n        // 或者，如果只是前端演示，你可以简单地打印出信息\r\n        console.log(`桌子号码 ${this.reserveForm.tableNumber} 已安排`);\r\n        // 清空桌子号码输入框\r\n        this.reserveForm.tableNumber = '';\r\n      } else {\r\n        alert('请输入桌子号码！');\r\n      }\r\n    },\r\n    //查询所有菜品\r\n    async searchDishs() {\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/dishes/findAllDishes\",\r\n      });\r\n      console.log(res.data.data)\r\n      const ds = res.data.data\r\n\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dish-card {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n}\r\n\r\n.cart-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.item-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.float-right {\r\n  float: right;\r\n}\r\n\r\n.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 50px;\r\n}\r\n\r\n.left {\r\n  width: 50%;\r\n}\r\n\r\n.right {\r\n  width: 40%;\r\n\r\n}\r\n\r\n/* 添加更多样式以适应你的需求 */\r\n</style>"],"mappings":";AAuEA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;QACA;QACAC,WAAA;MACA;MACAC,YAAA;MAAA;MACAC,UAAA,GACA;QACAC,IAAA;QACAC,MAAA,GACA;UAAAC,EAAA;UAAAF,IAAA;UAAAG,WAAA;UAAAC,KAAA;QAAA,GACA;UAAAF,EAAA;UAAAF,IAAA;UAAAG,WAAA;UAAAC,KAAA;QAAA;QACA;QAAA;MAEA,GACA;QACAJ,IAAA;QACAC,MAAA,GACA;UAAAC,EAAA;UAAAF,IAAA;UAAAG,WAAA;UAAAC,KAAA;QAAA,GACA;UAAAF,EAAA;UAAAF,IAAA;UAAAG,WAAA;UAAAC,KAAA;QAAA;QACA;QAAA;MAEA;MACA;MAAA,CACA;MACAC,IAAA;MACAC,WAAA;MACAC,cAAA;MACAC,EAAA;IACA;EACA;EACAC,QAAA;IACAC,mBAAA;MACA;MACA,YAAAX,UAAA,CAAAY,GAAA,CAAAC,QAAA;QACA,GAAAA,QAAA;QACAX,MAAA,EAAAW,QAAA,CAAAX,MAAA,CAAAY,MAAA,CAAAC,IAAA,IACAA,IAAA,CAAAd,IAAA,CAAAe,WAAA,GAAAC,QAAA,MAAAV,WAAA,CAAAS,WAAA,GACA;MACA;IACA;IACAE,WAAA;MACA;MACA,KAAAT,EAAA,QAAAH,IAAA,CAAAa,MAAA,EAAAC,GAAA,EAAAC,IAAA,KAAAD,GAAA,GAAAC,IAAA,CAAAhB,KAAA;MACA,YAAAI,EAAA;IACA;EACA;EACAa,QAAA;IACAC,OAAA,CAAAC,GAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,QAAA;QACAC,OAAA;QACAC,IAAA;MACA;IACA;IACAC,MAAA;MACA,KAAAH,QAAA;QACAC,OAAA;MACA;IACA;IACA;IACA,MAAAG,UAAA5B,IAAA,EAAA6B,KAAA;MACAZ,OAAA,CAAAC,GAAA,CAAAlB,IAAA;MACAiB,OAAA,CAAAC,GAAA,CAAAW,KAAA;MACAZ,OAAA,CAAAC,GAAA,MAAAf,EAAA;MACA,MAAA2B,GAAA,SAAA1C,KAAA;QACA2C,MAAA;QACAC,GAAA,kDAAAH,KAAA,iBAAA1B,EAAA,oBAAAgB,YAAA,CAAAC,OAAA;QACA/B,IAAA,EAAAW;MACA;MACAiB,OAAA,CAAAC,GAAA,CAAAY,GAAA,CAAAzC,IAAA;MACA,IAAAyC,GAAA,CAAAzC,IAAA,CAAA4C,IAAA;QACA,KAAA9B,EAAA,OACA,KAAAH,IAAA,OACA,KAAAT,WAAA,CAAAC,WAAA,OACA,KAAA+B,KAAA;MACA;QACA,KAAAI,KAAA;MACA;IACA;IACA;IACAO,UAAAzB,IAAA;MACA,KAAAT,IAAA,CAAAmC,IAAA,CAAA1B,IAAA;IACA;IACA2B,eAAAC,KAAA;MACA,KAAArC,IAAA,CAAAsC,MAAA,CAAAD,KAAA;IACA;IACA;;IAEAE,aAAA;MACA;MACA,SAAAhD,WAAA,CAAAC,WAAA;QACA;QACA;QACA;QACAyB,OAAA,CAAAC,GAAA,cAAA3B,WAAA,CAAAC,WAAA;QACA;QACA,KAAAD,WAAA,CAAAC,WAAA;MACA;QACAgD,KAAA;MACA;IACA;IACA;IACA,MAAAnB,YAAA;MACA,MAAAS,GAAA,SAAA1C,KAAA;QACA2C,MAAA;QACAC,GAAA;MACA;MACAf,OAAA,CAAAC,GAAA,CAAAY,GAAA,CAAAzC,IAAA,CAAAA,IAAA;MACA,MAAAoD,EAAA,GAAAX,GAAA,CAAAzC,IAAA,CAAAA,IAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}