{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      dishList: [],\n      reserveForm: {\n        // ... 其他表单项数据\n        tableNumber: '' // 初始时选择一个桌子号码或为空字符串\n      },\n      tableNumbers: ['1', '2', '3', '4', '5'],\n      // 假设我们有5张桌子，这里列出它们的号码\n      categories: [{\n        dishType: '',\n        dishes: [{\n          store_id: localStorage.getItem('storeID'),\n          dishID: 0,\n          dishImg: '',\n          dishesName: '',\n          dishesDes: '',\n          dishesPrice: 0\n        }\n        // { id: 4, imgurl: 'https://img.zcool.cn/community/01da5f5de0aa9ca80120686b4e86ef.jpg@1280w_1l_2o_100sh.jpg', name: '椒麻鸡', description: '麻辣可口', price: 30 },\n        // // ... 其他川菜\n        ]\n      }\n      // {\n      //   name: '粤菜',\n      //   dishes: [\n      //     { id: 2, imgurl : 'https://img.zcool.cn/community/01da5f5de0aa9ca80120686b4e86ef.jpg@1280w_1l_2o_100sh.jpg',name: '清蒸鲈鱼', description: '鲜嫩可口', price: 25 },\n      //     { id: 1, imgurl : 'https://img.zcool.cn/community/01da5f5de0aa9ca80120686b4e86ef.jpg@1280w_1l_2o_100sh.jpg',name: '白切鸡', description: '皮脆肉嫩', price: 30 },\n      //     // ... 其他粤菜\n      //   ],\n      // },\n      // // ... 添加更多分类\n      ],\n      cart: [],\n      searchQuery: '',\n      filteredDishes: [],\n      tp: ''\n    };\n  },\n  computed: {\n    filteredCategories() {\n      // 搜索逻辑与之前保持一致\n      return this.categories.map(category => ({\n        ...category,\n        dishes: category.dishes.filter(dish => dish.name.toLowerCase().includes(this.searchQuery.toLowerCase()))\n      }));\n    },\n    totalPrice() {\n      // 计算总价逻辑与之前保持一致\n      this.tp = this.cart.reduce((sum, item) => sum + item.price, 0);\n      return this.tp;\n    }\n  },\n  created() {\n    console.log(localStorage.getItem(\"employeeID\"));\n    // this.searchDishs();\n    this.showDishList();\n    this.store_id;\n  },\n  methods: {\n    open2() {\n      this.$message({\n        message: '点餐成功',\n        type: 'success'\n      });\n    },\n    open1() {\n      this.$message({\n        message: '该桌已有客人'\n      });\n    },\n    //显示菜品\n    async showDishList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dish/findAllByStoreID\",\n        params: {\n          storeID: this.categories.store_id\n        }\n      });\n      this.list = res.data.data;\n      console.log(this.list);\n    },\n    //下单\n    async orderdish(cart, table) {\n      console.log(cart);\n      console.log(table);\n      console.log(this.tp);\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/order/download?table=\" + table + \"&tp=\" + this.tp + \"&employeeID=\" + localStorage.getItem(\"employeeID\"),\n        data: cart\n      });\n      console.log(res.data);\n      if (res.data.code == 200) {\n        this.tp = '', this.cart = [], this.reserveForm.tableNumber = '', this.open2();\n      } else {\n        this.open1();\n      }\n    },\n    //添加购物车\n    addToCart(dish) {\n      this.cart.push(dish);\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    // filterDishes 方法如果需要的话，可以添加防抖或节流逻辑\n\n    reserveTable() {\n      // 检查桌子号码是否已输入\n      if (this.reserveForm.tableNumber) {\n        // 在这里实现安排桌子号码的逻辑\n        // 你可以发送一个请求到后端API来安排桌子\n        // 或者，如果只是前端演示，你可以简单地打印出信息\n        console.log(`桌子号码 ${this.reserveForm.tableNumber} 已安排`);\n        // 清空桌子号码输入框\n        this.reserveForm.tableNumber = '';\n      } else {\n        alert('请输入桌子号码！');\n      }\n    }\n    // //查询所有菜品\n    // async searchDishs() {\n    //   const res = await axios({\n    //     method: \"post\",\n    //     url: \"http://localhost:8080/dishes/findAllDishes\",\n    //   });\n    //   console.log(res.data.data)\n    //   const ds = res.data.data\n\n    // }\n  }\n};","map":{"version":3,"names":["axios","data","dishList","reserveForm","tableNumber","tableNumbers","categories","dishType","dishes","store_id","localStorage","getItem","dishID","dishImg","dishesName","dishesDes","dishesPrice","cart","searchQuery","filteredDishes","tp","computed","filteredCategories","map","category","filter","dish","name","toLowerCase","includes","totalPrice","reduce","sum","item","price","created","console","log","showDishList","methods","open2","$message","message","type","open1","res","method","url","params","storeID","list","orderdish","table","code","addToCart","push","removeFromCart","index","splice","reserveTable","alert"],"sources":["src/views/order/Order.vue"],"sourcesContent":["=<template>\r\n  <el-card>\r\n    <div class=\"container\">\r\n      <div class=\"left\" style=\"margin-top: 20px; height: auto; width: 45%;\">\r\n        <el-card>\r\n          <el-header>\r\n            <h1 style=\"font-size: large; font-weight: bold; margin-bottom: 10px\">菜单</h1>\r\n            <el-input style=\"margin-bottom: 5px;\" placeholder=\"搜索菜品\" v-model=\"searchQuery\"  clearable></el-input>\r\n          </el-header>\r\n        </el-card>\r\n        <el-container>\r\n\r\n          <el-main>\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"24\" v-for=\"(category, categoryIndex) in filteredCategories\" :key=\"categoryIndex\">\r\n                <el-card class=\"menu-card\">\r\n                  <div slot=\"header\" class=\"clearfix\">\r\n                    <span>{{ category.name }}</span>\r\n                  </div>\r\n                  <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\" v-for=\"(dish, dishIndex) in category.dishes\" :key=\"dishIndex\">\r\n                      <el-card class=\"dish-card\">\r\n                        <div slot=\"header\"><el-image :src=\"dish.imgurl\"></el-image></div>\r\n                        <div>{{ dish.name }}</div>\r\n                        <div>描述：{{ dish.description }}</div>\r\n                        <div class=\"price\">价格: {{ dish.price }}</div>\r\n                        <el-button type=\"primary\" @click=\"addToCart(dish)\">添加菜品</el-button>\r\n                      </el-card>\r\n                    </el-col>\r\n                  </el-row>\r\n                </el-card>\r\n              </el-col>\r\n            </el-row>\r\n          </el-main>\r\n        </el-container>\r\n      </div>\r\n\r\n      <div class=\"right\" style=\"margin-top: 20px; height: auto; width: 45%;\">\r\n        <el-card>\r\n          <el-header>\r\n            <h1 style=\"font-size: large; font-weight: bold; margin-bottom: 10px\">店内点餐</h1>\r\n          </el-header>\r\n        </el-card>\r\n        <el-container v-if=\"cart.length\" class=\"cart-container\">\r\n          <el-card class=\"menu-card\">\r\n            <el-main>\r\n              <el-table :data=\"cart\" style=\"width: 100%\">\r\n                <el-table-column prop=\"name\" label=\"菜品名称\"></el-table-column>\r\n                <el-table-column prop=\"price\" label=\"价格\" width=\"180\"></el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button @click=\"removeFromCart(scope.$index)\" type=\"text\" size=\"small\">移除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-main>\r\n            <el-footer>\r\n              <div style=\"font-size: large; font-weight: bold; margin-bottom: 10px\">总价: {{ totalPrice }}\r\n                <el-select style=\"margin-left: 50px;\" v-model=\"reserveForm.tableNumber\" placeholder=\"请选择桌子号码\">\r\n                  <el-option v-for=\"table in tableNumbers\" :key=\"table\" :label=\"table\" :value=\"table\"></el-option>\r\n                </el-select>\r\n                <el-button type=\"primary\"\r\n                  @click=\"orderdish(cart, reserveForm.tableNumber)\">点餐</el-button>\r\n              </div>\r\n            </el-footer>\r\n          </el-card>\r\n        </el-container>\r\n      </div>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dishList: [],\r\n      reserveForm: {\r\n        // ... 其他表单项数据\r\n        tableNumber: '', // 初始时选择一个桌子号码或为空字符串\r\n      },\r\n      tableNumbers: ['1', '2', '3', '4', '5'], // 假设我们有5张桌子，这里列出它们的号码\r\n      categories: [\r\n        {\r\n          dishType: '',\r\n          dishes: [\r\n            { \r\n              store_id: localStorage.getItem('storeID'),\r\n              dishID: 0, \r\n              dishImg: '', \r\n              dishesName: '', \r\n              dishesDes: '', \r\n              dishesPrice: 0 \r\n            },\r\n            // { id: 4, imgurl: 'https://img.zcool.cn/community/01da5f5de0aa9ca80120686b4e86ef.jpg@1280w_1l_2o_100sh.jpg', name: '椒麻鸡', description: '麻辣可口', price: 30 },\r\n            // // ... 其他川菜\r\n          ],\r\n        },\r\n        // {\r\n        //   name: '粤菜',\r\n        //   dishes: [\r\n        //     { id: 2, imgurl : 'https://img.zcool.cn/community/01da5f5de0aa9ca80120686b4e86ef.jpg@1280w_1l_2o_100sh.jpg',name: '清蒸鲈鱼', description: '鲜嫩可口', price: 25 },\r\n        //     { id: 1, imgurl : 'https://img.zcool.cn/community/01da5f5de0aa9ca80120686b4e86ef.jpg@1280w_1l_2o_100sh.jpg',name: '白切鸡', description: '皮脆肉嫩', price: 30 },\r\n        //     // ... 其他粤菜\r\n        //   ],\r\n        // },\r\n        // // ... 添加更多分类\r\n      ],\r\n      cart: [],\r\n      searchQuery: '',\r\n      filteredDishes: [],\r\n      tp: '',\r\n    };\r\n  },\r\n  computed: {\r\n    filteredCategories() {\r\n      // 搜索逻辑与之前保持一致\r\n      return this.categories.map(category => ({\r\n        ...category,\r\n        dishes: category.dishes.filter(dish =>\r\n          dish.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n        ),\r\n      }));\r\n    },\r\n    totalPrice() {\r\n      // 计算总价逻辑与之前保持一致\r\n      this.tp = this.cart.reduce((sum, item) => sum + item.price, 0)\r\n      return this.tp;\r\n    },\r\n  },\r\n  created() {\r\n    console.log(localStorage.getItem(\"employeeID\"))\r\n    // this.searchDishs();\r\n    this.showDishList();\r\n    this.store_id\r\n  },\r\n  methods: {\r\n    open2() {\r\n      this.$message({\r\n        message: '点餐成功',\r\n        type: 'success'\r\n      });\r\n    },\r\n    open1() {\r\n      this.$message({\r\n        message: '该桌已有客人'\r\n      });\r\n    },\r\n    //显示菜品\r\n    async showDishList() {\r\n      const res = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/dish/findAllByStoreID\",\r\n        params: {\r\n          storeID: this.categories.store_id\r\n        },\r\n      });\r\n      this.list = res.data.data;\r\n      console.log(this.list)\r\n    },\r\n    //下单\r\n    async orderdish(cart, table) {\r\n      console.log(cart)\r\n      console.log(table)\r\n      console.log(this.tp)\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/order/download?table=\" + table + \"&tp=\" + this.tp + \"&employeeID=\" + localStorage.getItem(\"employeeID\"),\r\n        data: cart\r\n      });\r\n      console.log(res.data);\r\n      if (res.data.code == 200) {\r\n        this.tp = '',\r\n          this.cart = [],\r\n          this.reserveForm.tableNumber = '',\r\n          this.open2();\r\n      } else {\r\n        this.open1();\r\n      }\r\n    },\r\n    //添加购物车\r\n    addToCart(dish) {\r\n      this.cart.push(dish);\r\n    },\r\n    removeFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    // filterDishes 方法如果需要的话，可以添加防抖或节流逻辑\r\n\r\n    reserveTable() {\r\n      // 检查桌子号码是否已输入\r\n      if (this.reserveForm.tableNumber) {\r\n        // 在这里实现安排桌子号码的逻辑\r\n        // 你可以发送一个请求到后端API来安排桌子\r\n        // 或者，如果只是前端演示，你可以简单地打印出信息\r\n        console.log(`桌子号码 ${this.reserveForm.tableNumber} 已安排`);\r\n        // 清空桌子号码输入框\r\n        this.reserveForm.tableNumber = '';\r\n      } else {\r\n        alert('请输入桌子号码！');\r\n      }\r\n    },\r\n    // //查询所有菜品\r\n    // async searchDishs() {\r\n    //   const res = await axios({\r\n    //     method: \"post\",\r\n    //     url: \"http://localhost:8080/dishes/findAllDishes\",\r\n    //   });\r\n    //   console.log(res.data.data)\r\n    //   const ds = res.data.data\r\n\r\n    // }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dish-card {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n  color: goldenrod;\r\n}\r\n\r\n.cart-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.item-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.float-right {\r\n  float: right;\r\n}\r\n\r\n.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.left {\r\n  width: 50%;\r\n}\r\n\r\n.right {\r\n  width: 40%;\r\n\r\n}\r\n\r\n/* 添加更多样式以适应你的需求 */\r\n</style>"],"mappings":";AA2EA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;QACA;QACAC,WAAA;MACA;MACAC,YAAA;MAAA;MACAC,UAAA,GACA;QACAC,QAAA;QACAC,MAAA,GACA;UACAC,QAAA,EAAAC,YAAA,CAAAC,OAAA;UACAC,MAAA;UACAC,OAAA;UACAC,UAAA;UACAC,SAAA;UACAC,WAAA;QACA;QACA;QACA;QAAA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAA,CACA;MACAC,IAAA;MACAC,WAAA;MACAC,cAAA;MACAC,EAAA;IACA;EACA;EACAC,QAAA;IACAC,mBAAA;MACA;MACA,YAAAhB,UAAA,CAAAiB,GAAA,CAAAC,QAAA;QACA,GAAAA,QAAA;QACAhB,MAAA,EAAAgB,QAAA,CAAAhB,MAAA,CAAAiB,MAAA,CAAAC,IAAA,IACAA,IAAA,CAAAC,IAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAX,WAAA,CAAAU,WAAA,GACA;MACA;IACA;IACAE,WAAA;MACA;MACA,KAAAV,EAAA,QAAAH,IAAA,CAAAc,MAAA,EAAAC,GAAA,EAAAC,IAAA,KAAAD,GAAA,GAAAC,IAAA,CAAAC,KAAA;MACA,YAAAd,EAAA;IACA;EACA;EACAe,QAAA;IACAC,OAAA,CAAAC,GAAA,CAAA3B,YAAA,CAAAC,OAAA;IACA;IACA,KAAA2B,YAAA;IACA,KAAA7B,QAAA;EACA;EACA8B,OAAA;IACAC,MAAA;MACA,KAAAC,QAAA;QACAC,OAAA;QACAC,IAAA;MACA;IACA;IACAC,MAAA;MACA,KAAAH,QAAA;QACAC,OAAA;MACA;IACA;IACA;IACA,MAAAJ,aAAA;MACA,MAAAO,GAAA,SAAA7C,KAAA;QACA8C,MAAA;QACAC,GAAA;QACAC,MAAA;UACAC,OAAA,OAAA3C,UAAA,CAAAG;QACA;MACA;MACA,KAAAyC,IAAA,GAAAL,GAAA,CAAA5C,IAAA,CAAAA,IAAA;MACAmC,OAAA,CAAAC,GAAA,MAAAa,IAAA;IACA;IACA;IACA,MAAAC,UAAAlC,IAAA,EAAAmC,KAAA;MACAhB,OAAA,CAAAC,GAAA,CAAApB,IAAA;MACAmB,OAAA,CAAAC,GAAA,CAAAe,KAAA;MACAhB,OAAA,CAAAC,GAAA,MAAAjB,EAAA;MACA,MAAAyB,GAAA,SAAA7C,KAAA;QACA8C,MAAA;QACAC,GAAA,kDAAAK,KAAA,iBAAAhC,EAAA,oBAAAV,YAAA,CAAAC,OAAA;QACAV,IAAA,EAAAgB;MACA;MACAmB,OAAA,CAAAC,GAAA,CAAAQ,GAAA,CAAA5C,IAAA;MACA,IAAA4C,GAAA,CAAA5C,IAAA,CAAAoD,IAAA;QACA,KAAAjC,EAAA,OACA,KAAAH,IAAA,OACA,KAAAd,WAAA,CAAAC,WAAA,OACA,KAAAoC,KAAA;MACA;QACA,KAAAI,KAAA;MACA;IACA;IACA;IACAU,UAAA5B,IAAA;MACA,KAAAT,IAAA,CAAAsC,IAAA,CAAA7B,IAAA;IACA;IACA8B,eAAAC,KAAA;MACA,KAAAxC,IAAA,CAAAyC,MAAA,CAAAD,KAAA;IACA;IACA;;IAEAE,aAAA;MACA;MACA,SAAAxD,WAAA,CAAAC,WAAA;QACA;QACA;QACA;QACAgC,OAAA,CAAAC,GAAA,cAAAlC,WAAA,CAAAC,WAAA;QACA;QACA,KAAAD,WAAA,CAAAC,WAAA;MACA;QACAwD,KAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}