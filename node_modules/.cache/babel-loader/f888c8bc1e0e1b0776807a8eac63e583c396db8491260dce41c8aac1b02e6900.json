{"ast":null,"code":"import axios from \"axios\";\nimport dayjs from \"dayjs\";\nexport default {\n  data() {\n    return {\n      list: [],\n      // 分页相关\n      pageno: 1,\n      pagesize: 5,\n      total: 0,\n      // 搜索条件\n      params: {\n        assetName: dayjs().subtract(1, 'year').format('YYYY-MM-DD HH:mm:ss'),\n        brandModel: dayjs().format('YYYY-MM-DD HH:mm:ss')\n      },\n      userFormData: {\n        name: '',\n        baseSalary: 0.00,\n        allowance: 0.00,\n        bonus: 0.00,\n        subsidy: 0.00,\n        deduction: 0.00,\n        personalIncomeTax: 0.00,\n        insurance: 0.00,\n        actualSalary: 0.00\n      },\n      bookID: localStorage.getItem('bookID'),\n      employeeID: localStorage.getItem('employeeID'),\n      actionType: '',\n      id: '',\n      dialogFormVisible: false,\n      employeeList: [],\n      selectedEmployee: null\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const formattedParams = {\n        ...this.params,\n        assetName: dayjs(this.params.assetName).format('YYYY-MM-DD HH:mm:ss'),\n        brandModel: dayjs(this.params.brandModel).format('YYYY-MM-DD HH:mm:ss')\n      };\n      const res = await axios({\n        method: \"get\",\n        url: \"/managementSalary\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          bookID: this.bookID,\n          ...formattedParams\n        }\n      });\n      // 修改日期格式\n      this.list = res.data.data.list.map(item => {\n        return {\n          ...item,\n          baseSalary: parseFloat(item.baseSalary),\n          allowance: parseFloat(item.allowance),\n          bonus: parseFloat(item.bonus),\n          subsidy: parseFloat(item.subsidy),\n          deduction: parseFloat(item.deduction),\n          personalIncomeTax: parseFloat(item.personalIncomeTax),\n          actualSalary: parseFloat(item.actualSalary),\n          insurance: parseFloat(item.insurance),\n          // 其他字段...\n          payoutDate: dayjs(item.payoutDate).format('YYYY-MM-DD')\n        };\n      });\n      console.log(this.list);\n      this.total = res.data.data.total;\n      const employeeListRes = await axios({\n        url: \"/employee\",\n        method: \"get\",\n        params: {\n          bookID: this.bookID\n        }\n      });\n      this.employeeList = employeeListRes.data.data.list;\n    },\n    // 点击搜索\n    search() {\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      this.actionType = 'add';\n      this.userFormData = {\n        name: '',\n        baseSalary: 0.00,\n        allowance: 0.00,\n        bonus: 0.00,\n        subsidy: 0.00,\n        deduction: 0.00,\n        personalIncomeTax: 0.00,\n        insurance: 440.00,\n        actualSalary: 0.00\n      };\n    },\n    //修改弹窗\n    edit(row) {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 数据回显\n      this.userFormData.baseSalary = row.baseSalary;\n      this.userFormData.allowance = row.allowance;\n      this.userFormData.bonus = row.bonus;\n      this.userFormData.subsidy = row.subsidy;\n      this.userFormData.deduction = row.deduction;\n      this.userFormData.personalIncomeTax = row.personalIncomeTax;\n      this.userFormData.actualSalary = row.actualSalary;\n      this.userFormData.insurance = row.insurance;\n      // 记录id\n      this.id = row.salaryID;\n      console.log(row);\n      // 记录动作\n      this.actionType = 'edit';\n    },\n    calculatePersonalIncomeTax() {\n      console.log('计算工资');\n      // 先从 userFormData 中获取其他输入项的值\n\n      const {\n        baseSalary,\n        allowance,\n        bonus,\n        subsidy,\n        deduction,\n        insurance\n      } = this.userFormData;\n\n      // 计算总收入\n      const totalIncome = baseSalary + allowance + bonus + subsidy - deduction;\n\n      // 计算税前应纳税额\n      const taxableIncome = totalIncome - 5000;\n\n      // 根据不同的情况计算 personalIncomeTax\n      if (taxableIncome > 0 && taxableIncome <= 5000) {\n        this.userFormData.personalIncomeTax = taxableIncome * 0;\n      } else if (taxableIncome > 5000 && taxableIncome <= 8000) {\n        this.userFormData.personalIncomeTax = taxableIncome * 0.03;\n      } else if (taxableIncome > 8000 && taxableIncome <= 17000) {\n        this.userFormData.personalIncomeTax = parseFloat((taxableIncome * 0.1).toFixed(2));\n      } else if (taxableIncome > 17000) {\n        this.userFormData.personalIncomeTax = taxableIncome * 0.2;\n      }\n      console.log(this.userFormData, '______');\n      const actualSalary = totalIncome - this.userFormData.personalIncomeTax - insurance;\n      this.userFormData.actualSalary = actualSalary;\n    },\n    submit() {\n      console.log(selectedEmployee);\n    }\n  },\n  watch: {\n    userFormData: {\n      handler() {\n        console.log('数据发生变化了！！！');\n        this.calculatePersonalIncomeTax();\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["axios","dayjs","data","list","pageno","pagesize","total","params","assetName","subtract","format","brandModel","userFormData","name","baseSalary","allowance","bonus","subsidy","deduction","personalIncomeTax","insurance","actualSalary","bookID","localStorage","getItem","employeeID","actionType","id","dialogFormVisible","employeeList","selectedEmployee","created","getList","methods","formattedParams","res","method","url","map","item","parseFloat","payoutDate","console","log","employeeListRes","search","pagechange","addOpen","edit","row","salaryID","calculatePersonalIncomeTax","totalIncome","taxableIncome","toFixed","submit","watch","handler","deep"],"sources":["src/views/salary/Salary.vue"],"sourcesContent":["<template>\r\n    <div style=\"height: auto; width: auto;\">\r\n\r\n        <!-- 搜素和新增区域 -->\r\n        <el-card>\r\n            <div style=\"display: flex; flex-direction: row;\">\r\n                <!-- 搜索区域 -->\r\n                <div style=\"flex: 8;\">\r\n                    <el-form :inline=\"true\">\r\n                        <el-form-item label=\"根据月份查询\">\r\n                            <el-date-picker v-model=\"params.assetName\" type=\"date\" placeholder=\"开始日期\">\r\n                            </el-date-picker>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-date-picker v-model=\"params.brandModel\" type=\"date\" placeholder=\"截止日期\">\r\n                            </el-date-picker>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n                        </el-form-item>\r\n                        <el-button type=\"primary\" @click=\"addOpen\">新增员工工资信息</el-button>\r\n                    </el-form>\r\n                </div>\r\n            </div>\r\n        </el-card>\r\n\r\n        <!-- 员工工资表 -->\r\n        <el-card style=\"margin-top: 20px;\">\r\n\r\n            <el-card>\r\n                <span style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">员工工资表</span>\r\n            </el-card>\r\n\r\n            <el-table :data=\"list\" border style=\"width: 100%\">\r\n                <el-table-column prop=\"employee.name\" label=\"姓名\" width=\"70\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"baseSalary\" label=\"基本工资\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"allowance\" label=\"津贴\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"bonus\" label=\"奖金\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"subsidy\" label=\"补助\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"deduction\" label=\"扣款\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"personalIncomeTax\" label=\"个税\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"insurance\" label=\"保险金额\" align=\"center\"> </el-table-column>\r\n                <el-table-column prop=\"actualSalary\" label=\"实发工资\" align=\"center\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"payoutDate\" label=\"发放日期\" align=\"center\"> </el-table-column>\r\n                <el-table-column fixed=\"right\" label=\"操作\" align=\"center\">\r\n                    <template #default=\"{ row }\">\r\n                        <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改工资</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column fixed=\"right\" label=\"生成凭证\" align=\"center\">\r\n                    <template #default=\"{ row }\">\r\n                        <el-button type=\"text\" size=\"small\">生成凭证</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <!-- 分页组件 -->\r\n            <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 弹窗区域 -->\r\n        <el-dialog :title=\"actionType == 'add' ? '新增员工工资信息' : '编辑员工工资信息'\" :visible.sync=\"dialogFormVisible\">\r\n            <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n\r\n                <el-form-item label=\"员工姓名\">\r\n                    <el-select v-model=\"selectedEmployee\" placeholder=\"选择员工\">\r\n                        <el-option :label=\"employee.name\" :value=\"employee.id\" :key=\"employee.id\"\r\n                            v-for=\"employee in employeeList\" />\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"基本工资\">\r\n                    <el-input-number v-model=\"userFormData.baseSalary\" placeholder=\"基本工资\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"津贴\">\r\n                    <el-input-number v-model=\"userFormData.allowance\" placeholder=\"津贴\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"奖金\">\r\n                    <el-input-number v-model=\"userFormData.bonus\" placeholder=\"奖金\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"补助\">\r\n                    <el-input-number v-model=\"userFormData.subsidy\" placeholder=\"补助\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"扣款\">\r\n                    <el-input-number v-model=\"userFormData.deduction\" placeholder=\"扣款\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"个税\">\r\n                    <el-input-number disabled v-model=\"userFormData.personalIncomeTax\" placeholder=\"个税\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"保险金额\">\r\n                    <el-input-number disabled v-model=\"userFormData.insurance\" placeholder=\"保险金额\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"实发工资\">\r\n                    <el-input-number disabled v-model=\"userFormData.actualSalary\" placeholder=\"实发工资\"></el-input-number>\r\n                </el-form-item>\r\n\r\n                <el-form-item>\r\n                    <el-button @click=\"submit\">提交</el-button>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\"\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            list: [],\r\n            // 分页相关\r\n            pageno: 1,\r\n            pagesize: 5,\r\n            total: 0,\r\n            // 搜索条件\r\n            params: {\r\n                assetName: dayjs().subtract(1, 'year').format('YYYY-MM-DD HH:mm:ss'),\r\n                brandModel: dayjs().format('YYYY-MM-DD HH:mm:ss')\r\n            },\r\n            userFormData: {\r\n                name: '',\r\n                baseSalary: 0.00,\r\n                allowance: 0.00,\r\n                bonus: 0.00,\r\n                subsidy: 0.00,\r\n                deduction: 0.00,\r\n                personalIncomeTax: 0.00,\r\n                insurance: 0.00,\r\n                actualSalary: 0.00\r\n            },\r\n            bookID: localStorage.getItem('bookID'),\r\n            employeeID: localStorage.getItem('employeeID'),\r\n            actionType: '',\r\n            id: '',\r\n            dialogFormVisible: false,\r\n            employeeList: [],\r\n            selectedEmployee: null,\r\n        };\r\n    },\r\n    created() {\r\n        this.getList()\r\n    },\r\n\r\n    methods: {\r\n        async getList() {\r\n\r\n            const formattedParams = {\r\n                ...this.params,\r\n                assetName: dayjs(this.params.assetName).format('YYYY-MM-DD HH:mm:ss'),\r\n                brandModel: dayjs(this.params.brandModel).format('YYYY-MM-DD HH:mm:ss'),\r\n            };\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"/managementSalary\",\r\n                params: {\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                    bookID: this.bookID,\r\n                    ...formattedParams\r\n                },\r\n            });\r\n            // 修改日期格式\r\n            this.list = res.data.data.list.map(item => {\r\n                return {\r\n                    ...item,\r\n                    baseSalary: parseFloat(item.baseSalary),\r\n                    allowance: parseFloat(item.allowance),\r\n                    bonus: parseFloat(item.bonus),\r\n                    subsidy: parseFloat(item.subsidy),\r\n                    deduction: parseFloat(item.deduction),\r\n                    personalIncomeTax: parseFloat(item.personalIncomeTax),\r\n                    actualSalary: parseFloat(item.actualSalary),\r\n                    insurance: parseFloat(item.insurance),\r\n                    // 其他字段...\r\n                    payoutDate: dayjs(item.payoutDate).format('YYYY-MM-DD'),\r\n                };\r\n            });\r\n            console.log(this.list)\r\n            this.total = res.data.data.total;\r\n\r\n            const employeeListRes = await axios({\r\n                url: \"/employee\",\r\n                method: \"get\",\r\n                params: {\r\n                    bookID: this.bookID\r\n                }\r\n            })\r\n            this.employeeList = employeeListRes.data.data.list\r\n        },\r\n        // 点击搜索\r\n        search() {\r\n            this.getList()\r\n        },\r\n        // 页码改变\r\n        pagechange(pageno) {\r\n            // 条件改变\r\n            this.pageno = pageno\r\n            // 重新请求数据\r\n            this.getList()\r\n        },\r\n        // 打开新增弹窗，\r\n        addOpen() {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true;\r\n            // 记录状态\r\n            this.actionType = 'add';\r\n            this.userFormData = {\r\n                name: '',\r\n                baseSalary: 0.00,\r\n                allowance: 0.00,\r\n                bonus: 0.00,\r\n                subsidy: 0.00,\r\n                deduction: 0.00,\r\n                personalIncomeTax: 0.00,\r\n                insurance: 440.00,\r\n                actualSalary: 0.00\r\n            };\r\n        },\r\n        //修改弹窗\r\n        edit(row) {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true\r\n            // 数据回显\r\n            this.userFormData.baseSalary = row.baseSalary\r\n            this.userFormData.allowance = row.allowance\r\n            this.userFormData.bonus = row.bonus\r\n            this.userFormData.subsidy = row.subsidy\r\n            this.userFormData.deduction = row.deduction\r\n            this.userFormData.personalIncomeTax = row.personalIncomeTax\r\n            this.userFormData.actualSalary = row.actualSalary\r\n            this.userFormData.insurance = row.insurance\r\n            // 记录id\r\n            this.id = row.salaryID\r\n            console.log(row)\r\n            // 记录动作\r\n            this.actionType = 'edit'\r\n        },\r\n\r\n        calculatePersonalIncomeTax() {\r\n            console.log('计算工资')\r\n            // 先从 userFormData 中获取其他输入项的值\r\n\r\n            const { baseSalary, allowance, bonus, subsidy, deduction, insurance } = this.userFormData;\r\n\r\n            // 计算总收入\r\n            const totalIncome = baseSalary + allowance + bonus + subsidy - deduction;\r\n\r\n            // 计算税前应纳税额\r\n            const taxableIncome = totalIncome - 5000;\r\n\r\n            // 根据不同的情况计算 personalIncomeTax\r\n            if (taxableIncome > 0 && taxableIncome <= 5000) {\r\n                this.userFormData.personalIncomeTax = taxableIncome * 0;\r\n            } else if (taxableIncome > 5000 && taxableIncome <= 8000) {\r\n                this.userFormData.personalIncomeTax = taxableIncome * 0.03;\r\n            } else if (taxableIncome > 8000 && taxableIncome <= 17000) {\r\n                this.userFormData.personalIncomeTax = parseFloat((taxableIncome * 0.1).toFixed(2));\r\n            } else if (taxableIncome > 17000) {\r\n                this.userFormData.personalIncomeTax = taxableIncome * 0.2;\r\n            }\r\n            console.log(this.userFormData, '______');\r\n            const actualSalary = totalIncome - this.userFormData.personalIncomeTax - insurance;\r\n            this.userFormData.actualSalary = actualSalary\r\n        },\r\n        submit() {\r\n            console.log(selectedEmployee)\r\n        }\r\n\r\n\r\n\r\n    },\r\n    watch: {\r\n        userFormData: {\r\n            handler() {\r\n                console.log('数据发生变化了！！！')\r\n                this.calculatePersonalIncomeTax()\r\n            },\r\n            deep: true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-top: 20px;\r\n    margin-bottom: 8px;\r\n    justify-content: center;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}