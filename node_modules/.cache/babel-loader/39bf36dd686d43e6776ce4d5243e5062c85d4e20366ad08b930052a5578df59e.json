{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message } from 'element-ui';\nexport default {\n  data() {\n    return {\n      voucher: {\n        date: '',\n        voucherWord: '',\n        no: '',\n        bill: ''\n      },\n      tableData: [{\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      }, {\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      }],\n      debitAmountTotal: ['', '', '', '', '', '', '', '', '', '', ''],\n      creditAmountTotal: ['', '', '', '', '', '', '', '', '', '', '']\n    };\n  },\n  methods: {\n    add() {\n      this.tableData.push({\n        // 摘要\n        summary: '',\n        // 会计科目\n        accountingSubject: '',\n        // 借方\n        debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\n        // 贷方\n        creditAmount: ['', '', '', '', '', '', '', '', '', '', '']\n      });\n    },\n    reduce(index) {\n      if (this.tableData.length <= 2) {\n        Message.warning('不能再删除了！');\n        return;\n      }\n      this.tableData.splice(index, 1);\n    },\n    arrToMoney(arr) {\n      console.log(arr);\n      const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\n\n      // 计算金额\n      let totalAmount = 0;\n      arr.forEach((amount, index) => {\n        // 将金额字符串转换为数字，忽略非数字的项\n        const numericAmount = parseInt(amount || 0);\n\n        // 如果是有效的数字，则累加到总金额\n        if (!isNaN(numericAmount)) {\n          totalAmount += numericAmount * weights[index];\n        }\n      });\n      return totalAmount;\n    },\n    moneyToArr(totalAmount) {\n      // 数字位权值\n      const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\n\n      // 转换为对应的金额数组\n      const debitAmount = weights.map(weight => {\n        const amount = Math.floor(totalAmount / weight);\n        totalAmount -= amount * weight;\n        return amount;\n      });\n\n      // 反转数组并将数字转换为字符串，不足的地方用空字符串填充\n      const reversedDebitAmount = debitAmount.reverse().map(amount => amount !== undefined ? String(amount) : '');\n      const filledDebitAmount = reversedDebitAmount.slice().reverse();\n      return filledDebitAmount;\n    }\n  },\n  watch: {\n    tableData: {\n      handler() {\n        const total = this.tableData.map(item => this.arrToMoney(item.debitAmount)).reduce((prev, cur) => prev = prev + cur, 0);\n        this.debitAmountTotal = this.moneyToArr(total);\n      },\n      deep: true\n    }\n  },\n  created() {\n    console.log(this.moneyToArr(132320));\n  }\n};","map":{"version":3,"names":["Message","data","voucher","date","voucherWord","no","bill","tableData","summary","accountingSubject","debitAmount","creditAmount","debitAmountTotal","creditAmountTotal","methods","add","push","reduce","index","length","warning","splice","arrToMoney","arr","console","log","weights","totalAmount","forEach","amount","numericAmount","parseInt","isNaN","moneyToArr","map","weight","Math","floor","reversedDebitAmount","reverse","undefined","String","filledDebitAmount","slice","watch","handler","total","item","prev","cur","deep","created"],"sources":["src/views/voucher/Voucher.vue"],"sourcesContent":["<template>\r\n    <div style=\"width: 100%; height: 100%;\">\r\n        <el-card>\r\n            <div style=\"font-size: 36px; text-align: center; margin-top: 15px; font-family: STKaiti; font-weight: bold;\">\r\n                记账凭证</div>\r\n\r\n            <div class=\"charge-header\" style=\"margin-top: 15px;\">\r\n                <div>\r\n                    <span>凭证字</span>\r\n                    <el-select style=\"width: 100px; margin-left: 10px;\" v-model=\"voucher.voucherWord\">\r\n                        <el-option label=\"记\" value=\"记\"></el-option>\r\n                        <el-option label=\"收\" value=\"收\"></el-option>\r\n                        <el-option label=\"付\" value=\"付\"></el-option>\r\n                        <el-option label=\"转\" value=\"转\"></el-option>\r\n                    </el-select>\r\n                </div>\r\n                <div>\r\n                    凭证号\r\n                    <el-input type=\"number\" style=\"width: 80px; margin-left: 10px;\" min=\"1\" v-model=\"voucher.no\"></el-input>\r\n                </div>\r\n                <div>\r\n                    日期\r\n                    <el-date-picker type=\"date\" style=\"width: 145px; margin-left: 10px;\"\r\n                        v-model=\"voucher.date\"></el-date-picker>\r\n                </div>\r\n\r\n                <div style=\"float: right;position: relative;\">\r\n                    附单据\r\n                    <el-input type=\"number\" style=\"width: 80px; margin-left: 10px;\" min=\"0\"\r\n                        v-model=\"voucher.bill\"></el-input>\r\n                    张\r\n                </div>\r\n            </div>\r\n\r\n            <div style=\"margin-top: 20px;\">\r\n                <table class=\"my-table\" >\r\n                    <tr>\r\n                        <td :rowspan=\"2\">操作</td>\r\n                        <td :rowspan=\"2\">摘要</td>\r\n                        <td :rowspan=\"2\">会计科目</td>\r\n                        <td :colspan=\"11\">借方金额</td>\r\n                        <td :colspan=\"11\">贷方金额</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>亿</td>\r\n                        <td>千</td>\r\n                        <td>百</td>\r\n                        <td>十</td>\r\n                        <td>万</td>\r\n                        <td>千</td>\r\n                        <td>百</td>\r\n                        <td>十</td>\r\n                        <td>元</td>\r\n                        <td>角</td>\r\n                        <td>分</td>\r\n                        <td>亿</td>\r\n                        <td>千</td>\r\n                        <td>百</td>\r\n                        <td>十</td>\r\n                        <td>万</td>\r\n                        <td>千</td>\r\n                        <td>百</td>\r\n                        <td>十</td>\r\n                        <td>元</td>\r\n                        <td>角</td>\r\n                        <td>分</td>\r\n                    </tr>\r\n\r\n                    <tr v-for=\"(item, index) in tableData\">\r\n                        <td>\r\n                            <i class=\"el-icon-plus\" @click=\"add()\"></i>\r\n                            <i class=\"el-icon-close\" @click=\"reduce(index)\"></i>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" v-model=\"item.summary\">\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" v-model=\"item.accountingSubject\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[0]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[1]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[2]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[3]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[4]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[5]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[6]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[7]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[8]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[9]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.debitAmount[10]\">\r\n                        </td>\r\n\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[0]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[1]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[2]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[3]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[4]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[5]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[6]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[7]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[8]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[9]\">\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"short\" type=\"text\" v-model=\"item.creditAmount[10]\">\r\n                        </td>\r\n                    </tr>\r\n\r\n\r\n                    <tr>\r\n                        <td :colspan=\"3\" class=\"width height\">合计:</td>\r\n                        <td v-for=\"item in debitAmountTotal\" class=\"width height\" style=\"text-align: center;\">{{ item }}</td>\r\n                        <td v-for=\"item in creditAmountTotal\" class=\"width height\" style=\"text-align: center;\">{{ item }}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Message } from 'element-ui';\r\nexport default {\r\n    data() {\r\n        return {\r\n            voucher: {\r\n                date: '',\r\n                voucherWord: '',\r\n                no: '',\r\n                bill: '',\r\n\r\n            },\r\n            tableData: [\r\n                {\r\n                    // 摘要\r\n                    summary: '',\r\n                    // 会计科目\r\n                    accountingSubject: '',\r\n                    // 借方\r\n                    debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                    // 贷方\r\n                    creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                },\r\n                {\r\n                    // 摘要\r\n                    summary: '',\r\n                    // 会计科目\r\n                    accountingSubject: '',\r\n                    // 借方\r\n                    debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                    // 贷方\r\n                    creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                }\r\n            ],\r\n            debitAmountTotal: ['', '', '', '', '', '', '', '', '', '', ''],\r\n            creditAmountTotal: ['', '', '', '', '', '', '', '', '', '', '']\r\n        }\r\n    },\r\n    methods: {\r\n        add() {\r\n            this.tableData.push({\r\n                // 摘要\r\n                summary: '',\r\n                // 会计科目\r\n                accountingSubject: '',\r\n                // 借方\r\n                debitAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n                // 贷方\r\n                creditAmount: ['', '', '', '', '', '', '', '', '', '', ''],\r\n            })\r\n        },\r\n        reduce(index) {\r\n            if (this.tableData.length <= 2) {\r\n                Message.warning('不能再删除了！')\r\n                return\r\n            }\r\n            this.tableData.splice(index, 1)\r\n        },\r\n        arrToMoney(arr) {\r\n            console.log(arr)\r\n            const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\r\n\r\n            // 计算金额\r\n            let totalAmount = 0;\r\n\r\n            arr.forEach((amount, index) => {\r\n                // 将金额字符串转换为数字，忽略非数字的项\r\n                const numericAmount = parseInt(amount || 0);\r\n\r\n                // 如果是有效的数字，则累加到总金额\r\n                if (!isNaN(numericAmount)) {\r\n                    totalAmount += numericAmount * weights[index];\r\n                }\r\n            });\r\n            return totalAmount\r\n        },\r\n        moneyToArr(totalAmount) {\r\n            // 数字位权值\r\n            const weights = [100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1, 0.1, 0.01];\r\n\r\n            // 转换为对应的金额数组\r\n            const debitAmount = weights.map(weight => {\r\n                const amount = Math.floor(totalAmount / weight);\r\n                totalAmount -= amount * weight;\r\n                return amount;\r\n            });\r\n\r\n            // 反转数组并将数字转换为字符串，不足的地方用空字符串填充\r\n            const reversedDebitAmount = debitAmount.reverse().map(amount => (amount !== undefined ? String(amount) : ''));\r\n            const filledDebitAmount = reversedDebitAmount.slice().reverse();\r\n            return filledDebitAmount\r\n        }\r\n    },\r\n    watch: {\r\n        tableData: {\r\n            handler() {\r\n                const total = this.tableData.map(item => this.arrToMoney(item.debitAmount)).reduce((prev, cur) => prev = prev + cur, 0)\r\n                this.debitAmountTotal = this.moneyToArr(total)\r\n\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    created() {\r\n        console.log(this.moneyToArr(132320))\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.charge-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.charge-header>div {\r\n    display: inline-block;\r\n    margin-right: 15px;\r\n}\r\n\r\n.my-table {\r\n    border: 1px solid #fff;\r\n\r\n    td {\r\n        border: 1px solid rgb(220, 223, 230);\r\n        padding: 5px;\r\n        text-align: center;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 200px;\r\n        text-align: center;\r\n\r\n        &.short {\r\n            width: 20px;\r\n            height: 47px;\r\n        }\r\n    }\r\n\r\n    .width {\r\n        width: 15px;\r\n        text-align: center;\r\n        \r\n    }\r\n\r\n    .height {\r\n        height: 35px;\r\n    }\r\n\r\n}\r\n</style>"],"mappings":";AAiKA,SAAAA,OAAA;AACA;EACAC,KAAA;IACA;MACAC,OAAA;QACAC,IAAA;QACAC,WAAA;QACAC,EAAA;QACAC,IAAA;MAEA;MACAC,SAAA,GACA;QACA;QACAC,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA,GACA;QACA;QACAH,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA,EACA;MACAC,gBAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA;MACA,KAAAR,SAAA,CAAAS,IAAA;QACA;QACAR,OAAA;QACA;QACAC,iBAAA;QACA;QACAC,WAAA;QACA;QACAC,YAAA;MACA;IACA;IACAM,OAAAC,KAAA;MACA,SAAAX,SAAA,CAAAY,MAAA;QACAnB,OAAA,CAAAoB,OAAA;QACA;MACA;MACA,KAAAb,SAAA,CAAAc,MAAA,CAAAH,KAAA;IACA;IACAI,WAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,MAAAG,OAAA;;MAEA;MACA,IAAAC,WAAA;MAEAJ,GAAA,CAAAK,OAAA,EAAAC,MAAA,EAAAX,KAAA;QACA;QACA,MAAAY,aAAA,GAAAC,QAAA,CAAAF,MAAA;;QAEA;QACA,KAAAG,KAAA,CAAAF,aAAA;UACAH,WAAA,IAAAG,aAAA,GAAAJ,OAAA,CAAAR,KAAA;QACA;MACA;MACA,OAAAS,WAAA;IACA;IACAM,WAAAN,WAAA;MACA;MACA,MAAAD,OAAA;;MAEA;MACA,MAAAhB,WAAA,GAAAgB,OAAA,CAAAQ,GAAA,CAAAC,MAAA;QACA,MAAAN,MAAA,GAAAO,IAAA,CAAAC,KAAA,CAAAV,WAAA,GAAAQ,MAAA;QACAR,WAAA,IAAAE,MAAA,GAAAM,MAAA;QACA,OAAAN,MAAA;MACA;;MAEA;MACA,MAAAS,mBAAA,GAAA5B,WAAA,CAAA6B,OAAA,GAAAL,GAAA,CAAAL,MAAA,IAAAA,MAAA,KAAAW,SAAA,GAAAC,MAAA,CAAAZ,MAAA;MACA,MAAAa,iBAAA,GAAAJ,mBAAA,CAAAK,KAAA,GAAAJ,OAAA;MACA,OAAAG,iBAAA;IACA;EACA;EACAE,KAAA;IACArC,SAAA;MACAsC,QAAA;QACA,MAAAC,KAAA,QAAAvC,SAAA,CAAA2B,GAAA,CAAAa,IAAA,SAAAzB,UAAA,CAAAyB,IAAA,CAAArC,WAAA,GAAAO,MAAA,EAAA+B,IAAA,EAAAC,GAAA,KAAAD,IAAA,GAAAA,IAAA,GAAAC,GAAA;QACA,KAAArC,gBAAA,QAAAqB,UAAA,CAAAa,KAAA;MAEA;MACAI,IAAA;IACA;EACA;EACAC,QAAA;IACA3B,OAAA,CAAAC,GAAA,MAAAQ,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}