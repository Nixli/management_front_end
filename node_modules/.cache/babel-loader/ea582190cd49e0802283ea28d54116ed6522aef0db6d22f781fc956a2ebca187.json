{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      list: [],\n      dishIDList: '',\n      // 分页相关\n      total: 0,\n      // 搜索条件\n      params: {\n        dishID: undefined,\n        times: undefined,\n        pageno: 1,\n        pagesize: 5\n      },\n      //时间\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  created() {\n    this.getDishIDList();\n    this.getList();\n  },\n  methods: {\n    // open(msg) {\n    //     this.$message({\n    //       message: msg,\n    //       type: 'success'\n    //     });\n    //   },\n    async getDishIDList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dishSales/findAlldishID\",\n        params: {\n          ...this.params\n        }\n      });\n      console.log(res.data.data);\n      this.dishIDList = res.data.data;\n    },\n    async getList() {\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/dish/findAll\",\n        data: this.params\n      });\n      console.log(res);\n      this.list = res.data.data;\n      this.total = res.data.count;\n    },\n    // 点击搜索\n    search() {\n      console.log(this.params);\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.params.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 等待两秒后跳转页面\n      open('即将进入下单界面');\n      setTimeout(() => {\n        // 跳转页面\n        this.$router.push('/order/Order');\n      }, 1000);\n    },\n    //修改弹窗\n    edit(row) {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      console.log(row);\n      // 数据回显\n      this.userFormData.roleName = row.roleName;\n      this.userFormData.roleDes = row.roleDes;\n      // 记录id\n      this.roleID = row.roleID;\n      // 记录动作\n      this.actionType = 'edit';\n    },\n    //新增或修改固定资产\n    async submit() {\n      // 拷贝userFormData到data\n      const data = {\n        ...this.userFormData\n      };\n      // 修改的时候需要把id带过去\n      if (this.actionType === 'edit') {\n        data.roleID = this.roleID;\n      }\n      const res = await axios({\n        url: 'http://localhost:8080/role/update',\n        method: 'post',\n        data: data\n      });\n      this.dialogFormVisible = false;\n      this.getList();\n    },\n    //删除固定资产\n    async removeFixedasset(id) {\n      const res = await axios({\n        url: '/removeEmployee',\n        method: 'post',\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\n        data: {\n          employeeID: id\n        }\n      });\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["data","list","dishIDList","total","params","dishID","undefined","times","pageno","pagesize","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","created","getDishIDList","getList","methods","res","axios","method","url","console","log","count","search","pagechange","addOpen","open","setTimeout","$router","push","edit","row","dialogFormVisible","userFormData","roleName","roleDes","roleID","actionType","submit","removeFixedasset","id","employeeID"],"sources":["src/views/dishSales/dishSales.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: auto; width: auto;\">\r\n      <el-card>\r\n        <div style=\"display: flex; flex-direction: row;\">\r\n            <!-- 搜索区域 -->\r\n            <el-form :inline=\"true\">\r\n                <!-- 菜系下拉列表框 -->\r\n                <el-form-item label=\"菜系\">\r\n                    <el-select v-model=\"params.dishID\" class=\"filter-item\" placeholder=\"请选择菜系\">\r\n                        <el-option v-for=\"(dishesID, index) in this.dishIDList\" :label=\"dishIDList\" :value=\"dishIDList\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <!-- 时间 -->\r\n                <el-date-picker style=\"margin-top: 1px;\" v-model=\"params.times\" type=\"datetimerange\" :picker-options=\"pickerOptions\"\r\n                    range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\">\r\n                </el-date-picker>\r\n\r\n                <!-- 搜索按钮 -->\r\n                <el-form-item>\r\n                    <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n    return {\r\n      list: [],\r\n      dishIDList:'',\r\n      // 分页相关\r\n      total: 0,\r\n      // 搜索条件\r\n      params: {\r\n        dishID: undefined,\r\n        times: undefined,\r\n        pageno: 1,\r\n        pagesize: 5,\r\n      },\r\n      //时间\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近三个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getDishIDList(); \r\n    this.getList()\r\n  },\r\n\r\n  methods: {\r\n    // open(msg) {\r\n    //     this.$message({\r\n    //       message: msg,\r\n    //       type: 'success'\r\n    //     });\r\n    //   },\r\n    async getDishIDList() {\r\n      const res = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/dishSales/findAlldishID\",\r\n        params: {\r\n            ...this.params\r\n        }\r\n      });\r\n      console.log(res.data.data)\r\n      this.dishIDList = res.data.data;\r\n    },\r\n    async getList() {\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/dish/findAll\",\r\n        data: this.params\r\n      });\r\n      console.log(res)\r\n      this.list = res.data.data;\r\n      this.total= res.data.count;\r\n    },\r\n\r\n    // 点击搜索\r\n    search() {\r\n      console.log(this.params)\r\n      this.getList()\r\n    },\r\n\r\n    // 页码改变\r\n    pagechange(pageno) {\r\n      // 条件改变\r\n      this.params.pageno = pageno\r\n      // 重新请求数据\r\n      this.getList()\r\n    },\r\n\r\n    // 打开新增弹窗，\r\n    addOpen() {\r\n      // 等待两秒后跳转页面\r\n            open('即将进入下单界面')\r\n            setTimeout(() => {\r\n                // 跳转页面\r\n                this.$router.push('/order/Order');\r\n            }, 1000);\r\n    },\r\n\r\n    //修改弹窗\r\n    edit(row) {\r\n      // 打开弹窗\r\n      this.dialogFormVisible = true\r\n      console.log(row)\r\n      // 数据回显\r\n      this.userFormData.roleName = row.roleName\r\n      this.userFormData.roleDes = row.roleDes\r\n      // 记录id\r\n      this.roleID = row.roleID\r\n      // 记录动作\r\n      this.actionType = 'edit'\r\n    },\r\n\r\n    //新增或修改固定资产\r\n    async submit() {\r\n      // 拷贝userFormData到data\r\n      const data = { ...this.userFormData }\r\n      // 修改的时候需要把id带过去\r\n      if (this.actionType === 'edit') {\r\n        data.roleID = this.roleID\r\n      }\r\n      const res = await axios({\r\n        url: 'http://localhost:8080/role/update',\r\n        method: 'post',\r\n        data: data\r\n      })\r\n      this.dialogFormVisible = false\r\n      this.getList()\r\n    },\r\n    //删除固定资产\r\n    async removeFixedasset(id) {\r\n\r\n      const res = await axios({\r\n        url: '/removeEmployee',\r\n        method: 'post',\r\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\r\n        data: {\r\n          employeeID: id\r\n        }\r\n      })\r\n      this.getList()\r\n    },\r\n\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  margin-bottom: 8px;\r\n  justify-content: center;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}