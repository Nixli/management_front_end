{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      list: [],\n      // 分页相关\n      pageno: 1,\n      pagesize: 5,\n      total: 0,\n      // 搜索条件\n      params: {\n        dishesName: '',\n        storeId: ''\n      },\n      //图片地址\n      imgUrl: \"http://localhost:8080/dishes/uploadDishImg?dishesID=\",\n      // 标志位，用于控制是否需要更新数据\n      needUpdate: false,\n      // 控制弹框的显示与隐藏\n      dialogFormVisible: false,\n      // 表单的数据\n      newDishData: {\n        dishesID: '',\n        dishesName: '',\n        dishType: '',\n        dishesPrice: '',\n        dishesDes: '',\n        storeid: ''\n      },\n      // add： 新增   edit: '更新'\n      actionType: ''\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dishes/findAllDishesByPage\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize\n        }\n      });\n      console.log(res.data.data);\n      this.list = res.data.data;\n      this.total = res.data.count;\n    },\n    // 点击搜索\n    async search() {\n      console.log(this.params);\n      const re = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dishes/findAllDishesByDishesNameAndStoreid\",\n        params: {\n          dishType: this.params.dishesName,\n          storeId: this.params.storeId\n        }\n      });\n      console.log(re);\n      this.list = re.data.data;\n      this.total = re.data.count;\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 200;\n      if (!isJPG) {\n        this.$message.error('上传图片只能是 JPG/PNG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传图片大小不能超过 200MB!');\n      }\n      return isJPG && isLt2M;\n    },\n    handleAvatarSuccess() {\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      this.actionType = 'add';\n      // 重置userFormData\n      this.newDishData = {\n        dishesID: '',\n        dishesName: '',\n        dishType: '',\n        dishesPrice: '',\n        dishesDes: '',\n        storeid: ''\n      };\n    },\n    //修改弹窗\n    edit(row) {\n      console.log(row);\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录动作\n      this.actionType = 'edit';\n      // 数据回显\n      this.newDishData.dishesID = row.dishesID;\n      this.newDishData.dishesName = row.dishesName;\n      this.newDishData.dishType = row.dishType;\n      this.newDishData.dishesPrice = row.dishesPrice;\n      this.newDishData.dishesDes = row.dishesDes;\n      this.newDishData.storeid = row.storeid;\n    },\n    //新增或修改菜品大类\n    async submit() {\n      this.dialogFormVisible = false;\n      if (this.actionType == 'edit') {\n        console.log(this.newDishData);\n        const res = await axios({\n          url: \"http://localhost:8080/dishes/updateDishes\",\n          method: 'post',\n          data: this.newDishData\n        }).then(result => {\n          console.log(result);\n          if (result.data.code == 200) {\n            alert(result.data.msg);\n            this.getList();\n          } else {\n            alert(result.data.msg);\n          }\n        });\n      }\n      if (this.actionType == 'add') {\n        console.log(this.newDishData);\n        const res = await axios({\n          url: \"http://localhost:8080/dishes/insertDishes\",\n          method: 'post',\n          data: this.newDishData\n        }).then(result => {\n          console.log(result.data);\n          if (result.data.code == 200) {\n            alert(result.data.msg);\n            this.getList();\n          } else {\n            alert(result.data.msg);\n          }\n        });\n      }\n    },\n    //删除菜品大类\n    async removeEmployee(row) {\n      console.log(row.dishesID);\n      const res = await axios({\n        url: 'http://localhost:8080/dishes/deleteDishes',\n        method: 'post',\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\n        data: {\n          dishesID: row.dishesID\n        }\n      }).then(result => {\n        alert(result.data.msg);\n      });\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","list","pageno","pagesize","total","params","dishesName","storeId","imgUrl","needUpdate","dialogFormVisible","newDishData","dishesID","dishType","dishesPrice","dishesDes","storeid","actionType","created","getList","methods","res","method","url","console","log","count","search","re","beforeAvatarUpload","file","isJPG","type","isLt2M","size","$message","error","handleAvatarSuccess","pagechange","addOpen","edit","row","submit","then","result","code","alert","msg","removeEmployee"],"sources":["src/views/dishes/Dishes.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: auto; width: auto;\">\r\n\r\n    <!-- 搜素和新增区域 -->\r\n    <el-card>\r\n      <div style=\"display: flex; flex-direction: row;\">\r\n        <!-- 搜索区域 -->\r\n        <el-form :inline=\"true\">\r\n          <el-form-item label=\"菜品名称\">\r\n            <el-input v-model=\"params.dishesName\" placeholder=\"请输入菜品名称\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"门店id\">\r\n            <el-input v-model=\"params.storeId\" placeholder=\"请输入门店id\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n          </el-form-item>\r\n          <el-button type=\"primary\" @click=\"addOpen\">新增菜品信息</el-button>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 员工信息表 -->\r\n    <el-card style=\"margin-top: 20px;\">\r\n\r\n      <el-card>\r\n        <span style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">菜品大类信息表</span>\r\n      </el-card>\r\n\r\n      <el-table :data=\"list\" border style=\"width: 100%\">\r\n        <el-table-column prop=\"dishesID\" label=\"菜品id\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"dishesName\" label=\"菜品名称\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"dishType\" label=\"菜品大类名称\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"dishesPrice\" label=\"菜品价格\" align=\"center\"> </el-table-column>\r\n        <el-table-column prop=\"dishesDes\" label=\"菜品名称\" align=\"center\"> </el-table-column>\r\n        <el-table-column label=\"菜品图片\" align=\"center\"> \r\n          <template slot-scope=\"{ row }\">\r\n            <div>\r\n              <!-- 始终显示上传按钮 -->\r\n              <el-upload :action=\"imgUrl + row.dishesID\" :show-file-list=\"true\"\r\n                        :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\"\r\n                        style=\"width: 100%; height: 100%;\">\r\n                <el-button v-if=\"!row.dishImg\" class=\"avatar-uploader-trigger\" type=\"primary\">上传图片</el-button>\r\n                <!-- 如果存在图片，则显示图片 -->\r\n                <el-image v-if=\"row.dishImg\" :src=\"row.dishImg\"></el-image>\r\n              </el-upload>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"storeid\" label=\"门店id\" align=\"center\"> </el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"150\" align=\"center\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"text\" size=\"small\" @click=\"removeEmployee(row)\">删除</el-button>\r\n\r\n            <!-- 修改删除按钮操作，以及后续操作 -->\r\n\r\n            <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n        :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 弹窗区域 -->\r\n    <el-dialog :title=\"actionType == 'add' ? '新增菜品信息' : '修改菜品信息'\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form :model=\"newDishData\" class=\"demo-ruleForm\" label-width=\"80px\">\r\n\r\n        <el-form-item label=\"菜品名称\" :rules=\"[{ required: true, message: '菜品名称不能为空', trigger: 'blur' }]\">\r\n          <el-input v-model=\"newDishData.dishesName\" placeholder=\"菜品名称\" ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"菜品类别\" :rules=\"[{ required: true, message: '菜品类别不能为空', trigger: 'blur' }]\">\r\n          <el-input v-model=\"newDishData.dishType\" placeholder=\"菜品类别\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜品价格\" :rules=\"[{ required: true, message: '价格不能为空', trigger: 'blur' }]\">\r\n          <el-input v-model=\"newDishData.dishesPrice\" placeholder=\"菜品价格\" ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"菜品描述\" >\r\n          <el-input v-model=\"newDishData.dishesDes\" placeholder=\"菜品描述\" ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"门店编号\" :rules=\"[{ required: true, message: '门店编号不能为空', trigger: 'blur' }]\">\r\n          <el-input v-model=\"newDishData.storeid\" placeholder=\"门店编号\" ></el-input>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submit()\">确 定</el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      list: [],\r\n      // 分页相关\r\n      pageno: 1,\r\n      pagesize: 5,\r\n      total: 0,\r\n      // 搜索条件\r\n      params: {\r\n        dishesName: '',\r\n        storeId: '',\r\n      },\r\n      //图片地址\r\n      imgUrl:\"http://localhost:8080/dishes/uploadDishImg?dishesID=\"\r\n      ,\r\n      // 标志位，用于控制是否需要更新数据\r\n      needUpdate: false,\r\n      // 控制弹框的显示与隐藏\r\n      dialogFormVisible: false,\r\n      // 表单的数据\r\n      newDishData: {\r\n        dishesID:'',\r\n        dishesName:'',\r\n        dishType:'',\r\n        dishesPrice:'',\r\n        dishesDes:'',\r\n        storeid:''\r\n      },\r\n      // add： 新增   edit: '更新'\r\n      actionType: ''\r\n    };\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      const res = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/dishes/findAllDishesByPage\",\r\n        params: {\r\n          pageno: this.pageno,\r\n          pagesize: this.pagesize\r\n        },\r\n      });\r\n      console.log(res.data.data);\r\n      this.list = res.data.data;\r\n      this.total = res.data.count;\r\n    },\r\n    // 点击搜索\r\n    async search() {\r\n      console.log(this.params)\r\n      const re = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/dishes/findAllDishesByDishesNameAndStoreid\",\r\n        params: {\r\n          dishType: this.params.dishesName,\r\n          storeId: this.params.storeId\r\n        }\r\n      });\r\n      console.log(re)\r\n      this.list = re.data.data;\r\n      this.total = re.data.count;\r\n    },\r\n    beforeAvatarUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\r\n            const isLt2M = file.size / 1024 / 1024 < 200;\r\n\r\n            if (!isJPG) {\r\n                this.$message.error('上传图片只能是 JPG/PNG 格式!');\r\n            }\r\n            if (!isLt2M) {\r\n                this.$message.error('上传图片大小不能超过 200MB!');\r\n            }\r\n            return isJPG && isLt2M;\r\n    },\r\n    handleAvatarSuccess(){\r\n      this.getList();\r\n    },\r\n    // 页码改变\r\n    pagechange(pageno) {\r\n      // 条件改变\r\n      this.pageno = pageno\r\n      // 重新请求数据\r\n      this.getList()\r\n    },\r\n\r\n    // 打开新增弹窗，\r\n    addOpen() {\r\n      // 打开弹窗\r\n      this.dialogFormVisible = true\r\n      // 记录状态\r\n      this.actionType = 'add'\r\n      // 重置userFormData\r\n      this.newDishData={\r\n        dishesID:'',\r\n        dishesName:'',\r\n        dishType:'',\r\n        dishesPrice:'',\r\n        dishesDes:'',\r\n        storeid:''\r\n      };\r\n    },\r\n\r\n    //修改弹窗\r\n    edit(row) {\r\n      console.log(row)\r\n      // 打开弹窗\r\n      this.dialogFormVisible = true\r\n      // 记录动作\r\n      this.actionType = 'edit'\r\n      // 数据回显\r\n      this.newDishData.dishesID = row.dishesID;\r\n      this.newDishData.dishesName = row.dishesName;\r\n      this.newDishData.dishType = row.dishType;\r\n      this.newDishData.dishesPrice = row.dishesPrice;\r\n      this.newDishData.dishesDes = row.dishesDes;\r\n      this.newDishData.storeid = row.storeid;\r\n    },\r\n\r\n    //新增或修改菜品大类\r\n    async submit() {\r\n      this.dialogFormVisible = false;\r\n      if(this.actionType == 'edit'){\r\n        console.log(this.newDishData);\r\n        const res = await axios({\r\n                url: \"http://localhost:8080/dishes/updateDishes\",\r\n                method: 'post',\r\n                data: this.newDishData\r\n            }).then(result => {\r\n          console.log(result);\r\n          if (result.data.code == 200) {\r\n            alert(result.data.msg);\r\n            \r\n            this.getList();\r\n          } else {\r\n            alert(result.data.msg);\r\n          }\r\n        });\r\n      }\r\n      if(this.actionType == 'add'){\r\n        console.log(this.newDishData);\r\n        const res = await axios({\r\n                url: \"http://localhost:8080/dishes/insertDishes\",\r\n                method: 'post',\r\n                data: this.newDishData\r\n            }).then(result => {\r\n          console.log(result.data);\r\n          if (result.data.code == 200) {\r\n            alert(result.data.msg);\r\n            this.getList();\r\n          } else {\r\n            alert(result.data.msg);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    //删除菜品大类\r\n    async removeEmployee(row) {\r\n        console.log(row.dishesID);\r\n      const res = await axios({\r\n        url: 'http://localhost:8080/dishes/deleteDishes',\r\n        method: 'post',\r\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\r\n        data: {\r\n          dishesID: row.dishesID\r\n        }\r\n      }).then(result => {\r\n        alert(result.data.msg);\r\n      })\r\n      this.getList()\r\n    },\r\n\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  margin-bottom: 8px;\r\n  justify-content: center;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}