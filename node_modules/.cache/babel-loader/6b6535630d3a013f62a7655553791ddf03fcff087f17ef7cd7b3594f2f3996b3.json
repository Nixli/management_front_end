{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      storeId: \"\",\n      accountBooksList: [],\n      dialogFormVisible: false,\n      isTrueOrFalse: false,\n      userFormData: {\n        bookId: '',\n        bookName: '',\n        contactPerson: '',\n        contactPhoneNumber: '',\n        varType: '',\n        createTime: '',\n        state: ''\n      },\n      role: '',\n      show: false\n    };\n  },\n  created() {\n    this.getList();\n    this.role = localStorage.getItem('role');\n    this.storeId = localStorage.getItem('storeId');\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/accountBook/findByStoreId\",\n        params: {\n          storeId: localStorage.getItem('storeId')\n        }\n      });\n      // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\n      this.accountBooksList = res.data.data.map(item => {\n        item.createTime = dayjs(item.createTime).format('YYYY-MM-DD HH:mm:ss');\n        if (item.endTime) {\n          item.endTime = dayjs(item.endTime).format('YYYY-MM-DD HH:mm:ss');\n        } else {\n          item.endTime = ''; // 如果 endTime 为空，则赋空值\n        }\n        return item;\n      });\n    },\n    viewAccountDetails(bookID, bookName) {\n      // 存储具体某个账套的bookID到localStorage\n      localStorage.setItem(\"bookID\", bookID);\n      localStorage.setItem(\"bookName\", bookName);\n      // 这里可以跳转到具体账套的详细信息页面或执行其他操作\n      // 示例：跳转到名为'/accountDetails'的路由\n      this.$router.push('/home');\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      // 重置userFormData\n      this.userFormData = {\n        bookId: '',\n        bookName: '',\n        contactPerson: '',\n        contactPhoneNumber: '',\n        varType: ''\n      };\n    },\n    updateOpen(item) {\n      this.show = true;\n      this.userFormData = {\n        ...item\n      };\n    },\n    async update() {\n      const {\n        store,\n        ...formDataWithoutStore\n      } = this.userFormData;\n      const data = {\n        ...formDataWithoutStore,\n        endTime: new Date(),\n        storeId: localStorage.getItem('storeId')\n      };\n      if (this.userFormData.state === '禁用') {\n        data.endTime = new Date();\n        data.state = '禁用';\n      } else {\n        data.endTime = null;\n        data.state = '启用';\n      }\n      const res = await axios({\n        url: \"http://localhost:8080/accountBook/updateAccountBook\",\n        method: 'post',\n        data: data\n      });\n      this.show = false;\n      this.getList();\n    },\n    async submit() {\n      // 拷贝userFormData到data\n      const data = {\n        ...this.userFormData,\n        // 添加其他字段\n        createTime: new Date(),\n        endTime: null,\n        storeId: localStorage.getItem('storeId'),\n        state: '启用'\n      };\n      const res = await axios({\n        url: \"http://localhost:8080/accountBook/addAccountBook\",\n        method: 'post',\n        data: data\n      });\n      this.dialogFormVisible = false;\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["dayjs","axios","data","storeId","accountBooksList","dialogFormVisible","isTrueOrFalse","userFormData","bookId","bookName","contactPerson","contactPhoneNumber","varType","createTime","state","role","show","created","getList","localStorage","getItem","methods","res","method","url","params","map","item","format","endTime","viewAccountDetails","bookID","setItem","$router","push","addOpen","updateOpen","update","store","formDataWithoutStore","Date","submit"],"sources":["src/views/accountBooks/FinanceAccountBooks.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <!-- title -->\r\n        <el-card style=\"text-align:center\">\r\n            <span style=\"font-size: 24px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">账套管理</span>\r\n        </el-card>\r\n        <!-- 操作按钮 -->\r\n        <el-card style=\"margin-top: 20px\">\r\n            <span style=\"font-size: 16px; font-weight: bold; font-family: 'Times New Roman', Times, serif;\">账套管理</span>\r\n            <!-- 使用 v-if 判断 role 的内容，如果是老板则不显示新增按钮 -->\r\n            <el-button style=\"margin-left: 20px\" @click=\"addOpen\">新增账套</el-button>\r\n        </el-card>\r\n        <!-- 账套区域 -->\r\n        <el-row>\r\n            <el-col v-for=\"item in accountBooksList\" :span=\"8\">\r\n                <el-card>\r\n                    <div slot=\"header\" class=\"clearfix\">\r\n                        <span>{{ item.bookName }}</span>\r\n                        <el-button style=\"margin-left: 20px\" v-if=\"item.state === '启用'\" type=\"text\"\r\n                            @click=\"updateOpen(item)\">\r\n                            修改账套\r\n                        </el-button>\r\n                        <el-button style=\"margin-left: 20px\" type=\"text\"\r\n                            @click=\"viewAccountDetails(item.bookId, item.bookName)\">\r\n                            进入账套\r\n                        </el-button>\r\n                    </div>\r\n                    <p style=\"margin-top:10px\">账套名称：{{ item.bookName }}</p>\r\n                    <p style=\"margin-top:20px\">公司名称：{{ item.store.storeName }}</p>\r\n                    <p style=\"margin-top:20px\">纳税类型：{{ item.varType }}</p>\r\n                    <p style=\"margin-top:20px\">启用时间：{{ item.createTime }}</p>\r\n                    <p style=\"margin-top:20px\">禁用时间：{{ item.endTime }}</p>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 新增弹窗区域 -->\r\n        <el-dialog title=\"新增账套具体信息\" :visible.sync=\"dialogFormVisible\">\r\n            <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n                <el-form-item label=\"账套名称\">\r\n                    <el-input v-model=\"userFormData.bookName\" placeholder=\"账套名称\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"联系人\">\r\n                    <el-input v-model=\"userFormData.contactPerson\" placeholder=\"联系人\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"联系人电话\">\r\n                    <el-input v-model=\"userFormData.contactPhoneNumber\" placeholder=\"联系人电话\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"纳税类型\">\r\n                    <el-select v-model=\"userFormData.varType\" placeholder=\"请选择纳税类型\">\r\n                        <el-option label=\"一般纳税人\" value=\"一般纳税人\"></el-option>\r\n                        <el-option label=\"小规模纳税人\" value=\"小规模纳税人\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button @click=\"submit\">提交</el-button>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n        <!-- 修改弹窗区域 -->\r\n        <el-dialog title=\"修改账套信息\" :visible.sync=\"show\">\r\n            <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n\r\n                <el-form-item label=\"账套名称\">\r\n                    <el-input v-model=\"userFormData.bookName\" placeholder=\"账套名称\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"联系人\">\r\n                    <el-input v-model=\"userFormData.contactPerson\" placeholder=\"单位名称\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"联系人电话\">\r\n                    <el-input v-model=\"userFormData.contactPhoneNumber\" placeholder=\"经营地址\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"纳税类型\">\r\n                    <el-select v-model=\"userFormData.varType\" placeholder=\"请选择纳税类型\">\r\n                        <el-option label=\"一般纳税人\" value=\"一般纳税人\"></el-option>\r\n                        <el-option label=\"小规模纳税人\" value=\"小规模纳税人\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"是否禁用\">\r\n                    <el-select v-model=\"userFormData.state\" placeholder=\"\">\r\n                        <el-option label=\"禁用\" value=\"禁用\"></el-option>\r\n                        <el-option label=\"启用\" value=\"启用\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n                <el-form-item>\r\n                    <el-button @click=\"update\">提交</el-button>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\n\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            storeId: \"\",\r\n            accountBooksList: [],\r\n            dialogFormVisible: false,\r\n            isTrueOrFalse: false,\r\n            userFormData: {\r\n                bookId: '',\r\n                bookName: '',\r\n                contactPerson: '',\r\n                contactPhoneNumber: '',\r\n                varType: '',\r\n                createTime: '',\r\n                state: ''\r\n            },\r\n            role: '',\r\n            show: false\r\n        };\r\n    },\r\n    created() {\r\n        this.getList();\r\n        this.role = localStorage.getItem('role');\r\n        this.storeId = localStorage.getItem('storeId');\r\n    },\r\n    methods: {\r\n        async getList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8080/accountBook/findByStoreId\",\r\n                params: {\r\n                    storeId: localStorage.getItem('storeId')\r\n                }\r\n            });\r\n            // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\r\n            this.accountBooksList = res.data.data.map(item => {\r\n                item.createTime = dayjs(item.createTime).format('YYYY-MM-DD HH:mm:ss');\r\n                if (item.endTime) {\r\n                    item.endTime = dayjs(item.endTime).format('YYYY-MM-DD HH:mm:ss');\r\n                } else {\r\n                    item.endTime = ''; // 如果 endTime 为空，则赋空值\r\n                }\r\n                return item;\r\n            });\r\n        },\r\n\r\n        viewAccountDetails(bookID, bookName) {\r\n            // 存储具体某个账套的bookID到localStorage\r\n            localStorage.setItem(\"bookID\", bookID);\r\n            localStorage.setItem(\"bookName\", bookName);\r\n            // 这里可以跳转到具体账套的详细信息页面或执行其他操作\r\n            // 示例：跳转到名为'/accountDetails'的路由\r\n            this.$router.push('/home');\r\n        },\r\n\r\n        // 打开新增弹窗，\r\n        addOpen() {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true\r\n            // 记录状态\r\n            // 重置userFormData\r\n            this.userFormData = {\r\n                bookId: '',\r\n                bookName: '',\r\n                contactPerson: '',\r\n                contactPhoneNumber: '',\r\n                varType: '',\r\n            }\r\n        },\r\n        updateOpen(item) {\r\n            this.show = true\r\n            this.userFormData = { ...item }\r\n        },\r\n\r\n        async update() {\r\n\r\n            const { store, ...formDataWithoutStore } = this.userFormData;\r\n            const data = {\r\n                ...formDataWithoutStore,\r\n                endTime: new Date(),\r\n                storeId: localStorage.getItem('storeId')\r\n            };\r\n            if(this.userFormData.state === '禁用'){\r\n                data.endTime = new Date()\r\n                data.state = '禁用'\r\n            }else{\r\n                data.endTime = null\r\n                data.state = '启用'\r\n            }\r\n            const res = await axios({\r\n                url: \"http://localhost:8080/accountBook/updateAccountBook\",\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            this.show = false\r\n            this.getList()\r\n        },\r\n\r\n        async submit() {\r\n            // 拷贝userFormData到data\r\n            const data = {\r\n                ...this.userFormData,\r\n                // 添加其他字段\r\n                createTime: new Date(),\r\n                endTime: null,\r\n                storeId: localStorage.getItem('storeId'),\r\n                state: '启用'\r\n            }\r\n            const res = await axios({\r\n                url: \"http://localhost:8080/accountBook/addAccountBook\",\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            this.dialogFormVisible = false\r\n            this.getList()\r\n        },\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.text {\r\n    font-size: 14px;\r\n}\r\n\r\n.item {\r\n    margin-bottom: 18px;\r\n}\r\n\r\n.clearfix:before,\r\n.clearfix:after {\r\n    display: table;\r\n    content: \"\";\r\n}\r\n\r\n.clearfix:after {\r\n    clear: both\r\n}\r\n\r\n.box-card {\r\n    width: 480px;\r\n}\r\n</style>"],"mappings":";AAwGA,OAAAA,KAAA;AACA,OAAAC,KAAA;AACA;EAEAC,KAAA;IACA;MACAC,OAAA;MACAC,gBAAA;MACAC,iBAAA;MACAC,aAAA;MACAC,YAAA;QACAC,MAAA;QACAC,QAAA;QACAC,aAAA;QACAC,kBAAA;QACAC,OAAA;QACAC,UAAA;QACAC,KAAA;MACA;MACAC,IAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;IACA,KAAAH,IAAA,GAAAI,YAAA,CAAAC,OAAA;IACA,KAAAjB,OAAA,GAAAgB,YAAA,CAAAC,OAAA;EACA;EACAC,OAAA;IACA,MAAAH,QAAA;MACA,MAAAI,GAAA,SAAArB,KAAA;QACAsB,MAAA;QACAC,GAAA;QACAC,MAAA;UACAtB,OAAA,EAAAgB,YAAA,CAAAC,OAAA;QACA;MACA;MACA;MACA,KAAAhB,gBAAA,GAAAkB,GAAA,CAAApB,IAAA,CAAAA,IAAA,CAAAwB,GAAA,CAAAC,IAAA;QACAA,IAAA,CAAAd,UAAA,GAAAb,KAAA,CAAA2B,IAAA,CAAAd,UAAA,EAAAe,MAAA;QACA,IAAAD,IAAA,CAAAE,OAAA;UACAF,IAAA,CAAAE,OAAA,GAAA7B,KAAA,CAAA2B,IAAA,CAAAE,OAAA,EAAAD,MAAA;QACA;UACAD,IAAA,CAAAE,OAAA;QACA;QACA,OAAAF,IAAA;MACA;IACA;IAEAG,mBAAAC,MAAA,EAAAtB,QAAA;MACA;MACAU,YAAA,CAAAa,OAAA,WAAAD,MAAA;MACAZ,YAAA,CAAAa,OAAA,aAAAvB,QAAA;MACA;MACA;MACA,KAAAwB,OAAA,CAAAC,IAAA;IACA;IAEA;IACAC,QAAA;MACA;MACA,KAAA9B,iBAAA;MACA;MACA;MACA,KAAAE,YAAA;QACAC,MAAA;QACAC,QAAA;QACAC,aAAA;QACAC,kBAAA;QACAC,OAAA;MACA;IACA;IACAwB,WAAAT,IAAA;MACA,KAAAX,IAAA;MACA,KAAAT,YAAA;QAAA,GAAAoB;MAAA;IACA;IAEA,MAAAU,OAAA;MAEA;QAAAC,KAAA;QAAA,GAAAC;MAAA,SAAAhC,YAAA;MACA,MAAAL,IAAA;QACA,GAAAqC,oBAAA;QACAV,OAAA,MAAAW,IAAA;QACArC,OAAA,EAAAgB,YAAA,CAAAC,OAAA;MACA;MACA,SAAAb,YAAA,CAAAO,KAAA;QACAZ,IAAA,CAAA2B,OAAA,OAAAW,IAAA;QACAtC,IAAA,CAAAY,KAAA;MACA;QACAZ,IAAA,CAAA2B,OAAA;QACA3B,IAAA,CAAAY,KAAA;MACA;MACA,MAAAQ,GAAA,SAAArB,KAAA;QACAuB,GAAA;QACAD,MAAA;QACArB,IAAA,EAAAA;MACA;MACA,KAAAc,IAAA;MACA,KAAAE,OAAA;IACA;IAEA,MAAAuB,OAAA;MACA;MACA,MAAAvC,IAAA;QACA,QAAAK,YAAA;QACA;QACAM,UAAA,MAAA2B,IAAA;QACAX,OAAA;QACA1B,OAAA,EAAAgB,YAAA,CAAAC,OAAA;QACAN,KAAA;MACA;MACA,MAAAQ,GAAA,SAAArB,KAAA;QACAuB,GAAA;QACAD,MAAA;QACArB,IAAA,EAAAA;MACA;MACA,KAAAG,iBAAA;MACA,KAAAa,OAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}