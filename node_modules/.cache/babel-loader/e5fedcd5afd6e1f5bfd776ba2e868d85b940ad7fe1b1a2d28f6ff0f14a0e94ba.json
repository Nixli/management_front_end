{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { addRouteByRole } from '@/router';\nimport { Message } from 'element-ui';\nexport default {\n  data() {\n    return {\n      // true： 展示密码  眼睛（开）  false： 展示点点点  眼睛（关）\n      showPwd: false,\n      // 表单的数据\n      form: {\n        username: '',\n        password: '',\n        role: ''\n      },\n      // 表单的规则集: 键名： 你要对表单数据对象下的哪一个属性配置规则, 键名： 真正的规则：数组， 当你只有一个规则的时候，可以就是一个对象\n      rules: {\n        // 非空校验\n        username: {\n          required: true,\n          message: '请输入账号',\n          trigger: 'change'\n        },\n        password: {\n          required: true,\n          message: '请输入密码',\n          trigger: 'change'\n        }\n      }\n    };\n  },\n  methods: {\n    clickEyes() {\n      this.showPwd = !this.showPwd;\n    },\n    // 提交表单 async\n    async submit() {\n      const LoginResult = await axios({\n        method: \"post\",\n        url: \"/loginUser\",\n        data: this.form\n      });\n      // 登录成功，把用户的id和用户的角色存放到本地\n      if (LoginResult.data.code == 1) {\n        localStorage.setItem(\"userId\", LoginResult.data.data.employeeID);\n        localStorage.setItem(\"role\", LoginResult.data.data.role);\n\n        // 根据角色\n        if (this.form.role == '管理员') {\n          // 等待两秒后跳转页面\n          Message.success('即将进入账套界面');\n          setTimeout(() => {\n            // 跳转页面\n            this.$router.push('/accountBooks');\n          }, 2000);\n        } else {\n          localStorage.setItem('bookID', LoginResult.data.data.accountBook.bookID);\n          localStorage.setItem('bookID', LoginResult.data.data.accountBook.bookName);\n          Message.success('即将进入员工主界面');\n          setTimeout(() => {\n            // 跳转页面\n            this.$router.push('/home');\n          }, 2000);\n        }\n      } else {\n        Message.error('登录失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","addRouteByRole","Message","data","showPwd","form","username","password","role","rules","required","message","trigger","methods","clickEyes","submit","LoginResult","method","url","code","localStorage","setItem","employeeID","success","setTimeout","$router","push","accountBook","bookID","bookName","error"],"sources":["src/views/login/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-wrapper\">\n    <div class=\"login-form\">\n      <h2 class=\"login-title\">系统登录</h2>\n      <!-- 表单的容器 -->\n      <el-form ref=\"ruleform\" :model=\"form\" :rules=\"rules\">\n\n        <!-- 用户账号 -->\n        <el-form-item prop=\"account\">\n          <!-- 该表单项的内容 -->\n          <el-input suffix-icon=\"icon-yonghu iconfont\" prefix-icon=\"el-icon-search\" placeholder=\"请输入账号\"\n            v-model=\"form.username\"></el-input>\n        </el-form-item>\n\n        <!-- 用户密码 -->\n        <el-form-item prop=\"password\">\n          <el-input :type=\"showPwd ? 'text' : 'password'\" placeholder=\"请输入密码\" v-model=\"form.password\">\n            <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\n            <!-- 尾部插入图标: -->\n            <i slot=\"suffix\" @click=\"clickEyes\" class=\"iconfont\"\n              :class=\"{ 'icon-yanjing': showPwd, 'icon-biyanjing': !showPwd }\"></i>\n          </el-input>\n        </el-form-item>\n\n        <!-- 用户角色 -->\n        <el-fome-item>\n          <el-select style=\"width: 100%;\" v-model=\"form.role\">\n            <el-option label=\"管理员\" value=\"管理员\"></el-option>\n            <el-option label=\"员工\" value=\"员工\"></el-option>\n          </el-select>\n        </el-fome-item>\n\n        <!-- 登录按钮 -->\n        <el-form-item>\n          <el-button @click=\"submit\" style=\"width: 100%;margin-top: 10px;\" type=\"primary\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { addRouteByRole } from '@/router'\nimport { Message } from 'element-ui';\nexport default {\n  data() {\n    return {\n\n      // true： 展示密码  眼睛（开）  false： 展示点点点  眼睛（关）\n      showPwd: false,\n\n      // 表单的数据\n      form: {\n        username: '',\n        password: '',\n        role: '',\n      },\n\n      // 表单的规则集: 键名： 你要对表单数据对象下的哪一个属性配置规则, 键名： 真正的规则：数组， 当你只有一个规则的时候，可以就是一个对象\n      rules: {\n        // 非空校验\n        username: { required: true, message: '请输入账号', trigger: 'change' },\n        password: { required: true, message: '请输入密码', trigger: 'change' },\n      }\n\n    }\n  },\n\n  methods: {\n    clickEyes() {\n      this.showPwd = !this.showPwd\n    },\n    // 提交表单 async\n    async submit() {\n\n      const LoginResult = await axios({\n        method: \"post\",\n        url: \"/loginUser\",\n        data: this.form,\n      })\n      // 登录成功，把用户的id和用户的角色存放到本地\n      if (LoginResult.data.code == 1) {\n        \n        localStorage.setItem(\"userId\", LoginResult.data.data.employeeID);\n        localStorage.setItem(\"role\", LoginResult.data.data.role);\n        \n        // 根据角色\n        if(this.form.role == '管理员') {\n          // 等待两秒后跳转页面\n          Message.success('即将进入账套界面')\n          setTimeout(() => {\n            // 跳转页面\n            this.$router.push('/accountBooks');\n          }, 2000);\n        } else {\n          localStorage.setItem('bookID', LoginResult.data.data.accountBook.bookID)\n          localStorage.setItem('bookID', LoginResult.data.data.accountBook.bookName)\n          Message.success('即将进入员工主界面')\n          setTimeout(() => {\n            // 跳转页面\n            this.$router.push('/home');\n          }, 2000);\n        }\n      } else {\n        Message.error('登录失败')\n      }\n    }\n  }\n\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n.login-wrapper {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #2d3a4b;\n\n  .login-form {\n    width: 500px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .login-title {\n      margin: 20px;\n      font-weight: 700;\n      font-size: 22px;\n      color: #fff;\n    }\n\n    .el-form {\n      width: 100%;\n    }\n  }\n\n  ::v-deep .el-input__inner {\n    background-color: #2d3a4b;\n  }\n\n  ::v-deep .el-input input {\n    color: #fff;\n  }\n}\n</style>"],"mappings":";AA0CA,OAAAA,KAAA;AACA,SAAAC,cAAA;AACA,SAAAC,OAAA;AACA;EACAC,KAAA;IACA;MAEA;MACAC,OAAA;MAEA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;MACA;MAEA;MACAC,KAAA;QACA;QACAH,QAAA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAL,QAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IAEA;EACA;EAEAC,OAAA;IACAC,UAAA;MACA,KAAAV,OAAA,SAAAA,OAAA;IACA;IACA;IACA,MAAAW,OAAA;MAEA,MAAAC,WAAA,SAAAhB,KAAA;QACAiB,MAAA;QACAC,GAAA;QACAf,IAAA,OAAAE;MACA;MACA;MACA,IAAAW,WAAA,CAAAb,IAAA,CAAAgB,IAAA;QAEAC,YAAA,CAAAC,OAAA,WAAAL,WAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAmB,UAAA;QACAF,YAAA,CAAAC,OAAA,SAAAL,WAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAK,IAAA;;QAEA;QACA,SAAAH,IAAA,CAAAG,IAAA;UACA;UACAN,OAAA,CAAAqB,OAAA;UACAC,UAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA;QACA;UACAN,YAAA,CAAAC,OAAA,WAAAL,WAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAwB,WAAA,CAAAC,MAAA;UACAR,YAAA,CAAAC,OAAA,WAAAL,WAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAwB,WAAA,CAAAE,QAAA;UACA3B,OAAA,CAAAqB,OAAA;UACAC,UAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA;QACA;MACA;QACAxB,OAAA,CAAA4B,KAAA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}