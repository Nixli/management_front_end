{"ast":null,"code":"import autoResize from '../../../mixin/autoResize.js';\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvBorderBox6',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => []\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data() {\n    return {\n      ref: 'border-box-6',\n      defaultColor: ['rgba(255, 255, 255, 0.35)', 'gray'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color() {\n      const {\n        mergeColor\n      } = this;\n      mergeColor();\n    }\n  },\n  methods: {\n    mergeColor() {\n      const {\n        color,\n        defaultColor\n      } = this;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    }\n  },\n  mounted() {\n    const {\n      mergeColor\n    } = this;\n    mergeColor();\n  }\n};","map":{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","color","type","Array","default","backgroundColor","String","data","ref","defaultColor","mergedColor","watch","mergeColor","methods","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/borderBox6/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-border-box-6\" :ref=\"ref\">\r\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\r\n      <polygon :fill=\"backgroundColor\" :points=\"`\r\n        9, 7 ${width - 9}, 7 ${width - 9}, ${height - 7} 9, ${height - 7}\r\n      `\" />\r\n\r\n      <circle :fill=\"mergedColor[1]\" cx=\"5\" cy=\"5\" r=\"2\"/>\r\n      <circle :fill=\"mergedColor[1]\" :cx=\"width - 5\" cy=\"5\" r=\"2\" />\r\n      <circle :fill=\"mergedColor[1]\" :cx=\"width - 5\" :cy=\"height - 5\" r=\"2\" />\r\n      <circle :fill=\"mergedColor[1]\" cx=\"5\" :cy=\"height - 5\" r=\"2\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`10, 4 ${width - 10}, 4`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`10, ${height - 4} ${width - 10}, ${height - 4}`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`5, 70 5, ${height - 70}`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 5}, 70 ${width - 5}, ${height - 70}`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`3, 10, 3, 50`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`7, 30 7, 80`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 3}, 10 ${width - 3}, 50`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 7}, 30 ${width - 7}, 80`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`3, ${height - 10} 3, ${height - 50}`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`7, ${height - 30} 7, ${height - 80}`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 3}, ${height - 10} ${width - 3}, ${height - 50}`\" />\r\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 7}, ${height - 30} ${width - 7}, ${height - 80}`\" />\r\n    </svg>\r\n\r\n    <div class=\"border-box-content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize.js'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvBorderBox6',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      default: 'transparent'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'border-box-6',\r\n\r\n      defaultColor: ['rgba(255, 255, 255, 0.35)', 'gray'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"],"mappings":"AAgCA,OAAAA,UAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAJ,UAAA;EACAK,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,eAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,GAAA;MAEAC,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAV,MAAA;MACA;QAAAW;MAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAD,WAAA;MACA;QAAAX,KAAA;QAAAQ;MAAA;MAEA,KAAAC,WAAA,GAAAd,SAAA,CAAAC,SAAA,CAAAY,YAAA,SAAAR,KAAA;IACA;EACA;EACAa,QAAA;IACA;MAAAF;IAAA;IAEAA,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}