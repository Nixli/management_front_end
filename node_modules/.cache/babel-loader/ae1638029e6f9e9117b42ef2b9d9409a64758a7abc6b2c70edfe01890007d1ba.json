{"ast":null,"code":"import axios from \"axios\";\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      chart: null,\n      nameList: [],\n      countList: [],\n      dishIDList: '',\n      // 搜索条件\n      params: {\n        //storeId: 1,\n        dishID: undefined\n        //times: undefined,\n        // pageno: 1,\n        // pagesize: 5,\n      },\n      chart: ''\n      //时间\n      //   pickerOptions: {\n      //     shortcuts: [{\n      //       text: '最近一周',\n      //       onClick(picker) {\n      //         const end = new Date();\n      //         const start = new Date();\n      //         start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n      //         picker.$emit('pick', [start, end]);\n      //       }\n      //     }, {\n      //       text: '最近一个月',\n      //       onClick(picker) {\n      //         const end = new Date();\n      //         const start = new Date();\n      //         start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n      //         picker.$emit('pick', [start, end]);\n      //       }\n      //     }, {\n      //       text: '最近三个月',\n      //       onClick(picker) {\n      //         const end = new Date();\n      //         const start = new Date();\n      //         start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n      //         picker.$emit('pick', [start, end]);\n      //       }\n      //     }]\n      //   },\n    };\n  },\n  mounted() {//最早获取DOM元素的生命周期函数，挂载完毕\n    // this.$nextTick(() => {\n    //   this.initChart()\n    // })\n  },\n  created() {\n    this.getDishIDList();\n    // this.getNameList();\n    // this.getCountList();\n  },\n  methods: {\n    // open(msg) {\n    //     this.$message({\n    //       message: msg,\n    //       type: 'success'\n    //     });\n    //   },\n    //查询该门店的所有菜品大类\n    async getDishIDList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dish/findDishByStoreID\",\n        params: {\n          storeId: 1\n        }\n      });\n      console.log(res.data.data);\n      this.dishIDList = res.data.data;\n    },\n    //显示图表\n    async getNameList() {\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/dishes/getDishesNameList\",\n        params: {\n          ...this.params,\n          //dishID:this.dishID,\n          storeId: 1\n          //dishID: 2,\n        }\n      });\n      this.$nextTick(() => {\n        //this.setOption()\n      });\n      //console.log(res);\n      this.nameList = res.data.data;\n    },\n    async getCountList() {\n      const res = await axios({\n        method: \"post\",\n        url: \"http://localhost:8080/dishes/getDishesCountList\",\n        params: {\n          ...this.params,\n          //dishID:this.dishID,\n          storeId: 1\n          //dishID: 2,\n        }\n      });\n      console.log(res);\n      this.countList = res.data.data;\n    },\n    // 点击搜索\n    search() {\n      console.log(this.params);\n      this.getNameList();\n      this.getCountList();\n      //chart = echarts.init(document.getElementById(\"chart\"));\n    }\n  },\n  mounted() {\n    // 初始化echarts实例\n    this.chart = echarts.init(document.getElementById(\"chart\"));\n    // 设置echarts配置项\n    setTimeout(() => {\n      //   const option = {\n      this.chart.setOption({\n        xAxis: {\n          type: \"category\",\n          data: this.nameList\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [{\n          // data: this.getCountList,\n          data: this.countList,\n          type: \"bar\"\n        }]\n      });\n    }, 2000);\n\n    // 使用配置项绘制图表\n    // option && this.chart.setOption(option);\n  }\n\n  // mounted() { //最早获取DOM元素的生命周期函数，挂载完毕\n  //     // this.$nextTick(() => {\n  //     //   this.initChart()\n  //     // })\n  //   },\n  // beforeDestroy() {\n  //     if (!this.chart) {\n  //       return\n  //     }\n  //     this.chart.dispose()\n  //     this.chart = null\n  //   },\n  //   methods: {\n  //     initChart() {\n  //       this.chart = echarts.init(this.$el, 'macarons')\n  //       this.chart.setOption({\n  //         xAxis: {\n  //           type: \"category\",\n  //           data: this.getNameList,\n  //         },\n  //         yAxis: {\n  //           type: \"value\",\n  //         },\n  //         series: [\n  //           {\n  //             data: this.getCountList,\n  //             type: \"bar\",\n  //           },\n  //         ],\n  //       })\n  //     }\n  //   }\n};","map":{"version":3,"names":["axios","echarts","data","chart","nameList","countList","dishIDList","params","dishID","undefined","mounted","created","getDishIDList","methods","res","method","url","storeId","console","log","getNameList","$nextTick","getCountList","search","init","document","getElementById","setTimeout","setOption","xAxis","type","yAxis","series"],"sources":["src/views/dishSales/dishSales.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: auto; width: auto\">\r\n    <el-card>\r\n      <div style=\"display: flex; flex-direction: row\">\r\n        <!-- 搜索区域 -->\r\n        <el-form :inline=\"true\">\r\n          <!-- 菜系下拉列表框 -->\r\n          <el-form-item label=\"菜系\">\r\n            <el-select v-model=\"params.dishID\" class=\"filter-item\" placeholder=\"请选择菜系\">\r\n              <el-option v-for=\"(dish, index) in dishIDList\" :label=\"dish.dishType\" :value=\"dish.dishID\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <!-- 时间 -->\r\n          <!-- <el-date-picker style=\"margin-top: 1px;\" v-model=\"params.times\" type=\"datetimerange\" :picker-options=\"pickerOptions\"\r\n                    range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\">\r\n                </el-date-picker> -->\r\n\r\n          <!-- 搜索按钮 -->\r\n          <el-form-item>\r\n            <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 图形区域 -->\r\n    <el-card>\r\n      <div id=\"chart\" style=\"width: 600px; height: 400px\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      nameList: [],\r\n      countList: [],\r\n      dishIDList: '',\r\n      // 搜索条件\r\n      params: {\r\n        //storeId: 1,\r\n        dishID:undefined,\r\n        //times: undefined,\r\n        // pageno: 1,\r\n        // pagesize: 5,\r\n      },\r\n      chart:''\r\n      //时间\r\n      //   pickerOptions: {\r\n      //     shortcuts: [{\r\n      //       text: '最近一周',\r\n      //       onClick(picker) {\r\n      //         const end = new Date();\r\n      //         const start = new Date();\r\n      //         start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n      //         picker.$emit('pick', [start, end]);\r\n      //       }\r\n      //     }, {\r\n      //       text: '最近一个月',\r\n      //       onClick(picker) {\r\n      //         const end = new Date();\r\n      //         const start = new Date();\r\n      //         start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n      //         picker.$emit('pick', [start, end]);\r\n      //       }\r\n      //     }, {\r\n      //       text: '最近三个月',\r\n      //       onClick(picker) {\r\n      //         const end = new Date();\r\n      //         const start = new Date();\r\n      //         start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n      //         picker.$emit('pick', [start, end]);\r\n      //       }\r\n      //     }]\r\n      //   },\r\n    };\r\n  },\r\n  mounted() { //最早获取DOM元素的生命周期函数，挂载完毕\r\n    // this.$nextTick(() => {\r\n    //   this.initChart()\r\n    // })\r\n  },\r\n  created() {\r\n    this.getDishIDList();\r\n    // this.getNameList();\r\n    // this.getCountList();\r\n  },\r\n  methods: {\r\n    // open(msg) {\r\n    //     this.$message({\r\n    //       message: msg,\r\n    //       type: 'success'\r\n    //     });\r\n    //   },\r\n    //查询该门店的所有菜品大类\r\n    async getDishIDList(){\r\n      const res = await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/dish/findDishByStoreID\",\r\n        params: {\r\n          storeId: 1,\r\n        },\r\n      });\r\n      console.log(res.data.data);\r\n      this.dishIDList = res.data.data;\r\n    },\r\n    //显示图表\r\n    async getNameList(){\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/dishes/getDishesNameList\",\r\n        params: {\r\n           ...this.params,\r\n           //dishID:this.dishID,\r\n          storeId: 1,\r\n          //dishID: 2,\r\n        },\r\n      });\r\n      this.$nextTick(() => {\r\n            //this.setOption()\r\n          })\r\n      //console.log(res);\r\n      this.nameList = res.data.data;\r\n    },\r\n    async getCountList(){\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:8080/dishes/getDishesCountList\",\r\n        params: {\r\n           ...this.params,\r\n           //dishID:this.dishID,\r\n          storeId: 1,\r\n          //dishID: 2,\r\n        },\r\n      });\r\n      console.log(res);\r\n      this.countList = res.data.data;\r\n    },\r\n    // 点击搜索\r\n    search() {\r\n      console.log(this.params);\r\n      this.getNameList();\r\n      this.getCountList();\r\n      //chart = echarts.init(document.getElementById(\"chart\"));\r\n    },\r\n  },\r\n  mounted() {\r\n    // 初始化echarts实例\r\n    this.chart = echarts.init(document.getElementById(\"chart\"));\r\n    // 设置echarts配置项\r\n    setTimeout(() => {\r\n    //   const option = {\r\n        this.chart.setOption({\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: this.nameList,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            // data: this.getCountList,\r\n            data: this.countList,\r\n            type: \"bar\",\r\n          },\r\n        ],\r\n      });\r\n    }, 2000);\r\n\r\n    // 使用配置项绘制图表\r\n    // option && this.chart.setOption(option);\r\n  },\r\n\r\n// mounted() { //最早获取DOM元素的生命周期函数，挂载完毕\r\n//     // this.$nextTick(() => {\r\n//     //   this.initChart()\r\n//     // })\r\n//   },\r\n// beforeDestroy() {\r\n//     if (!this.chart) {\r\n//       return\r\n//     }\r\n//     this.chart.dispose()\r\n//     this.chart = null\r\n//   },\r\n//   methods: {\r\n//     initChart() {\r\n//       this.chart = echarts.init(this.$el, 'macarons')\r\n//       this.chart.setOption({\r\n//         xAxis: {\r\n//           type: \"category\",\r\n//           data: this.getNameList,\r\n//         },\r\n//         yAxis: {\r\n//           type: \"value\",\r\n//         },\r\n//         series: [\r\n//           {\r\n//             data: this.getCountList,\r\n//             type: \"bar\",\r\n//           },\r\n//         ],\r\n//       })\r\n//     }\r\n//   }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.row-box {\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  margin-bottom: 8px;\r\n  justify-content: center;\r\n}\r\n</style>"],"mappings":"AAkCA,OAAAA,KAAA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,SAAA;MACAC,UAAA;MACA;MACAC,MAAA;QACA;QACAC,MAAA,EAAAC;QACA;QACA;QACA;MACA;MACAN,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAO,QAAA;IACA;IACA;IACA;EAAA,CACA;EACAC,QAAA;IACA,KAAAC,aAAA;IACA;IACA;EACA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAAD,cAAA;MACA,MAAAE,GAAA,SAAAd,KAAA;QACAe,MAAA;QACAC,GAAA;QACAT,MAAA;UACAU,OAAA;QACA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAL,GAAA,CAAAZ,IAAA,CAAAA,IAAA;MACA,KAAAI,UAAA,GAAAQ,GAAA,CAAAZ,IAAA,CAAAA,IAAA;IACA;IACA;IACA,MAAAkB,YAAA;MACA,MAAAN,GAAA,SAAAd,KAAA;QACAe,MAAA;QACAC,GAAA;QACAT,MAAA;UACA,QAAAA,MAAA;UACA;UACAU,OAAA;UACA;QACA;MACA;MACA,KAAAI,SAAA;QACA;MAAA,CACA;MACA;MACA,KAAAjB,QAAA,GAAAU,GAAA,CAAAZ,IAAA,CAAAA,IAAA;IACA;IACA,MAAAoB,aAAA;MACA,MAAAR,GAAA,SAAAd,KAAA;QACAe,MAAA;QACAC,GAAA;QACAT,MAAA;UACA,QAAAA,MAAA;UACA;UACAU,OAAA;UACA;QACA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAL,GAAA;MACA,KAAAT,SAAA,GAAAS,GAAA,CAAAZ,IAAA,CAAAA,IAAA;IACA;IACA;IACAqB,OAAA;MACAL,OAAA,CAAAC,GAAA,MAAAZ,MAAA;MACA,KAAAa,WAAA;MACA,KAAAE,YAAA;MACA;IACA;EACA;EACAZ,QAAA;IACA;IACA,KAAAP,KAAA,GAAAF,OAAA,CAAAuB,IAAA,CAAAC,QAAA,CAAAC,cAAA;IACA;IACAC,UAAA;MACA;MACA,KAAAxB,KAAA,CAAAyB,SAAA;QACAC,KAAA;UACAC,IAAA;UACA5B,IAAA,OAAAE;QACA;QACA2B,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACA;UACA9B,IAAA,OAAAG,SAAA;UACAyB,IAAA;QACA;MAEA;IACA;;IAEA;IACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}