{"ast":null,"code":"import * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      paymentList: [],\n      payment: 0,\n      collectionList: [],\n      collection: 0,\n      myChart: {},\n      // \n      series: []\n    };\n  },\n  mounted() {\n    // 基于准备好的dom，初始化echarts实例\n    this.myChart = echarts.init(document.getElementById('line'));\n    // 绘制图表\n  },\n  created() {\n    this.getPaymentList(), this.getCollectionList(), setTimeout(() => {\n      this.series = [{\n        name: '每月收入',\n        type: 'line',\n        data: [120, 192, 121, 154, 170, 192, 141, 164, 110, 132, 101, 134]\n      }, {\n        name: '每月费用',\n        type: 'line',\n        data: [120, 132, 101, 134, 120, 132, 101, 134, 120, 182, 149, 164]\n      }, {\n        name: '每月利润',\n        type: 'line',\n        data: [220, 182, 191, 234, 220, 182, 191, 234, 220, 182, 191, 234]\n      }];\n    }, 2000);\n  },\n  watch: {\n    series: {\n      handler() {\n        this.myChart.setOption({\n          title: {\n            text: '财务分析（近一年）'\n          },\n          legend: {\n            data: ['每月收入', '每月费用', '每月利润']\n          },\n          tooltip: {},\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            // x轴\n            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n          },\n          yAxis: {},\n          series: this.series\n        });\n      },\n      deep: true\n    }\n  },\n  methods: {\n    // 计算应收账款\n    async getPaymentList() {\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '收',\n          bookID: localStorage.getItem('bookID')\n        }\n      });\n      this.paymentList = res.data.data.list;\n      // 累加每个对象的totalAmount属性\n      let totalPaymentAmount = 0;\n      this.paymentList.forEach(payment => {\n        totalPaymentAmount += parseFloat(payment.totalAmount);\n      });\n      this.payment = totalPaymentAmount;\n      console.log(this.payment);\n    },\n    // 计算应付账款\n    async getCollectionList() {\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '付',\n          bookID: localStorage.getItem('bookID')\n        }\n      });\n      this.collectionList = res.data.data.list;\n      // 累加每个对象的totalAmount属性\n      let totalPaymentAmount = 0;\n      this.collectionList.forEach(payment => {\n        totalPaymentAmount += parseFloat(payment.totalAmount);\n      });\n      this.collection = totalPaymentAmount;\n    }\n  }\n};","map":{"version":3,"names":["echarts","axios","data","paymentList","payment","collectionList","collection","myChart","series","mounted","init","document","getElementById","created","getPaymentList","getCollectionList","setTimeout","name","type","watch","handler","setOption","title","text","legend","tooltip","xAxis","boundaryGap","yAxis","deep","methods","res","url","method","params","pageno","pagesize","voucherWord","bookID","localStorage","getItem","list","totalPaymentAmount","forEach","parseFloat","totalAmount","console","log"],"sources":["src/views/home/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <img src=\"@/assets/收款进度.svg\" /> -->\n    <el-card style=\"margin-right: 30px;\">\n      <div>\n        <span style=\"font-size: 16px; font-family:'Times New Roman', Times, serif;font-weight: bold;\">财务指标</span>\n      </div>\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"8\">\n          <div class=\"grid-content bg-purple\" style=\"display: flex;text-align: center;justify-content: center;\">\n            <img src=\"@/assets/收款进度.svg\" width=\"25%\" height=\"25%\" style=\"margin-left: 20px; flex:3\">\n            <div style=\"display: flex; flex-direction: column; text-align: center;justify-content: center; flex: 7;\">\n              <span style=\"font-size: 36px;\">{{ payment }}</span>\n              <span style=\"font-size: 16px; margin-top: 10px;\">应收账款</span>\n            </div>\n          </div>\n        </el-col>\n        <el-col :span=\"8\">\n          <div class=\"grid-content bg-purple\" style=\"display: flex;text-align: center;justify-content: center;\">\n            <img src=\"@/assets/付款进度.svg\" width=\"25%\" height=\"25%\" style=\"margin-left: 20px; flex:3\">\n            <div style=\"display: flex; flex-direction: column; text-align: center;justify-content: center; flex: 7;\">\n              <span style=\"font-size: 36px;\">{{ collection }}</span>\n              <span style=\"font-size: 16px; margin-top: 10px;\">应付账款</span>\n            </div>\n          </div>\n        </el-col>\n        <el-col :span=\"8\">\n          <div class=\"grid-content bg-purple\" style=\"display: flex;text-align: center;justify-content: center;\">\n            <img src=\"@/assets/利润分析.svg\" width=\"113px\" height=\"99px\" style=\"margin-left: 20px; flex:3\">\n            <div style=\"display: flex; flex-direction: column; text-align: center;justify-content: center; flex: 7;\">\n              <span style=\"font-size: 36px;\">{{ payment - collection }}</span>\n              <span style=\"font-size: 16px; margin-top: 10px;\">利润总额</span>\n            </div>\n          </div>\n        </el-col>\n      </el-row>\n\n      <div id=\"line\" style=\"width: 1200px; height: 400px; margin-top: 30px;\"></div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      paymentList: [],\n      payment: 0,\n      collectionList: [],\n      collection: 0,\n      myChart: {},\n      // \n      series: []\n    }\n  },\n  mounted() {\n    // 基于准备好的dom，初始化echarts实例\n    this.myChart = echarts.init(document.getElementById('line'));\n    // 绘制图表\n  },\n  created() {\n    this.getPaymentList(),\n      this.getCollectionList(),\n      setTimeout(() => {\n        this.series = [\n          {\n            name: '每月收入',\n            type: 'line',\n            data: [120, 192, 121, 154, 170, 192, 141, 164, 110, 132, 101, 134]\n          },\n          {\n            name: '每月费用',\n            type: 'line',\n            data: [120, 132, 101, 134, 120, 132, 101, 134, 120, 182, 149, 164,]\n          },\n          {\n            name: '每月利润',\n            type: 'line',\n            data: [220, 182, 191, 234, 220, 182, 191, 234, 220, 182, 191, 234,]\n          },\n        ]\n      }, 2000)\n  },\n  watch: {\n    series: {\n      handler() {\n        this.myChart.setOption({\n          title: {\n            text: '财务分析（近一年）'\n          },\n          legend: {\n            data: ['每月收入', '每月费用', '每月利润']\n          },\n          tooltip: {},\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            // x轴\n            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n          },\n          yAxis: {},\n          series: this.series\n        });\n      },\n      deep: true\n    }\n  },\n  methods: {\n\n    // 计算应收账款\n    async getPaymentList() {\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '收',\n          bookID: localStorage.getItem('bookID')\n        }\n      })\n      this.paymentList = res.data.data.list;\n      // 累加每个对象的totalAmount属性\n      let totalPaymentAmount = 0;\n      this.paymentList.forEach(payment => {\n        totalPaymentAmount += parseFloat(payment.totalAmount);\n      });\n      this.payment = totalPaymentAmount;\n      console.log(this.payment)\n    },\n\n    // 计算应付账款\n    async getCollectionList() {\n      const res = await axios({\n        url: '/voucher',\n        method: 'get',\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          voucherWord: '付',\n          bookID: localStorage.getItem('bookID')\n        }\n      })\n      this.collectionList = res.data.data.list;\n      // 累加每个对象的totalAmount属性\n      let totalPaymentAmount = 0;\n      this.collectionList.forEach(payment => {\n        totalPaymentAmount += parseFloat(payment.totalAmount);\n      });\n      this.collection = totalPaymentAmount;\n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-row {\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.el-col {\n  border-radius: 4px;\n}\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: rgb(249, 249, 249);\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n</style>"],"mappings":"AA2CA,YAAAA,OAAA;AACA,OAAAC,KAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,OAAA;MACAC,cAAA;MACAC,UAAA;MACAC,OAAA;MACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAF,OAAA,GAAAP,OAAA,CAAAU,IAAA,CAAAC,QAAA,CAAAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA,IACA,KAAAC,iBAAA,IACAC,UAAA;MACA,KAAAR,MAAA,IACA;QACAS,IAAA;QACAC,IAAA;QACAhB,IAAA;MACA,GACA;QACAe,IAAA;QACAC,IAAA;QACAhB,IAAA;MACA,GACA;QACAe,IAAA;QACAC,IAAA;QACAhB,IAAA;MACA,EACA;IACA;EACA;EACAiB,KAAA;IACAX,MAAA;MACAY,QAAA;QACA,KAAAb,OAAA,CAAAc,SAAA;UACAC,KAAA;YACAC,IAAA;UACA;UACAC,MAAA;YACAtB,IAAA;UACA;UACAuB,OAAA;UACAC,KAAA;YACAR,IAAA;YACAS,WAAA;YACA;YACAzB,IAAA;UACA;UACA0B,KAAA;UACApB,MAAA,OAAAA;QACA;MACA;MACAqB,IAAA;IACA;EACA;EACAC,OAAA;IAEA;IACA,MAAAhB,eAAA;MACA,MAAAiB,GAAA,SAAA9B,KAAA;QACA+B,GAAA;QACAC,MAAA;QACAC,MAAA;UACAC,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,WAAA;UACAC,MAAA,EAAAC,YAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAArC,WAAA,GAAA4B,GAAA,CAAA7B,IAAA,CAAAA,IAAA,CAAAuC,IAAA;MACA;MACA,IAAAC,kBAAA;MACA,KAAAvC,WAAA,CAAAwC,OAAA,CAAAvC,OAAA;QACAsC,kBAAA,IAAAE,UAAA,CAAAxC,OAAA,CAAAyC,WAAA;MACA;MACA,KAAAzC,OAAA,GAAAsC,kBAAA;MACAI,OAAA,CAAAC,GAAA,MAAA3C,OAAA;IACA;IAEA;IACA,MAAAW,kBAAA;MACA,MAAAgB,GAAA,SAAA9B,KAAA;QACA+B,GAAA;QACAC,MAAA;QACAC,MAAA;UACAC,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,WAAA;UACAC,MAAA,EAAAC,YAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAnC,cAAA,GAAA0B,GAAA,CAAA7B,IAAA,CAAAA,IAAA,CAAAuC,IAAA;MACA;MACA,IAAAC,kBAAA;MACA,KAAArC,cAAA,CAAAsC,OAAA,CAAAvC,OAAA;QACAsC,kBAAA,IAAAE,UAAA,CAAAxC,OAAA,CAAAyC,WAAA;MACA;MACA,KAAAvC,UAAA,GAAAoC,kBAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}