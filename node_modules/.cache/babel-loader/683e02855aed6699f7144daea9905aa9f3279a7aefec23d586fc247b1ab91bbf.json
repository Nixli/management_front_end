{"ast":null,"code":"// 页面导出为pdf格式\nimport html2Canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nexport const htmlToPdf = {\n  getPdf: (dom, title, loading) => {\n    // loading = true;\n    let options = {\n      taintTest: false,\n      allowTaint: false,\n      logging: false,\n      useCORS: true,\n      dpi: window.devicePixelRatio * 4,\n      //将分辨率提高到特定的DPI 提高四倍\n      scale: 4 //按比例增加分辨率\n    };\n    html2Canvas(dom, options).then(canvas => {\n      const pdf = new jsPDF('p', 'mm', 'a4'); //A4纸，纵向\n      let ctx = canvas.getContext('2d'),\n        a4w = 190,\n        a4h = 272,\n        //A4大小，210mm x 297mm，四边各保留10mm的边距，显示区域190x277\n        imgHeight = Math.floor(a4h * canvas.width / a4w),\n        //按A4显示比例换算一页图像的像素高度\n        renderedHeight = 0;\n      while (renderedHeight < canvas.height) {\n        const page = document.createElement('canvas');\n        page.width = canvas.width;\n        page.height = Math.min(imgHeight, canvas.height - renderedHeight); //可能内容不足一页\n\n        //用getImageData剪裁指定区域，并画到前面创建的canvas对象中\n        page.getContext('2d').putImageData(ctx.getImageData(0, renderedHeight, canvas.width, Math.min(imgHeight, canvas.height - renderedHeight)), 0, 0);\n        pdf.addImage(page.toDataURL('image/jpeg', 1.0), 'JPEG', 10, 10, a4w, Math.min(a4h, a4w * page.height / page.width)); //添加图像到页面，保留10mm边距\n\n        renderedHeight += imgHeight;\n        if (renderedHeight < canvas.height) {\n          pdf.addPage(); //如果后面还有内容，添加一个空页\n        }\n        // delete page;\n      }\n      //保存文件\n      pdf.save(title + '.pdf');\n      // loading = false;\n    });\n  }\n};","map":{"version":3,"names":["html2Canvas","jsPDF","htmlToPdf","getPdf","dom","title","loading","options","taintTest","allowTaint","logging","useCORS","dpi","window","devicePixelRatio","scale","then","canvas","pdf","ctx","getContext","a4w","a4h","imgHeight","Math","floor","width","renderedHeight","height","page","document","createElement","min","putImageData","getImageData","addImage","toDataURL","addPage","save"],"sources":["D:/guoxinan/workspace1/three/vue/management_front_end/src/utils/pdf.js"],"sourcesContent":["// 页面导出为pdf格式\r\nimport html2Canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nexport const htmlToPdf = {\r\n  getPdf: (dom, title, loading) => {\r\n    // loading = true;\r\n    let options= {\r\n      taintTest: false,\r\n      allowTaint: false,\r\n      logging: false,\r\n      useCORS: true,\r\n      dpi: window.devicePixelRatio * 4, //将分辨率提高到特定的DPI 提高四倍\r\n      scale: 4, //按比例增加分辨率\r\n    }\r\n    html2Canvas(dom,options).then((canvas) => {\r\n      const pdf = new jsPDF('p', 'mm', 'a4'); //A4纸，纵向\r\n      let ctx = canvas.getContext('2d'),\r\n        a4w = 190,\r\n        a4h = 272, //A4大小，210mm x 297mm，四边各保留10mm的边距，显示区域190x277\r\n        imgHeight = Math.floor((a4h * canvas.width) / a4w), //按A4显示比例换算一页图像的像素高度\r\n        renderedHeight = 0;\r\n\r\n      while (renderedHeight < canvas.height) {\r\n        const page = document.createElement('canvas');\r\n        page.width = canvas.width;\r\n        page.height = Math.min(imgHeight, canvas.height - renderedHeight); //可能内容不足一页\r\n\r\n        //用getImageData剪裁指定区域，并画到前面创建的canvas对象中\r\n        page.getContext('2d')\r\n          .putImageData(\r\n            ctx.getImageData(\r\n              0,\r\n              renderedHeight,\r\n              canvas.width,\r\n              Math.min(imgHeight, canvas.height - renderedHeight),\r\n            ),\r\n            0,\r\n            0,\r\n          );\r\n        pdf.addImage(\r\n          page.toDataURL('image/jpeg', 1.0),\r\n          'JPEG',\r\n          10,\r\n          10,\r\n          a4w,\r\n          Math.min(a4h, (a4w * page.height) / page.width),\r\n        ); //添加图像到页面，保留10mm边距\r\n\r\n        renderedHeight += imgHeight;\r\n        if (renderedHeight < canvas.height) {\r\n          pdf.addPage(); //如果后面还有内容，添加一个空页\r\n        }\r\n        // delete page;\r\n      }\r\n      //保存文件\r\n      pdf.save(title + '.pdf');\r\n      // loading = false;\r\n    });\r\n  },\r\n};"],"mappings":"AAAA;AACA,OAAOA,WAAW,MAAM,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAG;EACvBC,MAAM,EAAEA,CAACC,GAAG,EAAEC,KAAK,EAAEC,OAAO,KAAK;IAC/B;IACA,IAAIC,OAAO,GAAE;MACXC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,IAAI;MACbC,GAAG,EAAEC,MAAM,CAACC,gBAAgB,GAAG,CAAC;MAAE;MAClCC,KAAK,EAAE,CAAC,CAAE;IACZ,CAAC;IACDf,WAAW,CAACI,GAAG,EAACG,OAAO,CAAC,CAACS,IAAI,CAAEC,MAAM,IAAK;MACxC,MAAMC,GAAG,GAAG,IAAIjB,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;MACxC,IAAIkB,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;QAC/BC,GAAG,GAAG,GAAG;QACTC,GAAG,GAAG,GAAG;QAAE;QACXC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAEH,GAAG,GAAGL,MAAM,CAACS,KAAK,GAAIL,GAAG,CAAC;QAAE;QACpDM,cAAc,GAAG,CAAC;MAEpB,OAAOA,cAAc,GAAGV,MAAM,CAACW,MAAM,EAAE;QACrC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC7CF,IAAI,CAACH,KAAK,GAAGT,MAAM,CAACS,KAAK;QACzBG,IAAI,CAACD,MAAM,GAAGJ,IAAI,CAACQ,GAAG,CAACT,SAAS,EAAEN,MAAM,CAACW,MAAM,GAAGD,cAAc,CAAC,CAAC,CAAC;;QAEnE;QACAE,IAAI,CAACT,UAAU,CAAC,IAAI,CAAC,CAClBa,YAAY,CACXd,GAAG,CAACe,YAAY,CACd,CAAC,EACDP,cAAc,EACdV,MAAM,CAACS,KAAK,EACZF,IAAI,CAACQ,GAAG,CAACT,SAAS,EAAEN,MAAM,CAACW,MAAM,GAAGD,cAAc,CACpD,CAAC,EACD,CAAC,EACD,CACF,CAAC;QACHT,GAAG,CAACiB,QAAQ,CACVN,IAAI,CAACO,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,EACjC,MAAM,EACN,EAAE,EACF,EAAE,EACFf,GAAG,EACHG,IAAI,CAACQ,GAAG,CAACV,GAAG,EAAGD,GAAG,GAAGQ,IAAI,CAACD,MAAM,GAAIC,IAAI,CAACH,KAAK,CAChD,CAAC,CAAC,CAAC;;QAEHC,cAAc,IAAIJ,SAAS;QAC3B,IAAII,cAAc,GAAGV,MAAM,CAACW,MAAM,EAAE;UAClCV,GAAG,CAACmB,OAAO,CAAC,CAAC,CAAC,CAAC;QACjB;QACA;MACF;MACA;MACAnB,GAAG,CAACoB,IAAI,CAACjC,KAAK,GAAG,MAAM,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}