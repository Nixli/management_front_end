{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      list: [],\n      // 分页相关\n      pageno: 1,\n      pagesize: 5,\n      total: 0,\n      // 搜索条件\n      params: {\n        dishType: '',\n        storeId: ''\n      },\n      // 控制弹框的显示与隐藏\n      dialogFormVisible: false,\n      // 表单的数据\n      newDishData: {\n        dishID: '',\n        dishType: '',\n        storeId: ''\n      },\n      // add： 新增   edit: '更新'\n      actionType: ''\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dish/findAllDishByPage\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize\n        }\n      });\n      this.list = res.data.data;\n      this.total = res.data.count;\n    },\n    // 点击搜索\n    async search() {\n      console.log(this.params);\n      const re = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/dish/findAllDishByStoreAndDishType\",\n        params: {\n          dishType: this.params.dishType,\n          storeId: this.params.storeId\n        }\n      });\n      console.log(re);\n      this.list = re.data.data;\n      this.total = re.data.count;\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      this.actionType = 'add';\n      // 重置userFormData\n      this.newDishData = {\n        dishID: '',\n        dishType: '',\n        storeId: ''\n      };\n    },\n    //修改弹窗\n    edit(row) {\n      console.log(row);\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录动作\n      this.actionType = 'edit';\n      // 数据回显\n      this.newDishData.dishID = row.dishID;\n      this.newDishData.dishType = row.dishType;\n      this.newDishData.storeId = row.storeId;\n    },\n    //新增或修改菜品大类\n    async submit() {\n      this.dialogFormVisible = false;\n      if (this.actionType == 'edit') {\n        console.log(this.newDishData);\n        const res = await axios({\n          url: \"http://localhost:8080/dish/updateDish\",\n          method: 'post',\n          data: this.newDishData\n        }).then(result => {\n          console.log(result.data);\n          if (result.data.code == 200) {\n            alert(result.data.msg);\n            this.getList();\n          } else {\n            alert(result.data.msg);\n          }\n        });\n      }\n      if (this.actionType == 'add') {\n        console.log(this.newDishData);\n        const res = await axios({\n          url: \"http://localhost:8080/dish/insertDish\",\n          method: 'post',\n          data: this.newDishData\n        }).then(result => {\n          console.log(result.data);\n          if (result.data.code == 200) {\n            alert(result.data.msg);\n            this.getList();\n          } else {\n            alert(result.data.msg);\n          }\n        });\n      }\n    },\n    //删除菜品大类\n    async removeEmployee(id) {\n      console.log(this.newDishData);\n      const res = await axios({\n        url: 'http://localhost:8080/dish/deleteDish',\n        method: 'post',\n        // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\n        data: {\n          dishID: id\n        }\n      });\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","list","pageno","pagesize","total","params","dishType","storeId","dialogFormVisible","newDishData","dishID","actionType","created","getList","methods","res","method","url","count","search","console","log","re","pagechange","addOpen","edit","row","submit","then","result","code","alert","msg","removeEmployee","id"],"sources":["src/views/dish/Dish.vue"],"sourcesContent":["<template>\r\n    <div style=\"height: auto; width: auto;\">\r\n  \r\n      <!-- 搜素和新增区域 -->\r\n      <el-card>\r\n        <div style=\"display: flex; flex-direction: row;\">\r\n          <!-- 搜索区域 -->\r\n          <el-form :inline=\"true\">\r\n            <el-form-item label=\"菜品大类名称\">\r\n              <el-input v-model=\"params.dishType\" placeholder=\"请输入菜品大类名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"门店id\">\r\n              <el-input v-model=\"params.storeId\" placeholder=\"请输入门店id\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"search\" type=\"primary\" icon=\"el-icon-search\">搜索</el-button>\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"addOpen\">新增菜品大类信息</el-button>\r\n          </el-form>\r\n        </div>\r\n      </el-card>\r\n  \r\n      <!-- 员工信息表 -->\r\n      <el-card style=\"margin-top: 20px;\">\r\n  \r\n        <el-card>\r\n          <span style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">菜品大类信息表</span>\r\n        </el-card>\r\n  \r\n        <el-table :data=\"list\" border style=\"width: 100%\">\r\n          <el-table-column prop=\"dishID\" label=\"菜品大类id\" align=\"center\"> </el-table-column>\r\n          <el-table-column prop=\"dishType\" label=\"菜品大类名称\" align=\"center\"> </el-table-column>\r\n          <el-table-column prop=\"storeId\" label=\"门店id\" align=\"center\"> </el-table-column>\r\n          <el-table-column fixed=\"right\" label=\"操作\" width=\"150\" align=\"center\">\r\n            <template #default=\"{ row }\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"removeEmployee(row.dish)\">删除</el-button>\r\n  \r\n              <!-- 修改删除按钮操作，以及后续操作 -->\r\n  \r\n              <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n  \r\n        <!-- 分页组件 -->\r\n        <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n          :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n        </el-pagination>\r\n      </el-card>\r\n  \r\n      <!-- 弹窗区域 -->\r\n      <el-dialog :title=\"actionType == 'add' ? '新增菜品大类信息' : '修改菜品大类信息'\" :visible.sync=\"dialogFormVisible\">\r\n        <el-form :model=\"newDishData\" class=\"demo-ruleForm\" label-width=\"80px\">\r\n  \r\n          <el-form-item label=\"大类名称\" :rules=\"[{ required: true, message: '菜品大类名称不能为空', trigger: 'blur' }]\">\r\n            <el-input v-model=\"newDishData.dishType\" placeholder=\"菜品大类名称\" ></el-input>\r\n          </el-form-item>\r\n  \r\n          <el-form-item label=\"门店编号\" :rules=\"[{ required: true, message: '门店编号不能为空', trigger: 'blur' }]\">\r\n            <el-input v-model=\"newDishData.storeId\" placeholder=\"门店编号\" ></el-input>\r\n          </el-form-item>\r\n  \r\n        </el-form>\r\n        <template #footer>\r\n          <div class=\"dialog-footer\">\r\n            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"submit()\">确 定</el-button>\r\n          </div>\r\n        </template>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  \r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n  \r\n    data() {\r\n      return {\r\n        list: [],\r\n        // 分页相关\r\n        pageno: 1,\r\n        pagesize: 5,\r\n        total: 0,\r\n        // 搜索条件\r\n        params: {\r\n          dishType: '',\r\n          storeId: '',\r\n        },\r\n        // 控制弹框的显示与隐藏\r\n        dialogFormVisible: false,\r\n        // 表单的数据\r\n        newDishData: {\r\n          dishID:'',\r\n          dishType:'',\r\n          storeId:''\r\n        },\r\n        // add： 新增   edit: '更新'\r\n        actionType: ''\r\n      };\r\n    },\r\n    created() {\r\n      this.getList()\r\n    },\r\n  \r\n    methods: {\r\n      async getList() {\r\n        const res = await axios({\r\n          method: \"get\",\r\n          url: \"http://localhost:8080/dish/findAllDishByPage\",\r\n          params: {\r\n            pageno: this.pageno,\r\n            pagesize: this.pagesize\r\n          },\r\n        });\r\n        this.list = res.data.data;\r\n        this.total = res.data.count;\r\n      },\r\n      // 点击搜索\r\n      async search() {\r\n        console.log(this.params)\r\n        const re = await axios({\r\n          method: \"get\",\r\n          url: \"http://localhost:8080/dish/findAllDishByStoreAndDishType\",\r\n          params: {\r\n            dishType: this.params.dishType,\r\n            storeId: this.params.storeId\r\n          },\r\n        });\r\n        console.log(re)\r\n        this.list = re.data.data;\r\n        this.total = re.data.count;\r\n      },\r\n  \r\n      // 页码改变\r\n      pagechange(pageno) {\r\n        // 条件改变\r\n        this.pageno = pageno\r\n        // 重新请求数据\r\n        this.getList()\r\n      },\r\n  \r\n      // 打开新增弹窗，\r\n      addOpen() {\r\n        // 打开弹窗\r\n        this.dialogFormVisible = true\r\n        // 记录状态\r\n        this.actionType = 'add'\r\n        // 重置userFormData\r\n        this.newDishData={\r\n          dishID:'',\r\n          dishType:'',\r\n          storeId:''\r\n        };\r\n      },\r\n  \r\n      //修改弹窗\r\n      edit(row) {\r\n        console.log(row)\r\n        // 打开弹窗\r\n        this.dialogFormVisible = true\r\n        // 记录动作\r\n        this.actionType = 'edit'\r\n        // 数据回显\r\n        this.newDishData.dishID = row.dishID;\r\n        this.newDishData.dishType = row.dishType;\r\n        this.newDishData.storeId = row.storeId;\r\n      },\r\n  \r\n      //新增或修改菜品大类\r\n      async submit() {\r\n        this.dialogFormVisible = false;\r\n        if(this.actionType == 'edit'){\r\n          console.log(this.newDishData);\r\n          const res = await axios({\r\n                  url: \"http://localhost:8080/dish/updateDish\",\r\n                  method: 'post',\r\n                  data: this.newDishData\r\n              }).then(result => {\r\n            console.log(result.data);\r\n            if (result.data.code == 200) {\r\n              alert(result.data.msg);\r\n              this.getList();\r\n            } else {\r\n              alert(result.data.msg);\r\n            }\r\n          });\r\n        }\r\n        if(this.actionType == 'add'){\r\n          console.log(this.newDishData);\r\n          const res = await axios({\r\n                  url: \"http://localhost:8080/dish/insertDish\",\r\n                  method: 'post',\r\n                  data: this.newDishData\r\n              }).then(result => {\r\n            console.log(result.data);\r\n            if (result.data.code == 200) {\r\n              alert(result.data.msg);\r\n              this.getList();\r\n            } else {\r\n              alert(result.data.msg);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      //删除菜品大类\r\n      async removeEmployee(id) {\r\n          console.log(this.newDishData);\r\n        const res = await axios({\r\n          url: 'http://localhost:8080/dish/deleteDish',\r\n          method: 'post',\r\n          // data一定是个对象，不能直接把id给data，把id变成一个对象给到data\r\n          data: {\r\n            dishID: id\r\n          }\r\n        })\r\n        this.getList()\r\n      },\r\n  \r\n    },\r\n  \r\n  }\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .row-box {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-top: 20px;\r\n    margin-bottom: 8px;\r\n    justify-content: center;\r\n  }\r\n  </style>"],"mappings":"AA2EA,OAAAA,KAAA;AAEA;EAEAC,KAAA;IACA;MACAC,IAAA;MACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACA;MACAC,MAAA;QACAC,QAAA;QACAC,OAAA;MACA;MACA;MACAC,iBAAA;MACA;MACAC,WAAA;QACAC,MAAA;QACAJ,QAAA;QACAC,OAAA;MACA;MACA;MACAI,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EAEAC,OAAA;IACA,MAAAD,QAAA;MACA,MAAAE,GAAA,SAAAhB,KAAA;QACAiB,MAAA;QACAC,GAAA;QACAZ,MAAA;UACAH,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA;QACA;MACA;MACA,KAAAF,IAAA,GAAAc,GAAA,CAAAf,IAAA,CAAAA,IAAA;MACA,KAAAI,KAAA,GAAAW,GAAA,CAAAf,IAAA,CAAAkB,KAAA;IACA;IACA;IACA,MAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,MAAAhB,MAAA;MACA,MAAAiB,EAAA,SAAAvB,KAAA;QACAiB,MAAA;QACAC,GAAA;QACAZ,MAAA;UACAC,QAAA,OAAAD,MAAA,CAAAC,QAAA;UACAC,OAAA,OAAAF,MAAA,CAAAE;QACA;MACA;MACAa,OAAA,CAAAC,GAAA,CAAAC,EAAA;MACA,KAAArB,IAAA,GAAAqB,EAAA,CAAAtB,IAAA,CAAAA,IAAA;MACA,KAAAI,KAAA,GAAAkB,EAAA,CAAAtB,IAAA,CAAAkB,KAAA;IACA;IAEA;IACAK,WAAArB,MAAA;MACA;MACA,KAAAA,MAAA,GAAAA,MAAA;MACA;MACA,KAAAW,OAAA;IACA;IAEA;IACAW,QAAA;MACA;MACA,KAAAhB,iBAAA;MACA;MACA,KAAAG,UAAA;MACA;MACA,KAAAF,WAAA;QACAC,MAAA;QACAJ,QAAA;QACAC,OAAA;MACA;IACA;IAEA;IACAkB,KAAAC,GAAA;MACAN,OAAA,CAAAC,GAAA,CAAAK,GAAA;MACA;MACA,KAAAlB,iBAAA;MACA;MACA,KAAAG,UAAA;MACA;MACA,KAAAF,WAAA,CAAAC,MAAA,GAAAgB,GAAA,CAAAhB,MAAA;MACA,KAAAD,WAAA,CAAAH,QAAA,GAAAoB,GAAA,CAAApB,QAAA;MACA,KAAAG,WAAA,CAAAF,OAAA,GAAAmB,GAAA,CAAAnB,OAAA;IACA;IAEA;IACA,MAAAoB,OAAA;MACA,KAAAnB,iBAAA;MACA,SAAAG,UAAA;QACAS,OAAA,CAAAC,GAAA,MAAAZ,WAAA;QACA,MAAAM,GAAA,SAAAhB,KAAA;UACAkB,GAAA;UACAD,MAAA;UACAhB,IAAA,OAAAS;QACA,GAAAmB,IAAA,CAAAC,MAAA;UACAT,OAAA,CAAAC,GAAA,CAAAQ,MAAA,CAAA7B,IAAA;UACA,IAAA6B,MAAA,CAAA7B,IAAA,CAAA8B,IAAA;YACAC,KAAA,CAAAF,MAAA,CAAA7B,IAAA,CAAAgC,GAAA;YACA,KAAAnB,OAAA;UACA;YACAkB,KAAA,CAAAF,MAAA,CAAA7B,IAAA,CAAAgC,GAAA;UACA;QACA;MACA;MACA,SAAArB,UAAA;QACAS,OAAA,CAAAC,GAAA,MAAAZ,WAAA;QACA,MAAAM,GAAA,SAAAhB,KAAA;UACAkB,GAAA;UACAD,MAAA;UACAhB,IAAA,OAAAS;QACA,GAAAmB,IAAA,CAAAC,MAAA;UACAT,OAAA,CAAAC,GAAA,CAAAQ,MAAA,CAAA7B,IAAA;UACA,IAAA6B,MAAA,CAAA7B,IAAA,CAAA8B,IAAA;YACAC,KAAA,CAAAF,MAAA,CAAA7B,IAAA,CAAAgC,GAAA;YACA,KAAAnB,OAAA;UACA;YACAkB,KAAA,CAAAF,MAAA,CAAA7B,IAAA,CAAAgC,GAAA;UACA;QACA;MACA;IACA;IACA;IACA,MAAAC,eAAAC,EAAA;MACAd,OAAA,CAAAC,GAAA,MAAAZ,WAAA;MACA,MAAAM,GAAA,SAAAhB,KAAA;QACAkB,GAAA;QACAD,MAAA;QACA;QACAhB,IAAA;UACAU,MAAA,EAAAwB;QACA;MACA;MACA,KAAArB,OAAA;IACA;EAEA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}