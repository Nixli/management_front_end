{"ast":null,"code":"import axios from 'axios';\nimport dayjs from 'dayjs';\nexport default {\n  data() {\n    return {\n      name: localStorage.getItem('name'),\n      count: \"报销金额\",\n      style: '报销类别',\n      reason: \"报销事由\",\n      note: \"备注\",\n      reimbursementID: '',\n      tableHeaderClassName: 'custom-table-header',\n      // 自定义的表头样式类名\n      list: [],\n      userFormData: {\n        date: dayjs().format('YYYY-MM-DD '),\n        amount: '',\n        category: '',\n        reason: '',\n        remarks: ''\n      },\n      pageno: 1,\n      pagesize: 4,\n      total: 0,\n      params: {\n        category: '',\n        bookId: localStorage.getItem('bookID')\n      },\n      bookID: localStorage.getItem('bookID')\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async accept(row) {\n      const data = {\n        reimbursementID: row.reimbursementID,\n        approvalStatus: '已通过'\n      };\n      const res = await axios({\n        url: '/updateReimbursement',\n        method: \"post\",\n        data: data\n      });\n      this.getList();\n    },\n    async reject(row) {\n      const data = {\n        reimbursementID: row.reimbursementID,\n        approvalStatus: '未通过'\n      };\n      const res = await axios({\n        url: '/updateReimbursement',\n        method: \"post\",\n        data: data\n      });\n      this.getList();\n    },\n    async getList() {\n      const res = await axios({\n        url: \"http://localhost:8080/reimbursement/findAll\",\n        method: \"get\",\n        params: {\n          ...this.params,\n          pageno: this.pageno,\n          pagesize: this.pagesize\n        }\n      });\n      this.list = res.data.data.map(item => {\n        return {\n          ...item,\n          createTime: dayjs(item.createTime).format('YYYY-MM-DD ')\n        };\n      });\n      this.total = res.data.count;\n    },\n    // 点击搜索\n    search() {\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["axios","dayjs","data","name","localStorage","getItem","count","style","reason","note","reimbursementID","tableHeaderClassName","list","userFormData","date","format","amount","category","remarks","pageno","pagesize","total","params","bookId","bookID","created","getList","methods","accept","row","approvalStatus","res","url","method","reject","map","item","createTime","search","pagechange"],"sources":["src/views/reimbursement/BossReimbursement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-card>\r\n                <span style=\"font-size: 18px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">用户报销</span>\r\n            </el-card>\r\n            <el-card>\r\n                <div>\r\n                    <!-- 右侧部分，包括查询输入框 -->\r\n                    <el-input placeholder=\"请输入查询内容\" prefix-icon=\"el-icon-search\" v-model=\"params.category\"\r\n                        style=\"width: 300px;\"></el-input>\r\n                    <el-button type=\"primary\" @click=\"search\">查询</el-button>\r\n                </div>\r\n                <el-table :data=\"list\" style=\"width: 100%;margin-top: 15px;\" :header-row-class-name=\"tableHeaderClassName\">\r\n                    <el-table-column prop=\"reimbursementId\" label=\"编号\" align=\"center\"> </el-table-column>\r\n                    <el-table-column prop=\"amount\" label=\"报销金额\" align=\"center\"> </el-table-column>\r\n                    <el-table-column prop=\"category\" label=\"报销类别\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"reason\" label=\"报销事由\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"approvalStatus\" label=\"审核状态\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"approver\" label=\"审核人\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"remarks\" label=\"备注\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"createTime\" label=\"申请时间\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"updateTime\" label=\"修改时间\" align=\"center\"></el-table-column>\r\n                    <el-table-column fixed=\"right\" label=\"操作\" align=\"center\" width=\"200px\">\r\n                        <template #default=\"{ row }\">\r\n                            <el-button  :disabled=\"row.approvalStatus !== '待审核'\" type=\"primary\" icon=\"el-icon-check\" circle @click=\"accept(row)\"></el-button>\r\n                            <el-button  :disabled=\"row.approvalStatus !== '待审核'\" type=\"danger\" icon=\"el-icon-close\" circle @click=\"reject(row)\"></el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <!-- 分页组件 -->\r\n                <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                    :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                </el-pagination>\r\n            </el-card>\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            name: localStorage.getItem('name'),\r\n            count: \"报销金额\",\r\n            style: '报销类别',\r\n            reason: \"报销事由\",\r\n            note: \"备注\",\r\n            reimbursementID: '',\r\n            tableHeaderClassName: 'custom-table-header',// 自定义的表头样式类名\r\n            list: [],\r\n            userFormData: {\r\n                date: dayjs().format('YYYY-MM-DD '),\r\n                amount: '',\r\n                category: '',\r\n                reason: '',\r\n                remarks: ''\r\n            },\r\n            pageno: 1,\r\n            pagesize: 4,\r\n            total: 0,\r\n            params: {\r\n                category: '',\r\n                bookId: localStorage.getItem('bookID')\r\n            },\r\n            bookID: localStorage.getItem('bookID')\r\n        }\r\n    },\r\n    created() {\r\n        this.getList()\r\n    },\r\n    methods: {\r\n\r\n        async accept(row) {\r\n            const data = {\r\n                reimbursementID: row.reimbursementID,\r\n                approvalStatus:'已通过'\r\n            }\r\n            const res = await axios({\r\n                url: '/updateReimbursement',\r\n                method: \"post\",\r\n                data: data\r\n            })\r\n            this.getList()\r\n        },\r\n        async reject(row) {\r\n            const data = {\r\n                reimbursementID: row.reimbursementID,\r\n                approvalStatus:'未通过'\r\n            }\r\n            const res = await axios({\r\n                url: '/updateReimbursement',\r\n                method: \"post\",\r\n                data: data\r\n            })\r\n            this.getList()\r\n        },\r\n\r\n        async getList() {\r\n            const res = await axios({\r\n                url: \"http://localhost:8080/reimbursement/findAll\",\r\n                method: \"get\",\r\n                params: {\r\n                    ...this.params,\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                }\r\n            });\r\n            this.list = res.data.data.map(item => {\r\n                return {\r\n                    ...item,\r\n                    createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\r\n                };\r\n            });\r\n            this.total = res.data.count;\r\n        },\r\n        // 点击搜索\r\n        search() {\r\n            this.getList()\r\n        },\r\n        // 页码改变\r\n        pagechange(pageno) {\r\n            // 条件改变\r\n            this.pageno = pageno\r\n            // 重新请求数据\r\n            this.getList()\r\n        },\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-input.is-disabled .el-input__inner {\r\n    background-color: #fff;\r\n    text-align: center;\r\n}\r\n\r\n.flex-container {\r\n    display: flex;\r\n}\r\n\r\n.charge-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.charge-header>div {\r\n    display: inline-block;\r\n    margin-right: 15px;\r\n}\r\n\r\n/* 修改标题行的颜色 */\r\n::v-deep .el-dialog__header {\r\n    background-color: rgb(243, 247, 249);\r\n    /* 替换为你想要的背景颜色值 */\r\n    color: #000000;\r\n    /* 替换为你想要的文字颜色值 */\r\n}\r\n\r\n::v-deep .custom-table-header th {\r\n    background-color: rgb(249, 251, 252);\r\n    /* 替换为你想要的背景颜色值 */\r\n    color: #000000;\r\n    /* 替换为你想要的文字颜色值 */\r\n}\r\n\r\n.button-group {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* 将按钮平均分布在弹窗底部 */\r\n    margin-top: 20px;\r\n    /* 为按钮组设置上边距，以调整按钮与输入框的间隔 */\r\n    margin-right: 80px;\r\n}\r\n</style>"],"mappings":"AA0CA,OAAAA,KAAA;AACA,OAAAC,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;MACAC,KAAA;MACAC,MAAA;MACAC,IAAA;MACAC,eAAA;MACAC,oBAAA;MAAA;MACAC,IAAA;MACAC,YAAA;QACAC,IAAA,EAAAb,KAAA,GAAAc,MAAA;QACAC,MAAA;QACAC,QAAA;QACAT,MAAA;QACAU,OAAA;MACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACAC,MAAA;QACAL,QAAA;QACAM,MAAA,EAAAnB,YAAA,CAAAC,OAAA;MACA;MACAmB,MAAA,EAAApB,YAAA,CAAAC,OAAA;IACA;EACA;EACAoB,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IAEA,MAAAC,OAAAC,GAAA;MACA,MAAA3B,IAAA;QACAQ,eAAA,EAAAmB,GAAA,CAAAnB,eAAA;QACAoB,cAAA;MACA;MACA,MAAAC,GAAA,SAAA/B,KAAA;QACAgC,GAAA;QACAC,MAAA;QACA/B,IAAA,EAAAA;MACA;MACA,KAAAwB,OAAA;IACA;IACA,MAAAQ,OAAAL,GAAA;MACA,MAAA3B,IAAA;QACAQ,eAAA,EAAAmB,GAAA,CAAAnB,eAAA;QACAoB,cAAA;MACA;MACA,MAAAC,GAAA,SAAA/B,KAAA;QACAgC,GAAA;QACAC,MAAA;QACA/B,IAAA,EAAAA;MACA;MACA,KAAAwB,OAAA;IACA;IAEA,MAAAA,QAAA;MACA,MAAAK,GAAA,SAAA/B,KAAA;QACAgC,GAAA;QACAC,MAAA;QACAX,MAAA;UACA,QAAAA,MAAA;UACAH,MAAA,OAAAA,MAAA;UACAC,QAAA,OAAAA;QACA;MACA;MACA,KAAAR,IAAA,GAAAmB,GAAA,CAAA7B,IAAA,CAAAA,IAAA,CAAAiC,GAAA,CAAAC,IAAA;QACA;UACA,GAAAA,IAAA;UACAC,UAAA,EAAApC,KAAA,CAAAmC,IAAA,CAAAC,UAAA,EAAAtB,MAAA;QACA;MACA;MACA,KAAAM,KAAA,GAAAU,GAAA,CAAA7B,IAAA,CAAAI,KAAA;IACA;IACA;IACAgC,OAAA;MACA,KAAAZ,OAAA;IACA;IACA;IACAa,WAAApB,MAAA;MACA;MACA,KAAAA,MAAA,GAAAA,MAAA;MACA;MACA,KAAAO,OAAA;IACA;EACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}