{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.barConfig = void 0;\nvar barConfig = {\n  /**\r\n   * @description Whether to display this bar chart\r\n   * @type {Boolean}\r\n   * @default show = true\r\n   */\n  show: true,\n  /**\r\n   * @description Legend name\r\n   * @type {String}\r\n   * @default name = ''\r\n   */\n  name: '',\n  /**\r\n   * @description Data stacking\r\n   * The data value of the series element of the same stack\r\n   * will be superimposed (the latter value will be superimposed on the previous value)\r\n   * @type {String}\r\n   * @default stack = ''\r\n   */\n  stack: '',\n  /**\r\n   * @description Bar shape type\r\n   * @type {String}\r\n   * @default shapeType = 'normal'\r\n   * @example shapeType = 'normal' | 'leftEchelon' | 'rightEchelon'\r\n   */\n  shapeType: 'normal',\n  /**\r\n   * @description Echelon bar sharpness offset\r\n   * @type {Number}\r\n   * @default echelonOffset = 10\r\n   */\n  echelonOffset: 10,\n  /**\r\n   * @description Bar width\r\n   * This property should be set on the last 'bar' series\r\n   * in this coordinate system to take effect and will be in effect\r\n   * for all 'bar' series in this coordinate system\r\n   * @type {String|Number}\r\n   * @default barWidth = 'auto'\r\n   * @example barWidth = 'auto' | '10%' | 20\r\n   */\n  barWidth: 'auto',\n  /**\r\n   * @description Bar gap\r\n   * This property should be set on the last 'bar' series\r\n   * in this coordinate system to take effect and will be in effect\r\n   * for all 'bar' series in this coordinate system\r\n   * @type {String|Number}\r\n   * @default barGap = '30%'\r\n   * @example barGap = '30%' | 30\r\n   */\n  barGap: '30%',\n  /**\r\n   * @description Bar category gap\r\n   * This property should be set on the last 'bar' series\r\n   * in this coordinate system to take effect and will be in effect\r\n   * for all 'bar' series in this coordinate system\r\n   * @type {String|Number}\r\n   * @default barCategoryGap = '20%'\r\n   * @example barCategoryGap = '20%' | 20\r\n   */\n  barCategoryGap: '20%',\n  /**\r\n   * @description Bar x axis index\r\n   * @type {Number}\r\n   * @default xAxisIndex = 0\r\n   * @example xAxisIndex = 0 | 1\r\n   */\n  xAxisIndex: 0,\n  /**\r\n   * @description Bar y axis index\r\n   * @type {Number}\r\n   * @default yAxisIndex = 0\r\n   * @example yAxisIndex = 0 | 1\r\n   */\n  yAxisIndex: 0,\n  /**\r\n   * @description Bar chart data\r\n   * @type {Array}\r\n   * @default data = []\r\n   * @example data = [100, 200, 300]\r\n   */\n  data: [],\n  /**\r\n   * @description Background bar configuration\r\n   * @type {Object}\r\n   */\n  backgroundBar: {\n    /**\r\n     * @description Whether to display background bar\r\n     * @type {Boolean}\r\n     * @default show = false\r\n     */\n    show: false,\n    /**\r\n     * @description Background bar width\r\n     * @type {String|Number}\r\n     * @default width = 'auto'\r\n     * @example width = 'auto' | '30%' | 30\r\n     */\n    width: 'auto',\n    /**\r\n     * @description Background bar default style configuration\r\n     * @type {Object}\r\n     * @default style = {Configuration Of Class Style}\r\n     */\n    style: {\n      fill: 'rgba(200, 200, 200, .4)'\n    }\n  },\n  /**\r\n   * @description Bar label configuration\r\n   * @type {Object}\r\n   */\n  label: {\n    /**\r\n     * @description Whether to display bar label\r\n     * @type {Boolean}\r\n     * @default show = false\r\n     */\n    show: false,\n    /**\r\n     * @description Bar label position\r\n     * @type {String}\r\n     * @default position = 'top'\r\n     * @example position = 'top' | 'center' | 'bottom'\r\n     */\n    position: 'top',\n    /**\r\n     * @description Bar label offset\r\n     * @type {Array}\r\n     * @default offset = [0, -10]\r\n     */\n    offset: [0, -10],\n    /**\r\n     * @description Bar label formatter\r\n     * @type {String|Function}\r\n     * @default formatter = null\r\n     * @example formatter = '{value}ä»¶'\r\n     * @example formatter = (dataItem) => (dataItem.value)\r\n     */\n    formatter: null,\n    /**\r\n     * @description Bar label default style configuration\r\n     * @type {Object}\r\n     * @default style = {Configuration Of Class Style}\r\n     */\n    style: {\n      fontSize: 10\n    }\n  },\n  /**\r\n   * @description Bar gradient configuration\r\n   * @type {Object}\r\n   */\n  gradient: {\n    /**\r\n     * @description Gradient color (Hex|rgb|rgba)\r\n     * @type {Array}\r\n     * @default color = []\r\n     */\n    color: [],\n    /**\r\n     * @description Local gradient\r\n     * @type {Boolean}\r\n     * @default local = true\r\n     */\n    local: true\n  },\n  /**\r\n   * @description Bar style default configuration\r\n   * @type {Object}\r\n   * @default style = {Configuration Of Class Style}\r\n   */\n  barStyle: {},\n  /**\r\n   * @description Independent color mode\r\n   * When set to true, independent color mode is enabled\r\n   * @type {Boolean}\r\n   * @default independentColor = false\r\n   */\n  independentColor: false,\n  /**\r\n   * @description Independent colors\r\n   * Only effective when independent color mode is enabled\r\n   * Default value is the same as the color in the root configuration\r\n   * Two-dimensional color array can produce gradient colors\r\n   * @type {Array}\r\n   * @example independentColor = ['#fff', '#000']\r\n   * @example independentColor = [['#fff', '#000'], '#000']\r\n   */\n  independentColors: [],\n  /**\r\n   * @description Bar chart render level\r\n   * Priority rendering high level\r\n   * @type {Number}\r\n   * @default rLevel = 0\r\n   */\n  rLevel: 0,\n  /**\r\n   * @description Bar animation curve\r\n   * @type {String}\r\n   * @default animationCurve = 'easeOutCubic'\r\n   */\n  animationCurve: 'easeOutCubic',\n  /**\r\n   * @description Bar animation frame\r\n   * @type {Number}\r\n   * @default animationFrame = 50\r\n   */\n  animationFrame: 50\n};\nexports.barConfig = barConfig;","map":{"version":3,"names":["Object","defineProperty","exports","value","barConfig","show","name","stack","shapeType","echelonOffset","barWidth","barGap","barCategoryGap","xAxisIndex","yAxisIndex","data","backgroundBar","width","style","fill","label","position","offset","formatter","fontSize","gradient","color","local","barStyle","independentColor","independentColors","rLevel","animationCurve","animationFrame"],"sources":["F:/vue_workspace/management_front_end/node_modules/@jiaminghi/charts/lib/config/bar.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.barConfig = void 0;\r\nvar barConfig = {\r\n  /**\r\n   * @description Whether to display this bar chart\r\n   * @type {Boolean}\r\n   * @default show = true\r\n   */\r\n  show: true,\r\n\r\n  /**\r\n   * @description Legend name\r\n   * @type {String}\r\n   * @default name = ''\r\n   */\r\n  name: '',\r\n\r\n  /**\r\n   * @description Data stacking\r\n   * The data value of the series element of the same stack\r\n   * will be superimposed (the latter value will be superimposed on the previous value)\r\n   * @type {String}\r\n   * @default stack = ''\r\n   */\r\n  stack: '',\r\n\r\n  /**\r\n   * @description Bar shape type\r\n   * @type {String}\r\n   * @default shapeType = 'normal'\r\n   * @example shapeType = 'normal' | 'leftEchelon' | 'rightEchelon'\r\n   */\r\n  shapeType: 'normal',\r\n\r\n  /**\r\n   * @description Echelon bar sharpness offset\r\n   * @type {Number}\r\n   * @default echelonOffset = 10\r\n   */\r\n  echelonOffset: 10,\r\n\r\n  /**\r\n   * @description Bar width\r\n   * This property should be set on the last 'bar' series\r\n   * in this coordinate system to take effect and will be in effect\r\n   * for all 'bar' series in this coordinate system\r\n   * @type {String|Number}\r\n   * @default barWidth = 'auto'\r\n   * @example barWidth = 'auto' | '10%' | 20\r\n   */\r\n  barWidth: 'auto',\r\n\r\n  /**\r\n   * @description Bar gap\r\n   * This property should be set on the last 'bar' series\r\n   * in this coordinate system to take effect and will be in effect\r\n   * for all 'bar' series in this coordinate system\r\n   * @type {String|Number}\r\n   * @default barGap = '30%'\r\n   * @example barGap = '30%' | 30\r\n   */\r\n  barGap: '30%',\r\n\r\n  /**\r\n   * @description Bar category gap\r\n   * This property should be set on the last 'bar' series\r\n   * in this coordinate system to take effect and will be in effect\r\n   * for all 'bar' series in this coordinate system\r\n   * @type {String|Number}\r\n   * @default barCategoryGap = '20%'\r\n   * @example barCategoryGap = '20%' | 20\r\n   */\r\n  barCategoryGap: '20%',\r\n\r\n  /**\r\n   * @description Bar x axis index\r\n   * @type {Number}\r\n   * @default xAxisIndex = 0\r\n   * @example xAxisIndex = 0 | 1\r\n   */\r\n  xAxisIndex: 0,\r\n\r\n  /**\r\n   * @description Bar y axis index\r\n   * @type {Number}\r\n   * @default yAxisIndex = 0\r\n   * @example yAxisIndex = 0 | 1\r\n   */\r\n  yAxisIndex: 0,\r\n\r\n  /**\r\n   * @description Bar chart data\r\n   * @type {Array}\r\n   * @default data = []\r\n   * @example data = [100, 200, 300]\r\n   */\r\n  data: [],\r\n\r\n  /**\r\n   * @description Background bar configuration\r\n   * @type {Object}\r\n   */\r\n  backgroundBar: {\r\n    /**\r\n     * @description Whether to display background bar\r\n     * @type {Boolean}\r\n     * @default show = false\r\n     */\r\n    show: false,\r\n\r\n    /**\r\n     * @description Background bar width\r\n     * @type {String|Number}\r\n     * @default width = 'auto'\r\n     * @example width = 'auto' | '30%' | 30\r\n     */\r\n    width: 'auto',\r\n\r\n    /**\r\n     * @description Background bar default style configuration\r\n     * @type {Object}\r\n     * @default style = {Configuration Of Class Style}\r\n     */\r\n    style: {\r\n      fill: 'rgba(200, 200, 200, .4)'\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @description Bar label configuration\r\n   * @type {Object}\r\n   */\r\n  label: {\r\n    /**\r\n     * @description Whether to display bar label\r\n     * @type {Boolean}\r\n     * @default show = false\r\n     */\r\n    show: false,\r\n\r\n    /**\r\n     * @description Bar label position\r\n     * @type {String}\r\n     * @default position = 'top'\r\n     * @example position = 'top' | 'center' | 'bottom'\r\n     */\r\n    position: 'top',\r\n\r\n    /**\r\n     * @description Bar label offset\r\n     * @type {Array}\r\n     * @default offset = [0, -10]\r\n     */\r\n    offset: [0, -10],\r\n\r\n    /**\r\n     * @description Bar label formatter\r\n     * @type {String|Function}\r\n     * @default formatter = null\r\n     * @example formatter = '{value}ä»¶'\r\n     * @example formatter = (dataItem) => (dataItem.value)\r\n     */\r\n    formatter: null,\r\n\r\n    /**\r\n     * @description Bar label default style configuration\r\n     * @type {Object}\r\n     * @default style = {Configuration Of Class Style}\r\n     */\r\n    style: {\r\n      fontSize: 10\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @description Bar gradient configuration\r\n   * @type {Object}\r\n   */\r\n  gradient: {\r\n    /**\r\n     * @description Gradient color (Hex|rgb|rgba)\r\n     * @type {Array}\r\n     * @default color = []\r\n     */\r\n    color: [],\r\n\r\n    /**\r\n     * @description Local gradient\r\n     * @type {Boolean}\r\n     * @default local = true\r\n     */\r\n    local: true\r\n  },\r\n\r\n  /**\r\n   * @description Bar style default configuration\r\n   * @type {Object}\r\n   * @default style = {Configuration Of Class Style}\r\n   */\r\n  barStyle: {},\r\n\r\n  /**\r\n   * @description Independent color mode\r\n   * When set to true, independent color mode is enabled\r\n   * @type {Boolean}\r\n   * @default independentColor = false\r\n   */\r\n  independentColor: false,\r\n\r\n  /**\r\n   * @description Independent colors\r\n   * Only effective when independent color mode is enabled\r\n   * Default value is the same as the color in the root configuration\r\n   * Two-dimensional color array can produce gradient colors\r\n   * @type {Array}\r\n   * @example independentColor = ['#fff', '#000']\r\n   * @example independentColor = [['#fff', '#000'], '#000']\r\n   */\r\n  independentColors: [],\r\n\r\n  /**\r\n   * @description Bar chart render level\r\n   * Priority rendering high level\r\n   * @type {Number}\r\n   * @default rLevel = 0\r\n   */\r\n  rLevel: 0,\r\n\r\n  /**\r\n   * @description Bar animation curve\r\n   * @type {String}\r\n   * @default animationCurve = 'easeOutCubic'\r\n   */\r\n  animationCurve: 'easeOutCubic',\r\n\r\n  /**\r\n   * @description Bar animation frame\r\n   * @type {Number}\r\n   * @default animationFrame = 50\r\n   */\r\n  animationFrame: 50\r\n};\r\nexports.barConfig = barConfig;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,IAAIA,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAE,IAAI;EAEV;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAE,EAAE;EAER;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAE,EAAE;EAET;AACF;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE,QAAQ;EAEnB;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,EAAE;EAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,MAAM;EAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE,KAAK;EAEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,cAAc,EAAE,KAAK;EAErB;AACF;AACA;AACA;AACA;AACA;EACEC,UAAU,EAAE,CAAC;EAEb;AACF;AACA;AACA;AACA;AACA;EACEC,UAAU,EAAE,CAAC;EAEb;AACF;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAE,EAAE;EAER;AACF;AACA;AACA;EACEC,aAAa,EAAE;IACb;AACJ;AACA;AACA;AACA;IACIX,IAAI,EAAE,KAAK;IAEX;AACJ;AACA;AACA;AACA;AACA;IACIY,KAAK,EAAE,MAAM;IAEb;AACJ;AACA;AACA;AACA;IACIC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR;EACF,CAAC;EAED;AACF;AACA;AACA;EACEC,KAAK,EAAE;IACL;AACJ;AACA;AACA;AACA;IACIf,IAAI,EAAE,KAAK;IAEX;AACJ;AACA;AACA;AACA;AACA;IACIgB,QAAQ,EAAE,KAAK;IAEf;AACJ;AACA;AACA;AACA;IACIC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAEhB;AACJ;AACA;AACA;AACA;AACA;AACA;IACIC,SAAS,EAAE,IAAI;IAEf;AACJ;AACA;AACA;AACA;IACIL,KAAK,EAAE;MACLM,QAAQ,EAAE;IACZ;EACF,CAAC;EAED;AACF;AACA;AACA;EACEC,QAAQ,EAAE;IACR;AACJ;AACA;AACA;AACA;IACIC,KAAK,EAAE,EAAE;IAET;AACJ;AACA;AACA;AACA;IACIC,KAAK,EAAE;EACT,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE,CAAC,CAAC;EAEZ;AACF;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,KAAK;EAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,EAAE;EAErB;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE,CAAC;EAET;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAE,cAAc;EAE9B;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAE;AAClB,CAAC;AACD/B,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}