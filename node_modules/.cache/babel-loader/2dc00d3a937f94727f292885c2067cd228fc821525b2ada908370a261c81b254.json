{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    //密码校验\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.userFormData.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.userFormData.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      //图片地址\n      imageUrl: '',\n      list: [],\n      // 控制弹框的显示与隐藏\n      dialogFormVisible: false,\n      // 表单的数据\n      userFormData: {\n        employeeID: localStorage.getItem('employeeID'),\n        employeeDes: '',\n        sex: '',\n        password: '',\n        checkPass: '',\n        phone: '',\n        email: '',\n        bankcardID: '',\n        createTime: localStorage.getItem('createTime'),\n        state: localStorage.getItem('state'),\n        storeID: localStorage.getItem('storeID'),\n        roleID: localStorage.getItem('roleID'),\n        accountBook: {\n          bookID: localStorage.getItem('bookID')\n        } // 使用关系属性名\n      },\n      //密码校验规则\n      rules: {\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8080/employee/findByEmployeeID\",\n        params: {\n          employeeID: this.userFormData.employeeID\n        }\n      });\n      //回显用户信息\n      this.userFormData.employeeDes = res.data.data.employeeDes;\n      this.userFormData.sex = res.data.data.sex;\n      this.userFormData.phone = res.data.data.phone;\n      this.userFormData.email = res.data.data.email;\n      this.userFormData.bankcardID = res.data.data.bankcardID;\n    },\n    async submit() {\n      const data = {\n        ...this.userFormData\n      };\n      const res = await axios({\n        url: 'http://localhost:8080/employee/updateEmployee',\n        method: 'post',\n        data: data\n      });\n      console.log(res.data.code);\n      if (res.data.code === 200) {\n        this.$message({\n          message: '修改成功',\n          type: 'success'\n        });\n      } else {\n        this.$message.error('修改失败');\n      }\n    },\n    handleAvatarSuccess(res, file) {\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 200;\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 200MB!');\n      }\n      return isJPG && isLt2M;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validatePass","rule","value","callback","Error","userFormData","checkPass","$refs","ruleForm","validateField","validatePass2","password","imageUrl","list","dialogFormVisible","employeeID","localStorage","getItem","employeeDes","sex","phone","email","bankcardID","createTime","state","storeID","roleID","accountBook","bookID","rules","validator","trigger","created","getList","methods","res","method","url","params","submit","console","log","code","$message","message","type","error","handleAvatarSuccess","file","URL","createObjectURL","raw","beforeAvatarUpload","isJPG","isLt2M","size"],"sources":["src/views/personal/Personal.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <el-card style=\"margin-top: 20px;\">\r\n\r\n            <el-card>\r\n                <span\r\n                    style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">个人信息</span>\r\n            </el-card>\r\n            <div class=\"container\">\r\n                <div class=\"left\" style=\"margin-top: 20px; height: 500px; width: 100%;\">\r\n                    <el-upload class=\"avatar-uploader\" action=\"http://localhost:8080/employee/uploadEmployeeImg\"\r\n                        :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">\r\n                        <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                    </el-upload>\r\n                </div>\r\n                <div class=\"right\" style=\"margin-top: 20px; height: 500px; width: 100%;\">\r\n                    <el-form :model=\"userFormData\" class=\"demo-ruleForm\" label-width=\"100px\" status-icon :rules=\"rules\">\r\n                        <el-form-item label=\"员工姓名\">\r\n                            <el-input v-model=\"userFormData.employeeDes\" placeholder=\"员工姓名\"></el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"性别\">\r\n                            <template>\r\n                                <el-radio v-model=\"userFormData.sex\" label=\"男\">男</el-radio>\r\n                                <el-radio v-model=\"userFormData.sex\" label=\"女\">女</el-radio>\r\n                            </template>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"密码\" prop=\"pass\">\r\n                            <el-input v-model=\"userFormData.password\" type=\"password\" autocomplete=\"off\"></el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n                            <el-input v-model=\"userFormData.checkPass\" type=\"password\" autocomplete=\"off\"></el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item prop=\"phone\" label=\"手机号\" :rules=\"[\r\n                            { required: true, message: '请输入手机号', trigger: 'blur' },\r\n                            { pattern: /^1[3456789]\\d{9}$/, message: '请输入正确的手机号', trigger: ['blur', 'change'] }\r\n                        ]\">\r\n                            <el-input v-model=\"userFormData.phone\"></el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item prop=\"email\" label=\"邮箱\" :rules=\"[\r\n                            { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n                            { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n                        ]\">\r\n                            <el-input v-model=\"userFormData.email\"></el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"银行卡号\">\r\n                            <el-input v-model=\"userFormData.bankcardID\" placeholder=\"银行卡号\"></el-input>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item style=\"margin-top: 20px;\">\r\n                            <el-button @click=\"submit\">修改个人信息</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </el-card>\r\n    </el-card>\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    data() {\r\n        //密码校验\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (this.userFormData.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.userFormData.password) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            //图片地址\r\n            imageUrl: '',\r\n            list: [],\r\n            // 控制弹框的显示与隐藏\r\n            dialogFormVisible: false,\r\n            // 表单的数据\r\n            userFormData: {\r\n                employeeID: localStorage.getItem('employeeID'),\r\n                employeeDes: '',\r\n                sex: '',\r\n                password: '',\r\n                checkPass: '',\r\n                phone: '',\r\n                email: '',\r\n                bankcardID: '',\r\n                createTime: localStorage.getItem('createTime'),\r\n                state: localStorage.getItem('state'),\r\n                storeID: localStorage.getItem('storeID'),\r\n                roleID: localStorage.getItem('roleID'),\r\n                accountBook: { bookID: localStorage.getItem('bookID') } // 使用关系属性名\r\n            },\r\n            //密码校验规则\r\n            rules: {\r\n                password: [\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                checkPass: [\r\n                    { validator: validatePass2, trigger: 'blur' }\r\n                ]\r\n            },\r\n\r\n        };\r\n    },\r\n    created() {\r\n        this.getList()\r\n    },\r\n\r\n    methods: {\r\n        async getList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8080/employee/findByEmployeeID\",\r\n                params: {\r\n                    employeeID: this.userFormData.employeeID\r\n                },\r\n            });\r\n            //回显用户信息\r\n            this.userFormData.employeeDes = res.data.data.employeeDes\r\n            this.userFormData.sex = res.data.data.sex\r\n            this.userFormData.phone = res.data.data.phone\r\n            this.userFormData.email = res.data.data.email\r\n            this.userFormData.bankcardID = res.data.data.bankcardID\r\n        },\r\n\r\n        async submit() {\r\n            const data = { ...this.userFormData }\r\n            const res = await axios({\r\n                url: 'http://localhost:8080/employee/updateEmployee',\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            console.log(res.data.code)\r\n            if (res.data.code === 200) {\r\n                this.$message({\r\n                    message: '修改成功',\r\n                    type: 'success'\r\n                });\r\n            } else {\r\n                this.$message.error('修改失败');\r\n            }\r\n        },\r\n        handleAvatarSuccess(res, file) {\r\n            this.imageUrl = URL.createObjectURL(file.raw);\r\n        },\r\n        beforeAvatarUpload(file) {\r\n            const isJPG = file.type === 'image/jpeg';\r\n            const isLt2M = file.size / 1024 / 1024 < 200;\r\n\r\n            if (!isJPG) {\r\n                this.$message.error('上传头像图片只能是 JPG 格式!');\r\n            }\r\n            if (!isLt2M) {\r\n                this.$message.error('上传头像图片大小不能超过 200MB!');\r\n            }\r\n            return isJPG && isLt2M;\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n<style>\r\n.container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 50px;\r\n}\r\n\r\n.left {\r\n    width: 50%;\r\n    margin-top: 100px;\r\n    margin-left: 250px;\r\n}\r\n\r\n.right {\r\n    width: 50%;\r\n    margin-right: 250px;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n}\r\n\r\n.avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}